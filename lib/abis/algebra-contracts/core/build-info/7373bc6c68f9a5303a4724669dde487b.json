{"id":"7373bc6c68f9a5303a4724669dde487b","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlEnumerable.sol\";\nimport \"./AccessControl.sol\";\nimport \"../utils/structs/EnumerableSet.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    mapping(bytes32 => EnumerableSet.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override {\n        super._grantRole(role, account);\n        _roleMembers[role].add(account);\n    }\n\n    /**\n     * @dev Overload {_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override {\n        super._revokeRole(role, account);\n        _roleMembers[role].remove(account);\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable2Step.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable2Step.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./Ownable.sol\";\n\n/**\n * @dev Contract module which provides access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership} and {acceptOwnership}.\n *\n * This module is used through inheritance. It will make available all functions\n * from parent (Ownable).\n */\nabstract contract Ownable2Step is Ownable {\n    address private _pendingOwner;\n\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Returns the address of the pending owner.\n     */\n    function pendingOwner() public view virtual returns (address) {\n        return _pendingOwner;\n    }\n\n    /**\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\n        _pendingOwner = newOwner;\n        emit OwnershipTransferStarted(owner(), newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual override {\n        delete _pendingOwner;\n        super._transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev The new owner accepts the ownership transfer.\n     */\n    function acceptOwnership() public virtual {\n        address sender = _msgSender();\n        require(pendingOwner() == sender, \"Ownable2Step: caller is not the new owner\");\n        _transferOwnership(sender);\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/AlgebraCommunityVault.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity =0.8.20;\n\nimport './libraries/SafeTransfer.sol';\nimport './libraries/FullMath.sol';\n\nimport './interfaces/IAlgebraFactory.sol';\nimport './interfaces/vault/IAlgebraCommunityVault.sol';\n\n/// @title Algebra community fee vault\n/// @notice Community fee from pools is sent here, if it is enabled\n/// @dev Role system is used to withdraw tokens\n/// @dev Version: Algebra Integral 1.2\ncontract AlgebraCommunityVault is IAlgebraCommunityVault {\n  /// @dev The role can be granted in AlgebraFactory\n  bytes32 public constant COMMUNITY_FEE_WITHDRAWER_ROLE = keccak256('COMMUNITY_FEE_WITHDRAWER');\n  /// @dev The role can be granted in AlgebraFactory\n  bytes32 public constant COMMUNITY_FEE_VAULT_ADMINISTRATOR = keccak256('COMMUNITY_FEE_VAULT_ADMINISTRATOR');\n  address private immutable factory;\n\n  /// @notice Address to which community fees are sent from vault\n  address public communityFeeReceiver;\n  /// @notice The percentage of the protocol fee that Algebra will receive\n  /// @dev Value in thousandths,i.e. 1e-3\n  uint16 public algebraFee;\n  /// @notice Represents whether there is a new Algebra fee proposal or not\n  bool public hasNewAlgebraFeeProposal;\n  /// @notice Suggested Algebra fee value\n  uint16 public proposedNewAlgebraFee;\n  /// @notice Address of recipient Algebra part of community fee\n  address public algebraFeeReceiver;\n  /// @notice Address of Algebra fee manager\n  address public algebraFeeManager;\n  address private _pendingAlgebraFeeManager;\n\n  uint16 private constant ALGEBRA_FEE_DENOMINATOR = 1000;\n\n  modifier onlyAdministrator() {\n    require(IAlgebraFactory(factory).hasRoleOrOwner(COMMUNITY_FEE_VAULT_ADMINISTRATOR, msg.sender), 'only administrator');\n    _;\n  }\n\n  modifier onlyWithdrawer() {\n    require(msg.sender == algebraFeeManager || IAlgebraFactory(factory).hasRoleOrOwner(COMMUNITY_FEE_WITHDRAWER_ROLE, msg.sender), 'only withdrawer');\n    _;\n  }\n\n  modifier onlyAlgebraFeeManager() {\n    require(msg.sender == algebraFeeManager, 'only algebra fee manager');\n    _;\n  }\n\n  constructor(address _factory, address _algebraFeeManager) {\n    (factory, algebraFeeManager) = (_factory, _algebraFeeManager);\n  }\n\n  /// @inheritdoc IAlgebraCommunityVault\n  function withdraw(address token, uint256 amount) external override onlyWithdrawer {\n    (uint16 _algebraFee, address _algebraFeeReceiver, address _communityFeeReceiver) = _readAndVerifyWithdrawSettings();\n    _withdraw(token, _communityFeeReceiver, amount, _algebraFee, _algebraFeeReceiver);\n  }\n\n  /// @inheritdoc IAlgebraCommunityVault\n  function withdrawTokens(WithdrawTokensParams[] calldata params) external override onlyWithdrawer {\n    uint256 paramsLength = params.length;\n    (uint16 _algebraFee, address _algebraFeeReceiver, address _communityFeeReceiver) = _readAndVerifyWithdrawSettings();\n\n    unchecked {\n      for (uint256 i; i < paramsLength; ++i) _withdraw(params[i].token, _communityFeeReceiver, params[i].amount, _algebraFee, _algebraFeeReceiver);\n    }\n  }\n\n  function _readAndVerifyWithdrawSettings() private view returns (uint16 _algebraFee, address _algebraFeeReceiver, address _communityFeeReceiver) {\n    (_algebraFee, _algebraFeeReceiver, _communityFeeReceiver) = (algebraFee, algebraFeeReceiver, communityFeeReceiver);\n    if (_algebraFee != 0) require(_algebraFeeReceiver != address(0), 'invalid algebra fee receiver');\n    require(_communityFeeReceiver != address(0), 'invalid receiver');\n  }\n\n  function _withdraw(address token, address to, uint256 amount, uint16 _algebraFee, address _algebraFeeReceiver) private {\n    uint256 withdrawAmount = amount;\n    if (_algebraFee != 0) {\n      uint256 algebraFeeAmount = FullMath.mulDivRoundingUp(withdrawAmount, _algebraFee, ALGEBRA_FEE_DENOMINATOR);\n      withdrawAmount -= algebraFeeAmount;\n      SafeTransfer.safeTransfer(token, _algebraFeeReceiver, algebraFeeAmount);\n      emit AlgebraTokensWithdrawal(token, _algebraFeeReceiver, algebraFeeAmount);\n    }\n\n    SafeTransfer.safeTransfer(token, to, withdrawAmount);\n    emit TokensWithdrawal(token, to, withdrawAmount);\n  }\n\n  // ### algebra factory owner permissioned actions ###\n\n  /// @inheritdoc IAlgebraCommunityVault\n  function acceptAlgebraFeeChangeProposal(uint16 newAlgebraFee) external override onlyAdministrator {\n    require(hasNewAlgebraFeeProposal, 'not proposed');\n    require(newAlgebraFee == proposedNewAlgebraFee, 'invalid new fee');\n\n    // note that the new value will be used for previously accumulated tokens that have not yet been withdrawn\n    algebraFee = newAlgebraFee;\n    (proposedNewAlgebraFee, hasNewAlgebraFeeProposal) = (0, false);\n    emit AlgebraFee(newAlgebraFee);\n  }\n\n  /// @inheritdoc IAlgebraCommunityVault\n  function changeCommunityFeeReceiver(address newCommunityFeeReceiver) external override onlyAdministrator {\n    require(newCommunityFeeReceiver != address(0));\n    require(newCommunityFeeReceiver != communityFeeReceiver);\n    communityFeeReceiver = newCommunityFeeReceiver;\n    emit CommunityFeeReceiver(newCommunityFeeReceiver);\n  }\n\n  // ### algebra fee manager permissioned actions ###\n\n  /// @inheritdoc IAlgebraCommunityVault\n  function transferAlgebraFeeManagerRole(address _newAlgebraFeeManager) external override onlyAlgebraFeeManager {\n    _pendingAlgebraFeeManager = _newAlgebraFeeManager;\n    emit PendingAlgebraFeeManager(_newAlgebraFeeManager);\n  }\n\n  /// @inheritdoc IAlgebraCommunityVault\n  function acceptAlgebraFeeManagerRole() external override {\n    require(msg.sender == _pendingAlgebraFeeManager);\n    (_pendingAlgebraFeeManager, algebraFeeManager) = (address(0), msg.sender);\n    emit AlgebraFeeManager(msg.sender);\n  }\n\n  /// @inheritdoc IAlgebraCommunityVault\n  function proposeAlgebraFeeChange(uint16 newAlgebraFee) external override onlyAlgebraFeeManager {\n    require(newAlgebraFee <= ALGEBRA_FEE_DENOMINATOR);\n    require(newAlgebraFee != proposedNewAlgebraFee && newAlgebraFee != algebraFee);\n    (proposedNewAlgebraFee, hasNewAlgebraFeeProposal) = (newAlgebraFee, true);\n    emit AlgebraFeeProposal(newAlgebraFee);\n  }\n\n  /// @inheritdoc IAlgebraCommunityVault\n  function cancelAlgebraFeeChangeProposal() external override onlyAlgebraFeeManager {\n    (proposedNewAlgebraFee, hasNewAlgebraFeeProposal) = (0, false);\n    emit CancelAlgebraFeeProposal();\n  }\n\n  /// @inheritdoc IAlgebraCommunityVault\n  function changeAlgebraFeeReceiver(address newAlgebraFeeReceiver) external override onlyAlgebraFeeManager {\n    require(newAlgebraFeeReceiver != address(0));\n    require(newAlgebraFeeReceiver != algebraFeeReceiver);\n    algebraFeeReceiver = newAlgebraFeeReceiver;\n    emit AlgebraFeeReceiver(newAlgebraFeeReceiver);\n  }\n}\n"},"contracts/AlgebraFactory.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity =0.8.20;\n\nimport './libraries/Constants.sol';\n\nimport './interfaces/IAlgebraFactory.sol';\nimport './interfaces/IAlgebraPool.sol';\nimport './interfaces/IAlgebraPoolDeployer.sol';\nimport './interfaces/vault/IAlgebraVaultFactory.sol';\nimport './interfaces/plugin/IAlgebraPluginFactory.sol';\n\nimport './AlgebraCommunityVault.sol';\n\nimport '@openzeppelin/contracts/access/Ownable2Step.sol';\nimport '@openzeppelin/contracts/access/AccessControlEnumerable.sol';\nimport '@openzeppelin/contracts/security/ReentrancyGuard.sol';\n\n/// @title Algebra factory\n/// @notice Is used to deploy pools and its plugins\n/// @dev Version: Algebra Integral 1.2\ncontract AlgebraFactory is IAlgebraFactory, Ownable2Step, AccessControlEnumerable, ReentrancyGuard {\n  /// @inheritdoc IAlgebraFactory\n  bytes32 public constant override POOLS_ADMINISTRATOR_ROLE = keccak256('POOLS_ADMINISTRATOR'); // it`s here for the public visibility of the value\n\n  /// @inheritdoc IAlgebraFactory\n  bytes32 public constant override CUSTOM_POOL_DEPLOYER = keccak256('CUSTOM_POOL_DEPLOYER');\n\n  /// @inheritdoc IAlgebraFactory\n  address public immutable override poolDeployer;\n\n  /// @inheritdoc IAlgebraFactory\n  uint16 public override defaultCommunityFee;\n\n  /// @inheritdoc IAlgebraFactory\n  uint16 public override defaultFee;\n\n  /// @inheritdoc IAlgebraFactory\n  int24 public override defaultTickspacing;\n\n  /// @inheritdoc IAlgebraFactory\n  uint256 public override renounceOwnershipStartTimestamp;\n\n  /// @dev time delay before ownership renouncement can be finished\n  uint256 private constant RENOUNCE_OWNERSHIP_DELAY = 1 days;\n\n  /// @inheritdoc IAlgebraFactory\n  IAlgebraPluginFactory public defaultPluginFactory;\n\n  /// @inheritdoc IAlgebraFactory\n  IAlgebraVaultFactory public vaultFactory;\n\n  /// @inheritdoc IAlgebraFactory\n  mapping(address => mapping(address => address)) public override poolByPair;\n\n  /// @inheritdoc IAlgebraFactory\n  mapping(address => mapping(address => mapping(address => address))) public override customPoolByPair;\n\n  /// @inheritdoc IAlgebraFactory\n  /// @dev keccak256 of AlgebraPool init bytecode. Used to compute pool address deterministically\n  bytes32 public constant POOL_INIT_CODE_HASH = 0xb3fc09be5eb433d99b1ec89fd8435aaf5ffea75c1879e19028aa2414a14b3c85;\n\n  constructor(address _poolDeployer) {\n    require(_poolDeployer != address(0));\n    poolDeployer = _poolDeployer;\n    defaultTickspacing = Constants.INIT_DEFAULT_TICK_SPACING;\n    defaultFee = Constants.INIT_DEFAULT_FEE;\n\n    emit DefaultTickspacing(Constants.INIT_DEFAULT_TICK_SPACING);\n    emit DefaultFee(Constants.INIT_DEFAULT_FEE);\n  }\n\n  /// @inheritdoc IAlgebraFactory\n  function owner() public view override(IAlgebraFactory, Ownable) returns (address) {\n    return super.owner();\n  }\n\n  /// @inheritdoc IAlgebraFactory\n  function hasRoleOrOwner(bytes32 role, address account) public view override returns (bool) {\n    return (owner() == account || super.hasRole(role, account));\n  }\n\n  /// @inheritdoc IAlgebraFactory\n  function defaultConfigurationForPool() external view override returns (uint16 communityFee, int24 tickSpacing, uint16 fee) {\n    return (defaultCommunityFee, defaultTickspacing, defaultFee);\n  }\n\n  /// @inheritdoc IAlgebraFactory\n  function computePoolAddress(address token0, address token1) public view override returns (address pool) {\n    pool = address(uint160(uint256(keccak256(abi.encodePacked(hex'ff', poolDeployer, keccak256(abi.encode(token0, token1)), POOL_INIT_CODE_HASH)))));\n  }\n\n  /// @inheritdoc IAlgebraFactory\n  function computeCustomPoolAddress(address deployer, address token0, address token1) public view override returns (address customPool) {\n    customPool = address(\n      uint160(uint256(keccak256(abi.encodePacked(hex'ff', poolDeployer, keccak256(abi.encode(deployer, token0, token1)), POOL_INIT_CODE_HASH))))\n    );\n  }\n\n  /// @inheritdoc IAlgebraFactory\n  function createPool(address tokenA, address tokenB, bytes calldata data) external override nonReentrant returns (address pool) {\n    return _createPool(address(0), msg.sender, tokenA, tokenB, data);\n  }\n\n  /// @inheritdoc IAlgebraFactory\n  function createCustomPool(\n    address deployer,\n    address creator,\n    address tokenA,\n    address tokenB,\n    bytes calldata data\n  ) external override nonReentrant returns (address customPool) {\n    require(hasRole(CUSTOM_POOL_DEPLOYER, msg.sender), 'Can`t create custom pools');\n    return _createPool(deployer, creator, tokenA, tokenB, data);\n  }\n\n  function _createPool(address deployer, address creator, address tokenA, address tokenB, bytes memory data) private returns (address pool) {\n    require(tokenA != tokenB);\n    (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n    require(token0 != address(0));\n\n    mapping(address => mapping(address => address)) storage _poolByPair = deployer == address(0) ? poolByPair : customPoolByPair[deployer];\n    require(_poolByPair[token0][token1] == address(0));\n\n    address plugin;\n    if (deployer == address(0)) {\n      if (address(defaultPluginFactory) != address(0)) {\n        plugin = defaultPluginFactory.beforeCreatePoolHook(computePoolAddress(token0, token1), creator, address(0), token0, token1, data);\n      }\n    } else {\n      plugin = IAlgebraPluginFactory(msg.sender).beforeCreatePoolHook(\n        computeCustomPoolAddress(deployer, token0, token1),\n        creator,\n        deployer,\n        token0,\n        token1,\n        data\n      );\n    }\n\n    pool = IAlgebraPoolDeployer(poolDeployer).deploy(plugin, token0, token1, deployer);\n\n    if (deployer == address(0)) {\n      if (address(defaultPluginFactory) != address(0)) {\n        defaultPluginFactory.afterCreatePoolHook(plugin, pool, deployer);\n      }\n    } else {\n      IAlgebraPluginFactory(msg.sender).afterCreatePoolHook(plugin, pool, deployer);\n    }\n\n    _poolByPair[token0][token1] = pool;\n    _poolByPair[token1][token0] = pool;\n\n    if (deployer == address(0)) {\n      emit Pool(token0, token1, pool);\n    } else {\n      emit CustomPool(deployer, token0, token1, pool);\n    }\n\n    if (address(vaultFactory) != address(0)) {\n      address vault = vaultFactory.createVaultForPool(pool, creator, deployer, token0, token1);\n      IAlgebraPool(pool).setCommunityVault(vault);\n    }\n  }\n\n  /// @inheritdoc IAlgebraFactory\n  function setDefaultCommunityFee(uint16 newDefaultCommunityFee) external override onlyOwner {\n    require(newDefaultCommunityFee <= Constants.MAX_COMMUNITY_FEE);\n    require(defaultCommunityFee != newDefaultCommunityFee);\n    if (newDefaultCommunityFee != 0) require(address(vaultFactory) != address(0));\n    defaultCommunityFee = newDefaultCommunityFee;\n    emit DefaultCommunityFee(newDefaultCommunityFee);\n  }\n\n  /// @inheritdoc IAlgebraFactory\n  function setDefaultFee(uint16 newDefaultFee) external override onlyOwner {\n    require(newDefaultFee <= Constants.MAX_DEFAULT_FEE);\n    require(defaultFee != newDefaultFee);\n    defaultFee = newDefaultFee;\n    emit DefaultFee(newDefaultFee);\n  }\n\n  /// @inheritdoc IAlgebraFactory\n  function setDefaultTickspacing(int24 newDefaultTickspacing) external override onlyOwner {\n    require(newDefaultTickspacing >= Constants.MIN_TICK_SPACING);\n    require(newDefaultTickspacing <= Constants.MAX_TICK_SPACING);\n    require(newDefaultTickspacing != defaultTickspacing);\n    defaultTickspacing = newDefaultTickspacing;\n    emit DefaultTickspacing(newDefaultTickspacing);\n  }\n\n  /// @inheritdoc IAlgebraFactory\n  function setDefaultPluginFactory(address newDefaultPluginFactory) external override onlyOwner {\n    require(newDefaultPluginFactory != address(defaultPluginFactory));\n    defaultPluginFactory = IAlgebraPluginFactory(newDefaultPluginFactory);\n    emit DefaultPluginFactory(newDefaultPluginFactory);\n  }\n\n  /// @inheritdoc IAlgebraFactory\n  function setVaultFactory(address newVaultFactory) external override onlyOwner {\n    require(newVaultFactory != address(vaultFactory));\n    if (newVaultFactory == address(0)) require(defaultCommunityFee == 0);\n    vaultFactory = IAlgebraVaultFactory(newVaultFactory);\n    emit VaultFactory(newVaultFactory);\n  }\n\n  /// @inheritdoc IAlgebraFactory\n  function startRenounceOwnership() external override onlyOwner {\n    require(renounceOwnershipStartTimestamp == 0);\n    renounceOwnershipStartTimestamp = block.timestamp;\n    emit RenounceOwnershipStart(renounceOwnershipStartTimestamp, renounceOwnershipStartTimestamp + RENOUNCE_OWNERSHIP_DELAY);\n  }\n\n  /// @inheritdoc IAlgebraFactory\n  function stopRenounceOwnership() external override onlyOwner {\n    require(renounceOwnershipStartTimestamp != 0);\n    renounceOwnershipStartTimestamp = 0;\n    emit RenounceOwnershipStop(block.timestamp);\n  }\n\n  /// @dev Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore.\n  /// Can only be called by the current owner if RENOUNCE_OWNERSHIP_DELAY seconds\n  /// have passed since the call to the startRenounceOwnership() function.\n  function renounceOwnership() public override onlyOwner {\n    require(renounceOwnershipStartTimestamp != 0);\n    require(block.timestamp - renounceOwnershipStartTimestamp >= RENOUNCE_OWNERSHIP_DELAY);\n    renounceOwnershipStartTimestamp = 0;\n\n    super.renounceOwnership();\n    emit RenounceOwnershipFinish(block.timestamp);\n  }\n\n  /// @dev Transfers ownership of the contract to a new account (`newOwner`).\n  /// Modified to fit with the role mechanism.\n  function _transferOwnership(address newOwner) internal override {\n    _revokeRole(DEFAULT_ADMIN_ROLE, owner());\n    super._transferOwnership(newOwner);\n    if (owner() != address(0)) {\n      _grantRole(DEFAULT_ADMIN_ROLE, owner());\n    }\n  }\n}\n"},"contracts/interfaces/IAlgebraFactory.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\npragma abicoder v2;\n\nimport './plugin/IAlgebraPluginFactory.sol';\nimport './vault/IAlgebraVaultFactory.sol';\n\n/// @title The interface for the Algebra Factory\n/// @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n/// https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\ninterface IAlgebraFactory {\n  /// @notice Emitted when a process of ownership renounce is started\n  /// @param timestamp The timestamp of event\n  /// @param finishTimestamp The timestamp when ownership renounce will be possible to finish\n  event RenounceOwnershipStart(uint256 timestamp, uint256 finishTimestamp);\n\n  /// @notice Emitted when a process of ownership renounce cancelled\n  /// @param timestamp The timestamp of event\n  event RenounceOwnershipStop(uint256 timestamp);\n\n  /// @notice Emitted when a process of ownership renounce finished\n  /// @param timestamp The timestamp of ownership renouncement\n  event RenounceOwnershipFinish(uint256 timestamp);\n\n  /// @notice Emitted when a pool is created\n  /// @param token0 The first token of the pool by address sort order\n  /// @param token1 The second token of the pool by address sort order\n  /// @param pool The address of the created pool\n  event Pool(address indexed token0, address indexed token1, address pool);\n\n  /// @notice Emitted when a pool is created\n  /// @param deployer The corresponding custom deployer contract\n  /// @param token0 The first token of the pool by address sort order\n  /// @param token1 The second token of the pool by address sort order\n  /// @param pool The address of the created pool\n  event CustomPool(address indexed deployer, address indexed token0, address indexed token1, address pool);\n\n  /// @notice Emitted when the default community fee is changed\n  /// @param newDefaultCommunityFee The new default community fee value\n  event DefaultCommunityFee(uint16 newDefaultCommunityFee);\n\n  /// @notice Emitted when the default tickspacing is changed\n  /// @param newDefaultTickspacing The new default tickspacing value\n  event DefaultTickspacing(int24 newDefaultTickspacing);\n\n  /// @notice Emitted when the default fee is changed\n  /// @param newDefaultFee The new default fee value\n  event DefaultFee(uint16 newDefaultFee);\n\n  /// @notice Emitted when the defaultPluginFactory address is changed\n  /// @param defaultPluginFactoryAddress The new defaultPluginFactory address\n  event DefaultPluginFactory(address defaultPluginFactoryAddress);\n\n  /// @notice Emitted when the vaultFactory address is changed\n  /// @param newVaultFactory The new vaultFactory address\n  event VaultFactory(address newVaultFactory);\n\n  /// @notice role that can change communityFee and tickspacing in pools\n  /// @return The hash corresponding to this role\n  function POOLS_ADMINISTRATOR_ROLE() external view returns (bytes32);\n\n  /// @notice role that can call `createCustomPool` function\n  /// @return The hash corresponding to this role\n  function CUSTOM_POOL_DEPLOYER() external view returns (bytes32);\n\n  /// @notice Returns `true` if `account` has been granted `role` or `account` is owner.\n  /// @param role The hash corresponding to the role\n  /// @param account The address for which the role is checked\n  /// @return bool Whether the address has this role or the owner role or not\n  function hasRoleOrOwner(bytes32 role, address account) external view returns (bool);\n\n  /// @notice Returns the current owner of the factory\n  /// @dev Can be changed by the current owner via transferOwnership(address newOwner)\n  /// @return The address of the factory owner\n  function owner() external view returns (address);\n\n  /// @notice Returns the current poolDeployerAddress\n  /// @return The address of the poolDeployer\n  function poolDeployer() external view returns (address);\n\n  /// @notice Returns the default community fee\n  /// @return Fee which will be set at the creation of the pool\n  function defaultCommunityFee() external view returns (uint16);\n\n  /// @notice Returns the default fee\n  /// @return Fee which will be set at the creation of the pool\n  function defaultFee() external view returns (uint16);\n\n  /// @notice Returns the default tickspacing\n  /// @return Tickspacing which will be set at the creation of the pool\n  function defaultTickspacing() external view returns (int24);\n\n  /// @notice Return the current pluginFactory address\n  /// @dev This contract is used to automatically set a plugin address in new liquidity pools\n  /// @return Algebra plugin factory\n  function defaultPluginFactory() external view returns (IAlgebraPluginFactory);\n\n  /// @notice Return the current vaultFactory address\n  /// @dev This contract is used to automatically set a vault address in new liquidity pools\n  /// @return Algebra vault factory\n  function vaultFactory() external view returns (IAlgebraVaultFactory);\n\n  /// @notice Returns the default communityFee, tickspacing, fee and communityFeeVault for pool\n  /// @return communityFee which will be set at the creation of the pool\n  /// @return tickSpacing which will be set at the creation of the pool\n  /// @return fee which will be set at the creation of the pool\n  function defaultConfigurationForPool() external view returns (uint16 communityFee, int24 tickSpacing, uint16 fee);\n\n  /// @notice Deterministically computes the pool address given the token0 and token1\n  /// @dev The method does not check if such a pool has been created\n  /// @param token0 first token\n  /// @param token1 second token\n  /// @return pool The contract address of the Algebra pool\n  function computePoolAddress(address token0, address token1) external view returns (address pool);\n\n  /// @notice Deterministically computes the custom pool address given the customDeployer, token0 and token1\n  /// @dev The method does not check if such a pool has been created\n  /// @param customDeployer the address of custom plugin deployer\n  /// @param token0 first token\n  /// @param token1 second token\n  /// @return customPool The contract address of the Algebra pool\n  function computeCustomPoolAddress(address customDeployer, address token0, address token1) external view returns (address customPool);\n\n  /// @notice Returns the pool address for a given pair of tokens, or address 0 if it does not exist\n  /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n  /// @param tokenA The contract address of either token0 or token1\n  /// @param tokenB The contract address of the other token\n  /// @return pool The pool address\n  function poolByPair(address tokenA, address tokenB) external view returns (address pool);\n\n  /// @notice Returns the custom pool address for a customDeployer and a given pair of tokens, or address 0 if it does not exist\n  /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n  /// @param customDeployer The address of custom plugin deployer\n  /// @param tokenA The contract address of either token0 or token1\n  /// @param tokenB The contract address of the other token\n  /// @return customPool The pool address\n  function customPoolByPair(address customDeployer, address tokenA, address tokenB) external view returns (address customPool);\n\n  /// @notice returns keccak256 of AlgebraPool init bytecode.\n  /// @dev the hash value changes with any change in the pool bytecode\n  /// @return Keccak256 hash of AlgebraPool contract init bytecode\n  function POOL_INIT_CODE_HASH() external view returns (bytes32);\n\n  /// @return timestamp The timestamp of the beginning of the renounceOwnership process\n  function renounceOwnershipStartTimestamp() external view returns (uint256 timestamp);\n\n  /// @notice Creates a pool for the given two tokens\n  /// @param tokenA One of the two tokens in the desired pool\n  /// @param tokenB The other of the two tokens in the desired pool\n  /// @param data Data for plugin creation\n  /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0.\n  /// The call will revert if the pool already exists or the token arguments are invalid.\n  /// @return pool The address of the newly created pool\n  function createPool(address tokenA, address tokenB, bytes calldata data) external returns (address pool);\n\n  /// @notice Creates a custom pool for the given two tokens using `deployer` contract\n  /// @param deployer The address of plugin deployer, also used for custom pool address calculation\n  /// @param creator The initiator of custom pool creation\n  /// @param tokenA One of the two tokens in the desired pool\n  /// @param tokenB The other of the two tokens in the desired pool\n  /// @param data The additional data bytes\n  /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0.\n  /// The call will revert if the pool already exists or the token arguments are invalid.\n  /// @return customPool The address of the newly created custom pool\n  function createCustomPool(\n    address deployer,\n    address creator,\n    address tokenA,\n    address tokenB,\n    bytes calldata data\n  ) external returns (address customPool);\n\n  /// @dev updates default community fee for new pools\n  /// @param newDefaultCommunityFee The new community fee, _must_ be <= MAX_COMMUNITY_FEE\n  function setDefaultCommunityFee(uint16 newDefaultCommunityFee) external;\n\n  /// @dev updates default fee for new pools\n  /// @param newDefaultFee The new  fee, _must_ be <= MAX_DEFAULT_FEE\n  function setDefaultFee(uint16 newDefaultFee) external;\n\n  /// @dev updates default tickspacing for new pools\n  /// @param newDefaultTickspacing The new tickspacing, _must_ be <= MAX_TICK_SPACING and >= MIN_TICK_SPACING\n  function setDefaultTickspacing(int24 newDefaultTickspacing) external;\n\n  /// @dev updates pluginFactory address\n  /// @param newDefaultPluginFactory address of new plugin factory\n  function setDefaultPluginFactory(address newDefaultPluginFactory) external;\n\n  /// @dev updates vaultFactory address\n  /// @param newVaultFactory address of new vault factory\n  function setVaultFactory(address newVaultFactory) external;\n\n  /// @notice Starts process of renounceOwnership. After that, a certain period\n  /// of time must pass before the ownership renounce can be completed.\n  function startRenounceOwnership() external;\n\n  /// @notice Stops process of renounceOwnership and removes timer.\n  function stopRenounceOwnership() external;\n}\n"},"contracts/interfaces/IAlgebraPool.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\nimport './pool/IAlgebraPoolImmutables.sol';\nimport './pool/IAlgebraPoolState.sol';\nimport './pool/IAlgebraPoolActions.sol';\nimport './pool/IAlgebraPoolPermissionedActions.sol';\nimport './pool/IAlgebraPoolEvents.sol';\nimport './pool/IAlgebraPoolErrors.sol';\n\n/// @title The interface for a Algebra Pool\n/// @dev The pool interface is broken up into many smaller pieces.\n/// This interface includes custom error definitions and cannot be used in older versions of Solidity.\n/// For older versions of Solidity use #IAlgebraPoolLegacy\n/// Credit to Uniswap Labs under GPL-2.0-or-later license:\n/// https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\ninterface IAlgebraPool is\n  IAlgebraPoolImmutables,\n  IAlgebraPoolState,\n  IAlgebraPoolActions,\n  IAlgebraPoolPermissionedActions,\n  IAlgebraPoolEvents,\n  IAlgebraPoolErrors\n{\n  // used only for combining interfaces\n}\n"},"contracts/interfaces/IAlgebraPoolDeployer.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title An interface for a contract that is capable of deploying Algebra Pools\n/// @notice A contract that constructs a pool must implement this to pass arguments to the pool\n/// @dev This is used to avoid having constructor arguments in the pool contract, which results in the init code hash\n/// of the pool being constant allowing the CREATE2 address of the pool to be cheaply computed on-chain.\n/// Credit to Uniswap Labs under GPL-2.0-or-later license:\n/// https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\ninterface IAlgebraPoolDeployer {\n  /// @notice Get the parameters to be used in constructing the pool, set transiently during pool creation.\n  /// @dev Called by the pool constructor to fetch the parameters of the pool\n  /// @return plugin The pool associated plugin (if any)\n  /// @return factory The Algebra Factory address\n  /// @return token0 The first token of the pool by address sort order\n  /// @return token1 The second token of the pool by address sort order\n  function getDeployParameters() external view returns (address plugin, address factory, address token0, address token1);\n\n  /// @dev Deploys a pool with the given parameters by transiently setting the parameters in cache.\n  /// @param plugin The pool associated plugin (if any)\n  /// @param token0 The first token of the pool by address sort order\n  /// @param token1 The second token of the pool by address sort order\n  /// @return pool The deployed pool's address\n  function deploy(address plugin, address token0, address token1, address deployer) external returns (address pool);\n}\n"},"contracts/interfaces/plugin/IAlgebraPluginFactory.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title An interface for a contract that is capable of deploying Algebra plugins\n/// @dev Such a factory can be used for automatic plugin creation for new pools.\n/// Also a factory be used as an entry point for custom (additional) pools creation\ninterface IAlgebraPluginFactory {\n  /// @notice Deploys new plugin contract for pool\n  /// @param pool The address of the new pool\n  /// @param creator The address that initiated the pool creation\n  /// @param deployer The address of new plugin deployer contract (0 if not used)\n  /// @param token0 First token of the pool\n  /// @param token1 Second token of the pool\n  /// @return New plugin address\n  function beforeCreatePoolHook(\n    address pool,\n    address creator,\n    address deployer,\n    address token0,\n    address token1,\n    bytes calldata data\n  ) external returns (address);\n\n  /// @notice Called after the pool is created\n  /// @param plugin The plugin address\n  /// @param pool The address of the new pool\n  /// @param deployer The address of new plugin deployer contract (0 if not used)\n  function afterCreatePoolHook(address plugin, address pool, address deployer) external;\n}\n"},"contracts/interfaces/pool/IAlgebraPoolActions.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n/// https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\ninterface IAlgebraPoolActions {\n  /// @notice Sets the initial price for the pool\n  /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n  /// @dev Initialization should be done in one transaction with pool creation to avoid front-running\n  /// @param initialPrice The initial sqrt price of the pool as a Q64.96\n  function initialize(uint160 initialPrice) external;\n\n  /// @notice Adds liquidity for the given recipient/bottomTick/topTick position\n  /// @dev The caller of this method receives a callback in the form of IAlgebraMintCallback#algebraMintCallback\n  /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n  /// on bottomTick, topTick, the amount of liquidity, and the current price.\n  /// @param leftoversRecipient The address which will receive potential surplus of paid tokens\n  /// @param recipient The address for which the liquidity will be created\n  /// @param bottomTick The lower tick of the position in which to add liquidity\n  /// @param topTick The upper tick of the position in which to add liquidity\n  /// @param liquidityDesired The desired amount of liquidity to mint\n  /// @param data Any data that should be passed through to the callback\n  /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n  /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n  /// @return liquidityActual The actual minted amount of liquidity\n  function mint(\n    address leftoversRecipient,\n    address recipient,\n    int24 bottomTick,\n    int24 topTick,\n    uint128 liquidityDesired,\n    bytes calldata data\n  ) external returns (uint256 amount0, uint256 amount1, uint128 liquidityActual);\n\n  /// @notice Collects tokens owed to a position\n  /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n  /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n  /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n  /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n  /// @param recipient The address which should receive the fees collected\n  /// @param bottomTick The lower tick of the position for which to collect fees\n  /// @param topTick The upper tick of the position for which to collect fees\n  /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n  /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n  /// @return amount0 The amount of fees collected in token0\n  /// @return amount1 The amount of fees collected in token1\n  function collect(\n    address recipient,\n    int24 bottomTick,\n    int24 topTick,\n    uint128 amount0Requested,\n    uint128 amount1Requested\n  ) external returns (uint128 amount0, uint128 amount1);\n\n  /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n  /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n  /// @dev Fees must be collected separately via a call to #collect\n  /// @param bottomTick The lower tick of the position for which to burn liquidity\n  /// @param topTick The upper tick of the position for which to burn liquidity\n  /// @param amount How much liquidity to burn\n  /// @param data Any data that should be passed through to the plugin\n  /// @return amount0 The amount of token0 sent to the recipient\n  /// @return amount1 The amount of token1 sent to the recipient\n  function burn(int24 bottomTick, int24 topTick, uint128 amount, bytes calldata data) external returns (uint256 amount0, uint256 amount1);\n\n  /// @notice Swap token0 for token1, or token1 for token0\n  /// @dev The caller of this method receives a callback in the form of IAlgebraSwapCallback#algebraSwapCallback\n  /// @param recipient The address to receive the output of the swap\n  /// @param zeroToOne The direction of the swap, true for token0 to token1, false for token1 to token0\n  /// @param amountRequired The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n  /// @param limitSqrtPrice The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n  /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n  /// @param data Any data to be passed through to the callback. If using the Router it should contain SwapRouter#SwapCallbackData\n  /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n  /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n  function swap(\n    address recipient,\n    bool zeroToOne,\n    int256 amountRequired,\n    uint160 limitSqrtPrice,\n    bytes calldata data\n  ) external returns (int256 amount0, int256 amount1);\n\n  /// @notice Swap token0 for token1, or token1 for token0 with prepayment\n  /// @dev The caller of this method receives a callback in the form of IAlgebraSwapCallback#algebraSwapCallback\n  /// caller must send tokens in callback before swap calculation\n  /// the actually sent amount of tokens is used for further calculations\n  /// @param leftoversRecipient The address which will receive potential surplus of paid tokens\n  /// @param recipient The address to receive the output of the swap\n  /// @param zeroToOne The direction of the swap, true for token0 to token1, false for token1 to token0\n  /// @param amountToSell The amount of the swap, only positive (exact input) amount allowed\n  /// @param limitSqrtPrice The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n  /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n  /// @param data Any data to be passed through to the callback. If using the Router it should contain SwapRouter#SwapCallbackData\n  /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n  /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n  function swapWithPaymentInAdvance(\n    address leftoversRecipient,\n    address recipient,\n    bool zeroToOne,\n    int256 amountToSell,\n    uint160 limitSqrtPrice,\n    bytes calldata data\n  ) external returns (int256 amount0, int256 amount1);\n\n  /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n  /// @dev The caller of this method receives a callback in the form of IAlgebraFlashCallback#algebraFlashCallback\n  /// @dev All excess tokens paid in the callback are distributed to currently in-range liquidity providers as an additional fee.\n  /// If there are no in-range liquidity providers, the fee will be transferred to the first active provider in the future\n  /// @param recipient The address which will receive the token0 and token1 amounts\n  /// @param amount0 The amount of token0 to send\n  /// @param amount1 The amount of token1 to send\n  /// @param data Any data to be passed through to the callback\n  function flash(address recipient, uint256 amount0, uint256 amount1, bytes calldata data) external;\n}\n"},"contracts/interfaces/pool/IAlgebraPoolErrors.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\n/// @title Errors emitted by a pool\n/// @notice Contains custom errors emitted by the pool\n/// @dev Custom errors are separated from the common pool interface for compatibility with older versions of Solidity\ninterface IAlgebraPoolErrors {\n  // ####  pool errors  ####\n\n  /// @notice Emitted by the reentrancy guard\n  error locked();\n\n  /// @notice Emitted if arithmetic error occurred\n  error arithmeticError();\n\n  /// @notice Emitted if an attempt is made to initialize the pool twice\n  error alreadyInitialized();\n\n  /// @notice Emitted if an attempt is made to mint or swap in uninitialized pool\n  error notInitialized();\n\n  /// @notice Emitted if 0 is passed as amountRequired to swap function\n  error zeroAmountRequired();\n\n  /// @notice Emitted if invalid amount is passed as amountRequired to swap function\n  error invalidAmountRequired();\n\n  /// @notice Emitted if plugin fee param greater than fee/override fee\n  error incorrectPluginFee();\n\n  /// @notice Emitted if the pool received fewer tokens than it should have\n  error insufficientInputAmount();\n\n  /// @notice Emitted if there was an attempt to mint zero liquidity\n  error zeroLiquidityDesired();\n  /// @notice Emitted if actual amount of liquidity is zero (due to insufficient amount of tokens received)\n  error zeroLiquidityActual();\n\n  /// @notice Emitted if the pool received fewer tokens0 after flash than it should have\n  error flashInsufficientPaid0();\n  /// @notice Emitted if the pool received fewer tokens1 after flash than it should have\n  error flashInsufficientPaid1();\n\n  /// @notice Emitted if limitSqrtPrice param is incorrect\n  error invalidLimitSqrtPrice();\n\n  /// @notice Tick must be divisible by tickspacing\n  error tickIsNotSpaced();\n\n  /// @notice Emitted if a method is called that is accessible only to the factory owner or dedicated role\n  error notAllowed();\n\n  /// @notice Emitted if new tick spacing exceeds max allowed value\n  error invalidNewTickSpacing();\n  /// @notice Emitted if new community fee exceeds max allowed value\n  error invalidNewCommunityFee();\n\n  /// @notice Emitted if an attempt is made to manually change the fee value, but dynamic fee is enabled\n  error dynamicFeeActive();\n  /// @notice Emitted if an attempt is made by plugin to change the fee value, but dynamic fee is disabled\n  error dynamicFeeDisabled();\n  /// @notice Emitted if an attempt is made to change the plugin configuration, but the plugin is not connected\n  error pluginIsNotConnected();\n  /// @notice Emitted if a plugin returns invalid selector after hook call\n  /// @param expectedSelector The expected selector\n  error invalidHookResponse(bytes4 expectedSelector);\n\n  // ####  LiquidityMath errors  ####\n\n  /// @notice Emitted if liquidity underflows\n  error liquiditySub();\n  /// @notice Emitted if liquidity overflows\n  error liquidityAdd();\n\n  // ####  TickManagement errors  ####\n\n  /// @notice Emitted if the topTick param not greater then the bottomTick param\n  error topTickLowerOrEqBottomTick();\n  /// @notice Emitted if the bottomTick param is lower than min allowed value\n  error bottomTickLowerThanMIN();\n  /// @notice Emitted if the topTick param is greater than max allowed value\n  error topTickAboveMAX();\n  /// @notice Emitted if the liquidity value associated with the tick exceeds MAX_LIQUIDITY_PER_TICK\n  error liquidityOverflow();\n  /// @notice Emitted if an attempt is made to interact with an uninitialized tick\n  error tickIsNotInitialized();\n  /// @notice Emitted if there is an attempt to insert a new tick into the list of ticks with incorrect indexes of the previous and next ticks\n  error tickInvalidLinks();\n\n  // ####  SafeTransfer errors  ####\n\n  /// @notice Emitted if token transfer failed internally\n  error transferFailed();\n\n  // ####  TickMath errors  ####\n\n  /// @notice Emitted if tick is greater than the maximum or less than the minimum allowed value\n  error tickOutOfRange();\n  /// @notice Emitted if price is greater than the maximum or less than the minimum allowed value\n  error priceOutOfRange();\n}\n"},"contracts/interfaces/pool/IAlgebraPoolEvents.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n/// https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\ninterface IAlgebraPoolEvents {\n  /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n  /// @dev Mint/Burn/Swaps cannot be emitted by the pool before Initialize\n  /// @param price The initial sqrt price of the pool, as a Q64.96\n  /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n  event Initialize(uint160 price, int24 tick);\n\n  /// @notice Emitted when liquidity is minted for a given position\n  /// @param sender The address that minted the liquidity\n  /// @param owner The owner of the position and recipient of any minted liquidity\n  /// @param bottomTick The lower tick of the position\n  /// @param topTick The upper tick of the position\n  /// @param liquidityAmount The amount of liquidity minted to the position range\n  /// @param amount0 How much token0 was required for the minted liquidity\n  /// @param amount1 How much token1 was required for the minted liquidity\n  event Mint(\n    address sender,\n    address indexed owner,\n    int24 indexed bottomTick,\n    int24 indexed topTick,\n    uint128 liquidityAmount,\n    uint256 amount0,\n    uint256 amount1\n  );\n\n  /// @notice Emitted when fees are collected by the owner of a position\n  /// @param owner The owner of the position for which fees are collected\n  /// @param recipient The address that received fees\n  /// @param bottomTick The lower tick of the position\n  /// @param topTick The upper tick of the position\n  /// @param amount0 The amount of token0 fees collected\n  /// @param amount1 The amount of token1 fees collected\n  event Collect(address indexed owner, address recipient, int24 indexed bottomTick, int24 indexed topTick, uint128 amount0, uint128 amount1);\n\n  /// @notice Emitted when a position's liquidity is removed\n  /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n  /// @param owner The owner of the position for which liquidity is removed\n  /// @param bottomTick The lower tick of the position\n  /// @param topTick The upper tick of the position\n  /// @param liquidityAmount The amount of liquidity to remove\n  /// @param amount0 The amount of token0 withdrawn\n  /// @param amount1 The amount of token1 withdrawn\n  /// @param pluginFee The fee to be sent to the plugin\n  event Burn(\n    address indexed owner,\n    int24 indexed bottomTick,\n    int24 indexed topTick,\n    uint128 liquidityAmount,\n    uint256 amount0,\n    uint256 amount1,\n    uint24 pluginFee\n  );\n\n  /// @notice Emitted by the pool for any swaps between token0 and token1\n  /// @param sender The address that initiated the swap call, and that received the callback\n  /// @param recipient The address that received the output of the swap\n  /// @param amount0 The delta of the token0 balance of the pool\n  /// @param amount1 The delta of the token1 balance of the pool\n  /// @param price The sqrt(price) of the pool after the swap, as a Q64.96\n  /// @param liquidity The liquidity of the pool after the swap\n  /// @param tick The log base 1.0001 of price of the pool after the swap\n  /// @param overrideFee The fee to be applied to the trade\n  /// @param pluginFee The fee to be sent to the plugin\n  event Swap(\n    address indexed sender,\n    address indexed recipient,\n    int256 amount0,\n    int256 amount1,\n    uint160 price,\n    uint128 liquidity,\n    int24 tick,\n    uint24 overrideFee,\n    uint24 pluginFee\n  );\n\n  /// @notice Emitted by the pool for any flashes of token0/token1\n  /// @param sender The address that initiated the swap call, and that received the callback\n  /// @param recipient The address that received the tokens from flash\n  /// @param amount0 The amount of token0 that was flashed\n  /// @param amount1 The amount of token1 that was flashed\n  /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n  /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n  event Flash(address indexed sender, address indexed recipient, uint256 amount0, uint256 amount1, uint256 paid0, uint256 paid1);\n\n  /// @notice Emitted when the pool has higher balances than expected.\n  /// Any excess of tokens will be distributed between liquidity providers as fee.\n  /// @dev Fees after flash also will trigger this event due to mechanics of flash.\n  /// @param amount0 The excess of token0\n  /// @param amount1 The excess of token1\n  event ExcessTokens(uint256 amount0, uint256 amount1);\n\n  /// @notice Emitted when the community fee is changed by the pool\n  /// @param communityFeeNew The updated value of the community fee in thousandths (1e-3)\n  event CommunityFee(uint16 communityFeeNew);\n\n  /// @notice Emitted when the tick spacing changes\n  /// @param newTickSpacing The updated value of the new tick spacing\n  event TickSpacing(int24 newTickSpacing);\n\n  /// @notice Emitted when the plugin address changes\n  /// @param newPluginAddress New plugin address\n  event Plugin(address newPluginAddress);\n\n  /// @notice Emitted when the plugin config changes\n  /// @param newPluginConfig New plugin config\n  event PluginConfig(uint8 newPluginConfig);\n\n  /// @notice Emitted when the fee changes inside the pool\n  /// @param fee The current fee in hundredths of a bip, i.e. 1e-6\n  event Fee(uint16 fee);\n\n  /// @notice Emitted when the community vault address changes\n  /// @param newCommunityVault New community vault\n  event CommunityVault(address newCommunityVault);\n\n  /// @notice Emitted when the plugin does skim the excess of tokens\n  /// @param to THe receiver of tokens (plugin)\n  /// @param amount0 The amount of token0\n  /// @param amount1 The amount of token1\n  event Skim(address indexed to, uint256 amount0, uint256 amount1);\n}\n"},"contracts/interfaces/pool/IAlgebraPoolImmutables.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n/// https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\ninterface IAlgebraPoolImmutables {\n  /// @notice The Algebra factory contract, which must adhere to the IAlgebraFactory interface\n  /// @return The contract address\n  function factory() external view returns (address);\n\n  /// @notice The first of the two tokens of the pool, sorted by address\n  /// @return The token contract address\n  function token0() external view returns (address);\n\n  /// @notice The second of the two tokens of the pool, sorted by address\n  /// @return The token contract address\n  function token1() external view returns (address);\n\n  /// @notice The maximum amount of position liquidity that can use any tick in the range\n  /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n  /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n  /// @return The max amount of liquidity per tick\n  function maxLiquidityPerTick() external view returns (uint128);\n}\n"},"contracts/interfaces/pool/IAlgebraPoolPermissionedActions.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by permissioned addresses\n/// @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n/// https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\ninterface IAlgebraPoolPermissionedActions {\n  /// @notice Set the community's % share of the fees. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\n  /// @param newCommunityFee The new community fee percent in thousandths (1e-3)\n  function setCommunityFee(uint16 newCommunityFee) external;\n\n  /// @notice Set the new tick spacing values. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\n  /// @param newTickSpacing The new tick spacing value\n  function setTickSpacing(int24 newTickSpacing) external;\n\n  /// @notice Set the new plugin address. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\n  /// @param newPluginAddress The new plugin address\n  function setPlugin(address newPluginAddress) external;\n\n  /// @notice Set new plugin config. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\n  /// @param newConfig In the new configuration of the plugin,\n  /// each bit of which is responsible for a particular hook.\n  function setPluginConfig(uint8 newConfig) external;\n\n  /// @notice Set new community fee vault address. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\n  /// @dev Community fee vault receives collected community fees.\n  /// **accumulated but not yet sent to the vault community fees once will be sent to the `newCommunityVault` address**\n  /// @param newCommunityVault The address of new community fee vault\n  function setCommunityVault(address newCommunityVault) external;\n\n  /// @notice Set new pool fee. Can be called by owner if dynamic fee is disabled.\n  /// Called by the plugin if dynamic fee is enabled\n  /// @param newFee The new fee value\n  function setFee(uint16 newFee) external;\n\n  /// @notice Forces balances to match reserves. Excessive tokens will be distributed between active LPs\n  /// @dev Only plugin can call this function\n  function sync() external;\n\n  /// @notice Forces balances to match reserves. Excessive tokens will be sent to msg.sender\n  /// @dev Only plugin can call this function\n  function skim() external;\n}\n"},"contracts/interfaces/pool/IAlgebraPoolState.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @dev Important security note: when using this data by external contracts, it is necessary to take into account the possibility\n/// of manipulation (including read-only reentrancy).\n/// This interface is based on the UniswapV3 interface, credit to Uniswap Labs under GPL-2.0-or-later license:\n/// https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\ninterface IAlgebraPoolState {\n  /// @notice Safely get most important state values of Algebra Integral AMM\n  /// @dev Several values exposed as a single method to save gas when accessed externally.\n  /// **Important security note: this method checks reentrancy lock and should be preferred in most cases**.\n  /// @return sqrtPrice The current price of the pool as a sqrt(dToken1/dToken0) Q64.96 value\n  /// @return tick The current global tick of the pool. May not always be equal to SqrtTickMath.getTickAtSqrtRatio(price) if the price is on a tick boundary\n  /// @return lastFee The current (last known) pool fee value in hundredths of a bip, i.e. 1e-6 (so '100' is '0.01%'). May be obsolete if using dynamic fee plugin\n  /// @return pluginConfig The current plugin config as bitmap. Each bit is responsible for enabling/disabling the hooks, the last bit turns on/off dynamic fees logic\n  /// @return activeLiquidity  The currently in-range liquidity available to the pool\n  /// @return nextTick The next initialized tick after current global tick\n  /// @return previousTick The previous initialized tick before (or at) current global tick\n  function safelyGetStateOfAMM()\n    external\n    view\n    returns (uint160 sqrtPrice, int24 tick, uint16 lastFee, uint8 pluginConfig, uint128 activeLiquidity, int24 nextTick, int24 previousTick);\n\n  /// @notice Allows to easily get current reentrancy lock status\n  /// @dev can be used to prevent read-only reentrancy.\n  /// This method just returns `globalState.unlocked` value\n  /// @return unlocked Reentrancy lock flag, true if the pool currently is unlocked, otherwise - false\n  function isUnlocked() external view returns (bool unlocked);\n\n  // ! IMPORTANT security note: the pool state can be manipulated.\n  // ! The following methods do not check reentrancy lock themselves.\n\n  /// @notice The globalState structure in the pool stores many values but requires only one slot\n  /// and is exposed as a single method to save gas when accessed externally.\n  /// @dev **important security note: caller should check `unlocked` flag to prevent read-only reentrancy**\n  /// @return price The current price of the pool as a sqrt(dToken1/dToken0) Q64.96 value\n  /// @return tick The current tick of the pool, i.e. according to the last tick transition that was run\n  /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(price) if the price is on a tick boundary\n  /// @return lastFee The current (last known) pool fee value in hundredths of a bip, i.e. 1e-6 (so '100' is '0.01%'). May be obsolete if using dynamic fee plugin\n  /// @return pluginConfig The current plugin config as bitmap. Each bit is responsible for enabling/disabling the hooks, the last bit turns on/off dynamic fees logic\n  /// @return communityFee The community fee represented as a percent of all collected fee in thousandths, i.e. 1e-3 (so 100 is 10%)\n  /// @return unlocked Reentrancy lock flag, true if the pool currently is unlocked, otherwise - false\n  function globalState() external view returns (uint160 price, int24 tick, uint16 lastFee, uint8 pluginConfig, uint16 communityFee, bool unlocked);\n\n  /// @notice Look up information about a specific tick in the pool\n  /// @dev **important security note: caller should check reentrancy lock to prevent read-only reentrancy**\n  /// @param tick The tick to look up\n  /// @return liquidityTotal The total amount of position liquidity that uses the pool either as tick lower or tick upper\n  /// @return liquidityDelta How much liquidity changes when the pool price crosses the tick\n  /// @return prevTick The previous tick in tick list\n  /// @return nextTick The next tick in tick list\n  /// @return outerFeeGrowth0Token The fee growth on the other side of the tick from the current tick in token0\n  /// @return outerFeeGrowth1Token The fee growth on the other side of the tick from the current tick in token1\n  /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n  /// a specific position.\n  function ticks(\n    int24 tick\n  )\n    external\n    view\n    returns (\n      uint256 liquidityTotal,\n      int128 liquidityDelta,\n      int24 prevTick,\n      int24 nextTick,\n      uint256 outerFeeGrowth0Token,\n      uint256 outerFeeGrowth1Token\n    );\n\n  /// @notice The timestamp of the last sending of tokens to vault/plugin\n  /// @return The timestamp truncated to 32 bits\n  function lastFeeTransferTimestamp() external view returns (uint32);\n\n  /// @notice The amounts of token0 and token1 that will be sent to the vault\n  /// @dev Will be sent FEE_TRANSFER_FREQUENCY after communityFeeLastTimestamp\n  /// @return communityFeePending0 The amount of token0 that will be sent to the vault\n  /// @return communityFeePending1 The amount of token1 that will be sent to the vault\n  function getCommunityFeePending() external view returns (uint128 communityFeePending0, uint128 communityFeePending1);\n\n  /// @notice The amounts of token0 and token1 that will be sent to the plugin\n  /// @dev Will be sent FEE_TRANSFER_FREQUENCY after feeLastTransferTimestamp\n  /// @return pluginFeePending0 The amount of token0 that will be sent to the plugin\n  /// @return pluginFeePending1 The amount of token1 that will be sent to the plugin\n  function getPluginFeePending() external view returns (uint128 pluginFeePending0, uint128 pluginFeePending1);\n\n  /// @notice Returns the address of currently used plugin\n  /// @dev The plugin is subject to change\n  /// @return pluginAddress The address of currently used plugin\n  function plugin() external view returns (address pluginAddress);\n\n  /// @notice The contract to which community fees are transferred\n  /// @return communityVaultAddress The communityVault address\n  function communityVault() external view returns (address communityVaultAddress);\n\n  /// @notice Returns 256 packed tick initialized boolean values. See TickTree for more information\n  /// @param wordPosition Index of 256-bits word with ticks\n  /// @return The 256-bits word with packed ticks info\n  function tickTable(int16 wordPosition) external view returns (uint256);\n\n  /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n  /// @dev This value can overflow the uint256\n  /// @return The fee growth accumulator for token0\n  function totalFeeGrowth0Token() external view returns (uint256);\n\n  /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n  /// @dev This value can overflow the uint256\n  /// @return The fee growth accumulator for token1\n  function totalFeeGrowth1Token() external view returns (uint256);\n\n  /// @notice The current pool fee value\n  /// @dev In case dynamic fee is enabled in the pool, this method will call the plugin to get the current fee.\n  /// If the plugin implements complex fee logic, this method may return an incorrect value or revert.\n  /// In this case, see the plugin implementation and related documentation.\n  /// @dev **important security note: caller should check reentrancy lock to prevent read-only reentrancy**\n  /// @return currentFee The current pool fee value in hundredths of a bip, i.e. 1e-6\n  function fee() external view returns (uint16 currentFee);\n\n  /// @notice The tracked token0 and token1 reserves of pool\n  /// @dev If at any time the real balance is larger, the excess will be transferred to liquidity providers as additional fee.\n  /// If the balance exceeds uint128, the excess will be sent to the communityVault.\n  /// @return reserve0 The last known reserve of token0\n  /// @return reserve1 The last known reserve of token1\n  function getReserves() external view returns (uint128 reserve0, uint128 reserve1);\n\n  /// @notice Returns the information about a position by the position's key\n  /// @dev **important security note: caller should check reentrancy lock to prevent read-only reentrancy**\n  /// @param key The position's key is a packed concatenation of the owner address, bottomTick and topTick indexes\n  /// @return liquidity The amount of liquidity in the position\n  /// @return innerFeeGrowth0Token Fee growth of token0 inside the tick range as of the last mint/burn/poke\n  /// @return innerFeeGrowth1Token Fee growth of token1 inside the tick range as of the last mint/burn/poke\n  /// @return fees0 The computed amount of token0 owed to the position as of the last mint/burn/poke\n  /// @return fees1 The computed amount of token1 owed to the position as of the last mint/burn/poke\n  function positions(\n    bytes32 key\n  ) external view returns (uint256 liquidity, uint256 innerFeeGrowth0Token, uint256 innerFeeGrowth1Token, uint128 fees0, uint128 fees1);\n\n  /// @notice The currently in range liquidity available to the pool\n  /// @dev This value has no relationship to the total liquidity across all ticks.\n  /// Returned value cannot exceed type(uint128).max\n  /// @dev **important security note: caller should check reentrancy lock to prevent read-only reentrancy**\n  /// @return The current in range liquidity\n  function liquidity() external view returns (uint128);\n\n  /// @notice The current tick spacing\n  /// @dev Ticks can only be initialized by new mints at multiples of this value\n  /// e.g.: a tickSpacing of 60 means ticks can be initialized every 60th tick, i.e., ..., -120, -60, 0, 60, 120, ...\n  /// However, tickspacing can be changed after the ticks have been initialized.\n  /// This value is an int24 to avoid casting even though it is always positive.\n  /// @return The current tick spacing\n  function tickSpacing() external view returns (int24);\n\n  /// @notice The previous initialized tick before (or at) current global tick\n  /// @dev **important security note: caller should check reentrancy lock to prevent read-only reentrancy**\n  /// @return The previous initialized tick\n  function prevTickGlobal() external view returns (int24);\n\n  /// @notice The next initialized tick after current global tick\n  /// @dev **important security note: caller should check reentrancy lock to prevent read-only reentrancy**\n  /// @return The next initialized tick\n  function nextTickGlobal() external view returns (int24);\n\n  /// @notice The root of tick search tree\n  /// @dev Each bit corresponds to one node in the second layer of tick tree: '1' if node has at least one active bit.\n  /// **important security note: caller should check reentrancy lock to prevent read-only reentrancy**\n  /// @return The root of tick search tree as bitmap\n  function tickTreeRoot() external view returns (uint32);\n\n  /// @notice The second layer of tick search tree\n  /// @dev Each bit in node corresponds to one node in the leafs layer (`tickTable`) of tick tree: '1' if leaf has at least one active bit.\n  /// **important security note: caller should check reentrancy lock to prevent read-only reentrancy**\n  /// @return The node of tick search tree second layer\n  function tickTreeSecondLayer(int16) external view returns (uint256);\n}\n"},"contracts/interfaces/vault/IAlgebraCommunityVault.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title The interface for the Algebra community fee vault\n/// @notice Community fee from pools is sent here, if it is enabled\n/// @dev Version: Algebra Integral\ninterface IAlgebraCommunityVault {\n  /// @notice Event emitted when a fees has been claimed\n  /// @param token The address of token fee\n  /// @param to The address where claimed rewards were sent to\n  /// @param amount The amount of fees tokens claimed by communityFeeReceiver\n  event TokensWithdrawal(address indexed token, address indexed to, uint256 amount);\n\n  /// @notice Event emitted when a fees has been claimed\n  /// @param token The address of token fee\n  /// @param to The address where claimed rewards were sent to\n  /// @param amount The amount of fees tokens claimed by Algebra\n  event AlgebraTokensWithdrawal(address indexed token, address indexed to, uint256 amount);\n\n  /// @notice Emitted when a AlgebraFeeReceiver address changed\n  /// @param newAlgebraFeeReceiver New Algebra fee receiver address\n  event AlgebraFeeReceiver(address newAlgebraFeeReceiver);\n\n  /// @notice Emitted when a AlgebraFeeManager address change proposed\n  /// @param pendingAlgebraFeeManager New pending Algebra fee manager address\n  event PendingAlgebraFeeManager(address pendingAlgebraFeeManager);\n\n  /// @notice Emitted when a new Algebra fee value proposed\n  /// @param proposedNewAlgebraFee The new proposed Algebra fee value\n  event AlgebraFeeProposal(uint16 proposedNewAlgebraFee);\n\n  /// @notice Emitted when a Algebra fee proposal canceled\n  event CancelAlgebraFeeProposal();\n\n  /// @notice Emitted when a AlgebraFeeManager address changed\n  /// @param newAlgebraFeeManager New Algebra fee manager address\n  event AlgebraFeeManager(address newAlgebraFeeManager);\n\n  /// @notice Emitted when the Algebra fee is changed\n  /// @param newAlgebraFee The new Algebra fee value\n  event AlgebraFee(uint16 newAlgebraFee);\n\n  /// @notice Emitted when a CommunityFeeReceiver address changed\n  /// @param newCommunityFeeReceiver New fee receiver address\n  event CommunityFeeReceiver(address newCommunityFeeReceiver);\n\n  /// @notice Withdraw protocol fees from vault\n  /// @dev Can only be called by algebraFeeManager or communityFeeReceiver\n  /// @param token The token address\n  /// @param amount The amount of token\n  function withdraw(address token, uint256 amount) external;\n\n  struct WithdrawTokensParams {\n    address token;\n    uint256 amount;\n  }\n\n  /// @notice Withdraw protocol fees from vault. Used to claim fees for multiple tokens\n  /// @dev Can be called by algebraFeeManager or communityFeeReceiver\n  /// @param params Array of WithdrawTokensParams objects containing token addresses and amounts to withdraw\n  function withdrawTokens(WithdrawTokensParams[] calldata params) external;\n\n  // ### algebra factory owner permissioned actions ###\n\n  /// @notice Accepts the proposed new Algebra fee\n  /// @dev Can only be called by the factory owner.\n  /// The new value will also be used for previously accumulated tokens that have not yet been withdrawn\n  /// @param newAlgebraFee New Algebra fee value\n  function acceptAlgebraFeeChangeProposal(uint16 newAlgebraFee) external;\n\n  /// @notice Change community fee receiver address\n  /// @dev Can only be called by the factory owner\n  /// @param newCommunityFeeReceiver New community fee receiver address\n  function changeCommunityFeeReceiver(address newCommunityFeeReceiver) external;\n\n  // ### algebra fee manager permissioned actions ###\n\n  /// @notice Transfers Algebra fee manager role\n  /// @param _newAlgebraFeeManager new Algebra fee manager address\n  function transferAlgebraFeeManagerRole(address _newAlgebraFeeManager) external;\n\n  /// @notice accept Algebra FeeManager role\n  function acceptAlgebraFeeManagerRole() external;\n\n  /// @notice Proposes new Algebra fee value for protocol\n  /// @dev the new value will also be used for previously accumulated tokens that have not yet been withdrawn\n  /// @param newAlgebraFee new Algebra fee value\n  function proposeAlgebraFeeChange(uint16 newAlgebraFee) external;\n\n  /// @notice Cancels Algebra fee change proposal\n  function cancelAlgebraFeeChangeProposal() external;\n\n  /// @notice Change Algebra community fee part receiver\n  /// @param newAlgebraFeeReceiver The address of new Algebra fee receiver\n  function changeAlgebraFeeReceiver(address newAlgebraFeeReceiver) external;\n}\n"},"contracts/interfaces/vault/IAlgebraVaultFactory.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title The interface for the Algebra Vault Factory\n/// @notice This contract can be used for automatic vaults creation\n/// @dev Version: Algebra Integral\ninterface IAlgebraVaultFactory {\n  /// @notice returns address of the community fee vault for the pool\n  /// @param pool the address of Algebra Integral pool\n  /// @return communityFeeVault the address of community fee vault\n  function getVaultForPool(address pool) external view returns (address communityFeeVault);\n\n  /// @notice creates the community fee vault for the pool if needed\n  /// @param pool the address of Algebra Integral pool\n  /// @return communityFeeVault the address of community fee vault\n  function createVaultForPool(\n    address pool,\n    address creator,\n    address deployer,\n    address token0,\n    address token1\n  ) external returns (address communityFeeVault);\n}\n"},"contracts/libraries/Constants.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0 <0.9.0;\n\n/// @title Contains common constants for Algebra contracts\n/// @dev Constants moved to the library, not the base contract, to further emphasize their constant nature\nlibrary Constants {\n  uint8 internal constant RESOLUTION = 96;\n  uint256 internal constant Q96 = 1 << 96;\n  uint256 internal constant Q128 = 1 << 128;\n\n  uint24 internal constant FEE_DENOMINATOR = 1e6;\n  uint16 internal constant FLASH_FEE = 0.01e4; // fee for flash loan in hundredths of a bip (0.01%)\n  uint16 internal constant INIT_DEFAULT_FEE = 0.05e4; // init default fee value in hundredths of a bip (0.05%)\n  uint16 internal constant MAX_DEFAULT_FEE = 5e4; // max default fee value in hundredths of a bip (5%)\n\n  int24 internal constant INIT_DEFAULT_TICK_SPACING = 60;\n  int24 internal constant MAX_TICK_SPACING = 500;\n  int24 internal constant MIN_TICK_SPACING = 1;\n\n  // the frequency with which the accumulated community fees are sent to the vault\n  uint32 internal constant FEE_TRANSFER_FREQUENCY = 8 hours;\n\n  // max(uint128) / (MAX_TICK - MIN_TICK)\n  uint128 internal constant MAX_LIQUIDITY_PER_TICK = 191757638537527648490752896198553;\n\n  uint16 internal constant MAX_COMMUNITY_FEE = 1e3; // 100%\n  uint256 internal constant COMMUNITY_FEE_DENOMINATOR = 1e3;\n  // role that can change settings in pools\n  bytes32 internal constant POOLS_ADMINISTRATOR_ROLE = keccak256('POOLS_ADMINISTRATOR');\n}\n"},"contracts/libraries/FullMath.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @title Contains 512-bit math functions\n/// @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n/// @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\nlibrary FullMath {\n  /// @notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n  /// @param a The multiplicand\n  /// @param b The multiplier\n  /// @param denominator The divisor\n  /// @return result The 256-bit result\n  /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n  function mulDiv(uint256 a, uint256 b, uint256 denominator) internal pure returns (uint256 result) {\n    unchecked {\n      // 512-bit multiply [prod1 prod0] = a * b\n      // Compute the product mod 2**256 and mod 2**256 - 1\n      // then use the Chinese Remainder Theorem to reconstruct\n      // the 512 bit result. The result is stored in two 256\n      // variables such that product = prod1 * 2**256 + prod0\n      uint256 prod0 = a * b; // Least significant 256 bits of the product\n      uint256 prod1; // Most significant 256 bits of the product\n      assembly {\n        let mm := mulmod(a, b, not(0))\n        prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n      }\n\n      // Make sure the result is less than 2**256.\n      // Also prevents denominator == 0\n      require(denominator > prod1);\n\n      // Handle non-overflow cases, 256 by 256 division\n      if (prod1 == 0) {\n        assembly {\n          result := div(prod0, denominator)\n        }\n        return result;\n      }\n\n      ///////////////////////////////////////////////\n      // 512 by 256 division.\n      ///////////////////////////////////////////////\n\n      // Make division exact by subtracting the remainder from [prod1 prod0]\n      // Compute remainder using mulmod\n      // Subtract 256 bit remainder from 512 bit number\n      assembly {\n        let remainder := mulmod(a, b, denominator)\n        prod1 := sub(prod1, gt(remainder, prod0))\n        prod0 := sub(prod0, remainder)\n      }\n\n      // Factor powers of two out of denominator\n      // Compute largest power of two divisor of denominator.\n      // Always >= 1.\n      uint256 twos = (0 - denominator) & denominator;\n      // Divide denominator by power of two\n      assembly {\n        denominator := div(denominator, twos)\n      }\n\n      // Divide [prod1 prod0] by the factors of two\n      assembly {\n        prod0 := div(prod0, twos)\n      }\n      // Shift in bits from prod1 into prod0. For this we need\n      // to flip `twos` such that it is 2**256 / twos.\n      // If twos is zero, then it becomes one\n      assembly {\n        twos := add(div(sub(0, twos), twos), 1)\n      }\n      prod0 |= prod1 * twos;\n\n      // Invert denominator mod 2**256\n      // Now that denominator is an odd number, it has an inverse\n      // modulo 2**256 such that denominator * inv = 1 mod 2**256.\n      // Compute the inverse by starting with a seed that is correct\n      // correct for four bits. That is, denominator * inv = 1 mod 2**4\n      uint256 inv = (3 * denominator) ^ 2;\n      // Now use Newton-Raphson iteration to improve the precision.\n      // Thanks to Hensel's lifting lemma, this also works in modular\n      // arithmetic, doubling the correct bits in each step.\n      inv *= 2 - denominator * inv; // inverse mod 2**8\n      inv *= 2 - denominator * inv; // inverse mod 2**16\n      inv *= 2 - denominator * inv; // inverse mod 2**32\n      inv *= 2 - denominator * inv; // inverse mod 2**64\n      inv *= 2 - denominator * inv; // inverse mod 2**128\n      inv *= 2 - denominator * inv; // inverse mod 2**256\n\n      // Because the division is now exact we can divide by multiplying\n      // with the modular inverse of denominator. This will give us the\n      // correct result modulo 2**256. Since the preconditions guarantee\n      // that the outcome is less than 2**256, this is the final result.\n      // We don't need to compute the high bits of the result and prod1\n      // is no longer required.\n      result = prod0 * inv;\n      return result;\n    }\n  }\n\n  /// @notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n  /// @param a The multiplicand\n  /// @param b The multiplier\n  /// @param denominator The divisor\n  /// @return result The 256-bit result\n  function mulDivRoundingUp(uint256 a, uint256 b, uint256 denominator) internal pure returns (uint256 result) {\n    unchecked {\n      if (a == 0 || ((result = a * b) / a == b)) {\n        require(denominator > 0);\n        assembly {\n          result := add(div(result, denominator), gt(mod(result, denominator), 0))\n        }\n      } else {\n        result = mulDiv(a, b, denominator);\n        if (mulmod(a, b, denominator) > 0) {\n          require(result < type(uint256).max);\n          result++;\n        }\n      }\n    }\n  }\n\n  /// @notice Returns ceil(x / y)\n  /// @dev division by 0 has unspecified behavior, and must be checked externally\n  /// @param x The dividend\n  /// @param y The divisor\n  /// @return z The quotient, ceil(x / y)\n  function unsafeDivRoundingUp(uint256 x, uint256 y) internal pure returns (uint256 z) {\n    assembly {\n      z := add(div(x, y), gt(mod(x, y), 0))\n    }\n  }\n}\n"},"contracts/libraries/SafeTransfer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.8.4 <0.9.0;\n\nimport '../interfaces/pool/IAlgebraPoolErrors.sol';\n\n/// @title SafeTransfer\n/// @notice Safe ERC20 transfer library that gracefully handles missing return values.\n/// @dev Credit to Solmate under MIT license: https://github.com/transmissions11/solmate/blob/ed67feda67b24fdeff8ad1032360f0ee6047ba0a/src/utils/SafeTransferLib.sol\n/// @dev Please note that this library does not check if the token has a code! That responsibility is delegated to the caller.\nlibrary SafeTransfer {\n  /// @notice Transfers tokens to a recipient\n  /// @dev Calls transfer on token contract, errors with transferFailed() if transfer fails\n  /// @param token The contract address of the token which will be transferred\n  /// @param to The recipient of the transfer\n  /// @param amount The amount of the token to transfer\n  function safeTransfer(address token, address to, uint256 amount) internal {\n    bool success;\n    assembly {\n      let freeMemoryPointer := mload(0x40) // we will need to restore 0x40 slot\n      mstore(0x00, 0xa9059cbb00000000000000000000000000000000000000000000000000000000) // \"transfer(address,uint256)\" selector\n      mstore(0x04, and(to, 0xffffffffffffffffffffffffffffffffffffffff)) // append cleaned \"to\" address\n      mstore(0x24, amount)\n      // now we use 0x00 - 0x44 bytes (68), freeMemoryPointer is dirty\n      success := call(gas(), token, 0, 0, 0x44, 0, 0x20)\n      success := and(\n        // set success to true if call isn't reverted and returned exactly 1 (can't just be non-zero data) or nothing\n        or(and(eq(mload(0), 1), eq(returndatasize(), 32)), iszero(returndatasize())),\n        success\n      )\n      mstore(0x40, freeMemoryPointer) // restore the freeMemoryPointer\n    }\n\n    if (!success) revert IAlgebraPoolErrors.transferFailed();\n  }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":true,"runs":1000000},"metadata":{"bytecodeHash":"none"},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[315],"Context":[821],"ERC165":[1074],"IAccessControl":[513],"IERC165":[1086],"Math":[1952],"SignedMath":[2057],"Strings":[1050]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":514,"src":"133:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":822,"src":"164:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":1051,"src":"195:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":1075,"src":"226:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Context","nameLocations":["1967:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":821,"src":"1967:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1967:7:0"},{"baseName":{"id":9,"name":"IAccessControl","nameLocations":["1976:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":513,"src":"1976:14:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1976:14:0"},{"baseName":{"id":11,"name":"ERC165","nameLocations":["1992:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"1992:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1992:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"271:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":315,"linearizedBaseContracts":[315,1074,1086,513,821],"name":"AccessControl","nameLocation":"1950:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":19,"members":[{"constant":false,"id":16,"mutability":"mutable","name":"members","nameLocation":"2056:7:0","nodeType":"VariableDeclaration","scope":19,"src":"2031:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":15,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2031:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":14,"name":"bool","nodeType":"ElementaryTypeName","src":"2050:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"adminRole","nameLocation":"2081:9:0","nodeType":"VariableDeclaration","scope":19,"src":"2073:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2073:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2012:8:0","nodeType":"StructDefinition","scope":315,"src":"2005:92:0","visibility":"public"},{"constant":false,"id":24,"mutability":"mutable","name":"_roles","nameLocation":"2140:6:0","nodeType":"VariableDeclaration","scope":315,"src":"2103:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":23,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2103:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"RoleData","nameLocations":["2122:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":19,"src":"2122:8:0"},"referencedDeclaration":19,"src":"2122:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":27,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2177:18:0","nodeType":"VariableDeclaration","scope":315,"src":"2153:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2198:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"2621:44:0","statements":[{"expression":{"arguments":[{"id":33,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2642:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":32,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":92,"src":"2631:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2631:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2631:16:0"},{"id":36,"nodeType":"PlaceholderStatement","src":"2657:1:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"2209:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":38,"name":"onlyRole","nameLocation":"2598:8:0","nodeType":"ModifierDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"role","nameLocation":"2615:4:0","nodeType":"VariableDeclaration","scope":38,"src":"2607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2606:14:0"},"src":"2589:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[1073],"body":{"id":59,"nodeType":"Block","src":"2823:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2840:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"2860:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$513_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$513_$","typeString":"type(contract IAccessControl)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2855:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$513","typeString":"type(contract IAccessControl)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2876:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2855:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2840:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2915:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":53,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2891:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$315_$","typeString":"type(contract super AccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2897:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1073,"src":"2891:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2891:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2840:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":58,"nodeType":"Return","src":"2833:94:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2671:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":60,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2741:17:0","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"2799:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nameLocation":"2766:11:0","nodeType":"VariableDeclaration","scope":60,"src":"2759:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2759:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2758:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60,"src":"2817:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"2817:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2816:6:0"},"scope":315,"src":"2732:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[480],"body":{"id":78,"nodeType":"Block","src":"3113:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":71,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3130:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":73,"indexExpression":{"id":72,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3137:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3143:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3130:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":76,"indexExpression":{"id":75,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3151:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"3123:36:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2940:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3030:7:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"3089:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"role","nameLocation":"3046:4:0","nodeType":"VariableDeclaration","scope":79,"src":"3038:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3038:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"account","nameLocation":"3060:7:0","nodeType":"VariableDeclaration","scope":79,"src":"3052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"3052:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3037:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"3107:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"3107:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3106:6:0"},"scope":315,"src":"3021:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":91,"nodeType":"Block","src":"3516:47:0","statements":[{"expression":{"arguments":[{"id":86,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3537:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"3543:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3543:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":85,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":131,"src":"3526:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3526:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":90,"nodeType":"ExpressionStatement","src":"3526:30:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"3172:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":92,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3469:10:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"role","nameLocation":"3488:4:0","nodeType":"VariableDeclaration","scope":92,"src":"3480:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3480:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3479:14:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"3516:0:0"},"scope":315,"src":"3460:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":130,"nodeType":"Block","src":"3917:406:0","statements":[{"condition":{"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3931:23:0","subExpression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"3940:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3946:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3932:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3932:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3927:390:0","trueBody":{"id":128,"nodeType":"Block","src":"3956:361:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4064:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":113,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4135:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"4115:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1050_$","typeString":"type(library Strings)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4123:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":1024,"src":"4115:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4115:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4169:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":120,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4242:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4234:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4234:7:0","typeDescriptions":{}}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4234:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4249:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":116,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"4214:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1050_$","typeString":"type(library Strings)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4222:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":1004,"src":"4214:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4022:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4026:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"4022:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4022:252:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3994:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3994:6:0","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3994:298:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3970:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3970:336:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"3970:336:0"}]}}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3569:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3853:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"role","nameLocation":"3872:4:0","nodeType":"VariableDeclaration","scope":131,"src":"3864:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3864:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"account","nameLocation":"3886:7:0","nodeType":"VariableDeclaration","scope":131,"src":"3878:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3863:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3917:0:0"},"scope":315,"src":"3844:479:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[488],"body":{"id":145,"nodeType":"Block","src":"4587:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":140,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4604:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":142,"indexExpression":{"id":141,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4611:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4604:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4617:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4604:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":139,"id":144,"nodeType":"Return","src":"4597:29:0"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4329:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":146,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4513:12:0","nodeType":"FunctionDefinition","overrides":{"id":136,"nodeType":"OverrideSpecifier","overrides":[],"src":"4560:8:0"},"parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nameLocation":"4534:4:0","nodeType":"VariableDeclaration","scope":146,"src":"4526:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4526:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4525:14:0"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":146,"src":"4578:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4578:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4577:9:0"},"scope":315,"src":"4504:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[496],"body":{"id":165,"nodeType":"Block","src":"5032:42:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5053:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"5059:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5042:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5042:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"5042:25:0"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4639:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5025:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5012:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5012:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["5003:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5003:8:0"},"nodeType":"ModifierInvocation","src":"5003:28:0"}],"name":"grantRole","nameLocation":"4938:9:0","nodeType":"FunctionDefinition","overrides":{"id":153,"nodeType":"OverrideSpecifier","overrides":[],"src":"4994:8:0"},"parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nameLocation":"4956:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4948:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4948:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"account","nameLocation":"4970:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4962:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"4962:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4947:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"5032:0:0"},"scope":315,"src":"4929:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[504],"body":{"id":185,"nodeType":"Block","src":"5458:43:0","statements":[{"expression":{"arguments":[{"id":181,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5480:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":182,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5486:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":180,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"5468:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5468:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"5468:26:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"5080:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":186,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5451:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":175,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5438:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5438:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":178,"kind":"modifierInvocation","modifierName":{"id":174,"name":"onlyRole","nameLocations":["5429:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5429:8:0"},"nodeType":"ModifierInvocation","src":"5429:28:0"}],"name":"revokeRole","nameLocation":"5363:10:0","nodeType":"FunctionDefinition","overrides":{"id":173,"nodeType":"OverrideSpecifier","overrides":[],"src":"5420:8:0"},"parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5382:4:0","nodeType":"VariableDeclaration","scope":186,"src":"5374:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5374:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"account","nameLocation":"5396:7:0","nodeType":"VariableDeclaration","scope":186,"src":"5388:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5373:31:0"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"5458:0:0"},"scope":315,"src":"5354:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[512],"body":{"id":208,"nodeType":"Block","src":"6115:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":196,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":197,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"6144:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6144:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6133:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6158:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6125:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6125:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"6125:83:0"},{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"6231:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6237:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"6219:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6219:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"6219:26:0"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"5507:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":209,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6047:12:0","nodeType":"FunctionDefinition","overrides":{"id":193,"nodeType":"OverrideSpecifier","overrides":[],"src":"6106:8:0"},"parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"role","nameLocation":"6068:4:0","nodeType":"VariableDeclaration","scope":209,"src":"6060:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6060:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"account","nameLocation":"6082:7:0","nodeType":"VariableDeclaration","scope":209,"src":"6074:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"6074:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6059:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"6115:0:0"},"scope":315,"src":"6038:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"7005:42:0","statements":[{"expression":{"arguments":[{"id":218,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"7026:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":219,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7032:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"7015:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7015:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"ExpressionStatement","src":"7015:25:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"6258:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6946:10:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6965:4:0","nodeType":"VariableDeclaration","scope":223,"src":"6957:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6957:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"account","nameLocation":"6979:7:0","nodeType":"VariableDeclaration","scope":223,"src":"6971:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6971:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6956:31:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"7005:0:0"},"scope":315,"src":"6937:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"7245:174:0","statements":[{"assignments":[232],"declarations":[{"constant":false,"id":232,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7263:17:0","nodeType":"VariableDeclaration","scope":250,"src":"7255:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7255:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":236,"initialValue":{"arguments":[{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7296:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":233,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"7283:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7283:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7255:46:0"},{"expression":{"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":237,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7311:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":239,"indexExpression":{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7318:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7311:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7324:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7311:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":241,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7336:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7311:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":243,"nodeType":"ExpressionStatement","src":"7311:34:0"},{"eventCall":{"arguments":[{"id":245,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7377:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":246,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7383:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":247,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7402:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":244,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"7360:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7360:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"EmitStatement","src":"7355:57:0"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"7053:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7181:13:0","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"role","nameLocation":"7203:4:0","nodeType":"VariableDeclaration","scope":251,"src":"7195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"adminRole","nameLocation":"7217:9:0","nodeType":"VariableDeclaration","scope":251,"src":"7209:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7209:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7194:33:0"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"7245:0:0"},"scope":315,"src":"7172:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"7655:165:0","statements":[{"condition":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7669:23:0","subExpression":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7678:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":259,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7670:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7670:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"7665:149:0","trueBody":{"id":280,"nodeType":"Block","src":"7694:120:0","statements":[{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":264,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7708:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":266,"indexExpression":{"id":265,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7715:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7708:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7721:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7708:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":269,"indexExpression":{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7729:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7708:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7740:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7708:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"ExpressionStatement","src":"7708:36:0"},{"eventCall":{"arguments":[{"id":274,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7775:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7781:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"7790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":273,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7763:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"EmitStatement","src":"7758:45:0"}]}}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"7425:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7596:10:0","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"role","nameLocation":"7615:4:0","nodeType":"VariableDeclaration","scope":283,"src":"7607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"account","nameLocation":"7629:7:0","nodeType":"VariableDeclaration","scope":283,"src":"7621:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"7621:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7606:31:0"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"7655:0:0"},"scope":315,"src":"7587:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"8060:165:0","statements":[{"condition":{"arguments":[{"id":292,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8082:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8088:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"8074:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8074:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":312,"nodeType":"IfStatement","src":"8070:149:0","trueBody":{"id":311,"nodeType":"Block","src":"8098:121:0","statements":[{"expression":{"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":295,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"8112:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":297,"indexExpression":{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8119:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8112:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8125:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"8112:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":300,"indexExpression":{"id":299,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8112:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8144:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8112:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":303,"nodeType":"ExpressionStatement","src":"8112:37:0"},{"eventCall":{"arguments":[{"id":305,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8180:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8186:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":307,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"8195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"8168:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8168:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"EmitStatement","src":"8163:45:0"}]}}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"7826:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"8000:11:0","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"role","nameLocation":"8020:4:0","nodeType":"VariableDeclaration","scope":314,"src":"8012:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8012:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"account","nameLocation":"8034:7:0","nodeType":"VariableDeclaration","scope":314,"src":"8026:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"8026:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8011:31:0"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"8060:0:0"},"scope":315,"src":"7991:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":316,"src":"1932:6295:0","usedErrors":[],"usedEvents":[452,461,470]}],"src":"108:8120:0"},"id":0},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","exportedSymbols":{"AccessControl":[315],"AccessControlEnumerable":[440],"Context":[821],"ERC165":[1074],"EnumerableSet":[2670],"IAccessControl":[513],"IAccessControlEnumerable":[538],"IERC165":[1086],"Math":[1952],"SignedMath":[2057],"Strings":[1050]},"id":441,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:1"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControlEnumerable.sol","file":"./IAccessControlEnumerable.sol","id":318,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":441,"sourceUnit":539,"src":"143:40:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"./AccessControl.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":441,"sourceUnit":316,"src":"184:29:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"../utils/structs/EnumerableSet.sol","id":320,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":441,"sourceUnit":2671,"src":"214:44:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":322,"name":"IAccessControlEnumerable","nameLocations":["400:24:1"],"nodeType":"IdentifierPath","referencedDeclaration":538,"src":"400:24:1"},"id":323,"nodeType":"InheritanceSpecifier","src":"400:24:1"},{"baseName":{"id":324,"name":"AccessControl","nameLocations":["426:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"426:13:1"},"id":325,"nodeType":"InheritanceSpecifier","src":"426:13:1"}],"canonicalName":"AccessControlEnumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":321,"nodeType":"StructuredDocumentation","src":"260:94:1","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":440,"linearizedBaseContracts":[440,315,1074,1086,538,513,821],"name":"AccessControlEnumerable","nameLocation":"373:23:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":329,"libraryName":{"id":326,"name":"EnumerableSet","nameLocations":["452:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":2670,"src":"452:13:1"},"nodeType":"UsingForDirective","src":"446:49:1","typeName":{"id":328,"nodeType":"UserDefinedTypeName","pathNode":{"id":327,"name":"EnumerableSet.AddressSet","nameLocations":["470:13:1","484:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":2383,"src":"470:24:1"},"referencedDeclaration":2383,"src":"470:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"id":334,"mutability":"mutable","name":"_roleMembers","nameLocation":"554:12:1","nodeType":"VariableDeclaration","scope":440,"src":"501:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2383_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":333,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"509:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"501:44:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2383_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":332,"nodeType":"UserDefinedTypeName","pathNode":{"id":331,"name":"EnumerableSet.AddressSet","nameLocations":["520:13:1","534:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":2383,"src":"520:24:1"},"referencedDeclaration":2383,"src":"520:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"private"},{"baseFunctions":[60],"body":{"id":355,"nodeType":"Block","src":"725:121:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":343,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"742:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":345,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"762:24:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$538_$","typeString":"type(contract IAccessControlEnumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$538_$","typeString":"type(contract IAccessControlEnumerable)"}],"id":344,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"757:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"757:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerable_$538","typeString":"type(contract IAccessControlEnumerable)"}},"id":347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"788:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"757:42:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"742:57:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":351,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"827:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":349,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"803:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$440_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"809:17:1","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":60,"src":"803:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"803:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"742:97:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":342,"id":354,"nodeType":"Return","src":"735:104:1"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"573:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":356,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"643:17:1","nodeType":"FunctionDefinition","overrides":{"id":339,"nodeType":"OverrideSpecifier","overrides":[],"src":"701:8:1"},"parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"interfaceId","nameLocation":"668:11:1","nodeType":"VariableDeclaration","scope":356,"src":"661:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":336,"name":"bytes4","nodeType":"ElementaryTypeName","src":"661:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"660:20:1"},"returnParameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":356,"src":"719:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":340,"name":"bool","nodeType":"ElementaryTypeName","src":"719:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"718:6:1"},"scope":440,"src":"634:212:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[529],"body":{"id":374,"nodeType":"Block","src":"1530:52:1","statements":[{"expression":{"arguments":[{"id":371,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"1569:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":367,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"1547:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2383_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":369,"indexExpression":{"id":368,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"1560:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1547:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1566:2:1","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":2506,"src":"1547:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$2383_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$2383_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1547:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":366,"id":373,"nodeType":"Return","src":"1540:35:1"}]},"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"852:574:1","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":375,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"1440:13:1","nodeType":"FunctionDefinition","overrides":{"id":363,"nodeType":"OverrideSpecifier","overrides":[],"src":"1503:8:1"},"parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"role","nameLocation":"1462:4:1","nodeType":"VariableDeclaration","scope":375,"src":"1454:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1454:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"index","nameLocation":"1476:5:1","nodeType":"VariableDeclaration","scope":375,"src":"1468:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":360,"name":"uint256","nodeType":"ElementaryTypeName","src":"1468:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1453:29:1"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":375,"src":"1521:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":364,"name":"address","nodeType":"ElementaryTypeName","src":"1521:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1520:9:1"},"scope":440,"src":"1431:151:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[537],"body":{"id":390,"nodeType":"Block","src":"1839:51:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":384,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"1856:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2383_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":386,"indexExpression":{"id":385,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"1869:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1856:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1875:6:1","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":2479,"src":"1856:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$2383_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$2383_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1856:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":383,"id":389,"nodeType":"Return","src":"1849:34:1"}]},"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"1588:157:1","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":391,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1759:18:1","nodeType":"FunctionDefinition","overrides":{"id":380,"nodeType":"OverrideSpecifier","overrides":[],"src":"1812:8:1"},"parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"role","nameLocation":"1786:4:1","nodeType":"VariableDeclaration","scope":391,"src":"1778:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1778:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1777:14:1"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":391,"src":"1830:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":381,"name":"uint256","nodeType":"ElementaryTypeName","src":"1830:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1829:9:1"},"scope":440,"src":"1750:140:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[283],"body":{"id":414,"nodeType":"Block","src":"2055:89:1","statements":[{"expression":{"arguments":[{"id":403,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2082:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":404,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2088:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":400,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2065:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$440_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2071:10:1","memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":283,"src":"2065:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2065:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":406,"nodeType":"ExpressionStatement","src":"2065:31:1"},{"expression":{"arguments":[{"id":411,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2129:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":407,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2106:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2383_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":409,"indexExpression":{"id":408,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2119:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2106:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2125:3:1","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2410,"src":"2106:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$2383_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$2383_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2106:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":413,"nodeType":"ExpressionStatement","src":"2106:31:1"}]},"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"1896:77:1","text":" @dev Overload {_grantRole} to track enumerable memberships"},"id":415,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"1987:10:1","nodeType":"FunctionDefinition","overrides":{"id":398,"nodeType":"OverrideSpecifier","overrides":[],"src":"2046:8:1"},"parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"role","nameLocation":"2006:4:1","nodeType":"VariableDeclaration","scope":415,"src":"1998:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1998:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"account","nameLocation":"2020:7:1","nodeType":"VariableDeclaration","scope":415,"src":"2012:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"2012:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1997:31:1"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[],"src":"2055:0:1"},"scope":440,"src":"1978:166:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[314],"body":{"id":438,"nodeType":"Block","src":"2311:93:1","statements":[{"expression":{"arguments":[{"id":427,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2339:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":428,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"2345:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":424,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2321:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$440_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2327:11:1","memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":314,"src":"2321:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2321:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"2321:32:1"},{"expression":{"arguments":[{"id":435,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"2389:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":431,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2363:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2383_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":433,"indexExpression":{"id":432,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2376:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2363:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2382:6:1","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":2437,"src":"2363:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$2383_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$2383_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2363:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":437,"nodeType":"ExpressionStatement","src":"2363:34:1"}]},"documentation":{"id":416,"nodeType":"StructuredDocumentation","src":"2150:78:1","text":" @dev Overload {_revokeRole} to track enumerable memberships"},"id":439,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"2242:11:1","nodeType":"FunctionDefinition","overrides":{"id":422,"nodeType":"OverrideSpecifier","overrides":[],"src":"2302:8:1"},"parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"role","nameLocation":"2262:4:1","nodeType":"VariableDeclaration","scope":439,"src":"2254:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":417,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2254:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"account","nameLocation":"2276:7:1","nodeType":"VariableDeclaration","scope":439,"src":"2268:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2253:31:1"},"returnParameters":{"id":423,"nodeType":"ParameterList","parameters":[],"src":"2311:0:1"},"scope":440,"src":"2233:171:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":441,"src":"355:2051:1","usedErrors":[],"usedEvents":[452,461,470]}],"src":"118:2289:1"},"id":1},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[513]},"id":514,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":442,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"119:89:2","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":513,"linearizedBaseContracts":[513],"name":"IAccessControl","nameLocation":"219:14:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"240:292:2","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":452,"name":"RoleAdminChanged","nameLocation":"543:16:2","nodeType":"EventDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:2","nodeType":"VariableDeclaration","scope":452,"src":"560:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":448,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:2","nodeType":"VariableDeclaration","scope":452,"src":"582:33:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":450,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:2","nodeType":"VariableDeclaration","scope":452,"src":"617:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:2"},"src":"537:110:2"},{"anonymous":false,"documentation":{"id":453,"nodeType":"StructuredDocumentation","src":"653:212:2","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":461,"name":"RoleGranted","nameLocation":"876:11:2","nodeType":"EventDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:2","nodeType":"VariableDeclaration","scope":461,"src":"888:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":457,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:2","nodeType":"VariableDeclaration","scope":461,"src":"910:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":459,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:2","nodeType":"VariableDeclaration","scope":461,"src":"935:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:2"},"src":"870:89:2"},{"anonymous":false,"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"965:275:2","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":470,"name":"RoleRevoked","nameLocation":"1251:11:2","nodeType":"EventDefinition","parameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:2","nodeType":"VariableDeclaration","scope":470,"src":"1263:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":463,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":466,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:2","nodeType":"VariableDeclaration","scope":470,"src":"1285:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":465,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":468,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:2","nodeType":"VariableDeclaration","scope":470,"src":"1310:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:2"},"src":"1245:89:2"},{"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"1340:76:2","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":480,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:2","nodeType":"FunctionDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"role","nameLocation":"1446:4:2","nodeType":"VariableDeclaration","scope":480,"src":"1438:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":475,"mutability":"mutable","name":"account","nameLocation":"1460:7:2","nodeType":"VariableDeclaration","scope":480,"src":"1452:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":474,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:2"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":480,"src":"1492:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":477,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:2"},"scope":513,"src":"1421:77:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"1504:184:2","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":488,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:2","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"role","nameLocation":"1723:4:2","nodeType":"VariableDeclaration","scope":488,"src":"1715:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:2"},"returnParameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":488,"src":"1752:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:2"},"scope":513,"src":"1693:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"1767:239:2","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":496,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:2","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"role","nameLocation":"2038:4:2","nodeType":"VariableDeclaration","scope":496,"src":"2030:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":493,"mutability":"mutable","name":"account","nameLocation":"2052:7:2","nodeType":"VariableDeclaration","scope":496,"src":"2044:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:2"},"returnParameters":{"id":495,"nodeType":"ParameterList","parameters":[],"src":"2069:0:2"},"scope":513,"src":"2011:59:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":497,"nodeType":"StructuredDocumentation","src":"2076:223:2","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":504,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:2","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"role","nameLocation":"2332:4:2","nodeType":"VariableDeclaration","scope":504,"src":"2324:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"account","nameLocation":"2346:7:2","nodeType":"VariableDeclaration","scope":504,"src":"2338:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:2"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"2363:0:2"},"scope":513,"src":"2304:60:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"2370:480:2","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":512,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"role","nameLocation":"2885:4:2","nodeType":"VariableDeclaration","scope":512,"src":"2877:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":506,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":509,"mutability":"mutable","name":"account","nameLocation":"2899:7:2","nodeType":"VariableDeclaration","scope":512,"src":"2891:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:2"},"returnParameters":{"id":511,"nodeType":"ParameterList","parameters":[],"src":"2916:0:2"},"scope":513,"src":"2855:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":514,"src":"209:2710:2","usedErrors":[],"usedEvents":[452,461,470]}],"src":"94:2826:2"},"id":2},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControlEnumerable.sol","exportedSymbols":{"IAccessControl":[513],"IAccessControlEnumerable":[538]},"id":539,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":515,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"104:23:3"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":516,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":539,"sourceUnit":514,"src":"129:30:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":518,"name":"IAccessControl","nameLocations":["299:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":513,"src":"299:14:3"},"id":519,"nodeType":"InheritanceSpecifier","src":"299:14:3"}],"canonicalName":"IAccessControlEnumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"161:99:3","text":" @dev External interface of AccessControlEnumerable declared to support ERC165 detection."},"fullyImplemented":false,"id":538,"linearizedBaseContracts":[538,513],"name":"IAccessControlEnumerable","nameLocation":"271:24:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"320:574:3","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":529,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"908:13:3","nodeType":"FunctionDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"role","nameLocation":"930:4:3","nodeType":"VariableDeclaration","scope":529,"src":"922:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"922:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":524,"mutability":"mutable","name":"index","nameLocation":"944:5:3","nodeType":"VariableDeclaration","scope":529,"src":"936:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":523,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"921:29:3"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":529,"src":"974:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"974:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"973:9:3"},"scope":538,"src":"899:84:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"989:157:3","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":537,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1160:18:3","nodeType":"FunctionDefinition","parameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"role","nameLocation":"1187:4:3","nodeType":"VariableDeclaration","scope":537,"src":"1179:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":531,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1179:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1178:14:3"},"returnParameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":537,"src":"1216:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"1216:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1215:9:3"},"scope":538,"src":"1151:74:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":539,"src":"261:966:3","usedErrors":[],"usedEvents":[452,461,470]}],"src":"104:1124:3"},"id":3},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[821],"Ownable":[651]},"id":652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":540,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":541,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":822,"src":"127:30:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":543,"name":"Context","nameLocations":["683:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":821,"src":"683:7:4"},"id":544,"nodeType":"InheritanceSpecifier","src":"683:7:4"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"159:494:4","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":651,"linearizedBaseContracts":[651,821],"name":"Ownable","nameLocation":"672:7:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":546,"mutability":"mutable","name":"_owner","nameLocation":"713:6:4","nodeType":"VariableDeclaration","scope":651,"src":"697:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":545,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":552,"name":"OwnershipTransferred","nameLocation":"732:20:4","nodeType":"EventDefinition","parameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:4","nodeType":"VariableDeclaration","scope":552,"src":"753:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":547,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":550,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:4","nodeType":"VariableDeclaration","scope":552,"src":"784:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:4"},"src":"726:84:4"},{"body":{"id":561,"nodeType":"Block","src":"926:49:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":557,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"955:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":556,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"936:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":560,"nodeType":"ExpressionStatement","src":"936:32:4"}]},"documentation":{"id":553,"nodeType":"StructuredDocumentation","src":"816:91:4","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":562,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":554,"nodeType":"ParameterList","parameters":[],"src":"923:2:4"},"returnParameters":{"id":555,"nodeType":"ParameterList","parameters":[],"src":"926:0:4"},"scope":651,"src":"912:63:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":569,"nodeType":"Block","src":"1084:41:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":565,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"1094:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":567,"nodeType":"ExpressionStatement","src":"1094:13:4"},{"id":568,"nodeType":"PlaceholderStatement","src":"1117:1:4"}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"981:77:4","text":" @dev Throws if called by any account other than the owner."},"id":570,"name":"onlyOwner","nameLocation":"1072:9:4","nodeType":"ModifierDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"1081:2:4"},"src":"1063:62:4","virtual":false,"visibility":"internal"},{"body":{"id":578,"nodeType":"Block","src":"1256:30:4","statements":[{"expression":{"id":576,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1273:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":575,"id":577,"nodeType":"Return","src":"1266:13:4"}]},"documentation":{"id":571,"nodeType":"StructuredDocumentation","src":"1131:65:4","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":579,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:4","nodeType":"FunctionDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"1215:2:4"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":579,"src":"1247:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":573,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:4"},"scope":651,"src":"1201:85:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":592,"nodeType":"Block","src":"1404:85:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":584,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"1422:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":586,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"1433:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":583,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":591,"nodeType":"ExpressionStatement","src":"1414:68:4"}]},"documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"1292:62:4","text":" @dev Throws if the sender is not the owner."},"id":593,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:4","nodeType":"FunctionDefinition","parameters":{"id":581,"nodeType":"ParameterList","parameters":[],"src":"1379:2:4"},"returnParameters":{"id":582,"nodeType":"ParameterList","parameters":[],"src":"1404:0:4"},"scope":651,"src":"1359:130:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":606,"nodeType":"Block","src":"1878:47:4","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:4","typeDescriptions":{}}},"id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":599,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"1888:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":605,"nodeType":"ExpressionStatement","src":"1888:30:4"}]},"documentation":{"id":594,"nodeType":"StructuredDocumentation","src":"1495:324:4","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":607,"implemented":true,"kind":"function","modifiers":[{"id":597,"kind":"modifierInvocation","modifierName":{"id":596,"name":"onlyOwner","nameLocations":["1868:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":570,"src":"1868:9:4"},"nodeType":"ModifierInvocation","src":"1868:9:4"}],"name":"renounceOwnership","nameLocation":"1833:17:4","nodeType":"FunctionDefinition","parameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"1850:2:4"},"returnParameters":{"id":598,"nodeType":"ParameterList","parameters":[],"src":"1878:0:4"},"scope":651,"src":"1824:101:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":629,"nodeType":"Block","src":"2144:128:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":616,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"2162:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:4","typeDescriptions":{}}},"id":620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":615,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":624,"nodeType":"ExpressionStatement","src":"2154:73:4"},{"expression":{"arguments":[{"id":626,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"2256:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":625,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"2237:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":628,"nodeType":"ExpressionStatement","src":"2237:28:4"}]},"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"1931:138:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":630,"implemented":true,"kind":"function","modifiers":[{"id":613,"kind":"modifierInvocation","modifierName":{"id":612,"name":"onlyOwner","nameLocations":["2134:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":570,"src":"2134:9:4"},"nodeType":"ModifierInvocation","src":"2134:9:4"}],"name":"transferOwnership","nameLocation":"2083:17:4","nodeType":"FunctionDefinition","parameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:4","nodeType":"VariableDeclaration","scope":630,"src":"2101:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":609,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:4"},"returnParameters":{"id":614,"nodeType":"ParameterList","parameters":[],"src":"2144:0:4"},"scope":651,"src":"2074:198:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":649,"nodeType":"Block","src":"2489:124:4","statements":[{"assignments":[637],"declarations":[{"constant":false,"id":637,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:4","nodeType":"VariableDeclaration","scope":649,"src":"2499:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":639,"initialValue":{"id":638,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"2518:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:4"},{"expression":{"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":640,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"2534:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":641,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"2543:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":643,"nodeType":"ExpressionStatement","src":"2534:17:4"},{"eventCall":{"arguments":[{"id":645,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"2587:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":646,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"2597:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":644,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"2566:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":648,"nodeType":"EmitStatement","src":"2561:45:4"}]},"documentation":{"id":631,"nodeType":"StructuredDocumentation","src":"2278:143:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":650,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:4","nodeType":"FunctionDefinition","parameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:4","nodeType":"VariableDeclaration","scope":650,"src":"2454:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":632,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:4"},"returnParameters":{"id":635,"nodeType":"ParameterList","parameters":[],"src":"2489:0:4"},"scope":651,"src":"2426:187:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":652,"src":"654:1961:4","usedErrors":[],"usedEvents":[552]}],"src":"102:2514:4"},"id":4},"@openzeppelin/contracts/access/Ownable2Step.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable2Step.sol","exportedSymbols":{"Context":[821],"Ownable":[651],"Ownable2Step":[734]},"id":735,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":653,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:5"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"./Ownable.sol","id":654,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":735,"sourceUnit":652,"src":"132:23:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":656,"name":"Ownable","nameLocations":["633:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"633:7:5"},"id":657,"nodeType":"InheritanceSpecifier","src":"633:7:5"}],"canonicalName":"Ownable2Step","contractDependencies":[],"contractKind":"contract","documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"157:441:5","text":" @dev Contract module which provides access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership} and {acceptOwnership}.\n This module is used through inheritance. It will make available all functions\n from parent (Ownable)."},"fullyImplemented":true,"id":734,"linearizedBaseContracts":[734,651,821],"name":"Ownable2Step","nameLocation":"617:12:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":659,"mutability":"mutable","name":"_pendingOwner","nameLocation":"663:13:5","nodeType":"VariableDeclaration","scope":734,"src":"647:29:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700","id":665,"name":"OwnershipTransferStarted","nameLocation":"689:24:5","nodeType":"EventDefinition","parameters":{"id":664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"730:13:5","nodeType":"VariableDeclaration","scope":665,"src":"714:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"714:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":663,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"761:8:5","nodeType":"VariableDeclaration","scope":665,"src":"745:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"745:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"713:57:5"},"src":"683:88:5"},{"body":{"id":673,"nodeType":"Block","src":"909:37:5","statements":[{"expression":{"id":671,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"926:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":670,"id":672,"nodeType":"Return","src":"919:20:5"}]},"documentation":{"id":666,"nodeType":"StructuredDocumentation","src":"777:65:5","text":" @dev Returns the address of the pending owner."},"functionSelector":"e30c3978","id":674,"implemented":true,"kind":"function","modifiers":[],"name":"pendingOwner","nameLocation":"856:12:5","nodeType":"FunctionDefinition","parameters":{"id":667,"nodeType":"ParameterList","parameters":[],"src":"868:2:5"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":674,"src":"900:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"899:9:5"},"scope":734,"src":"847:99:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[630],"body":{"id":693,"nodeType":"Block","src":"1218:99:5","statements":[{"expression":{"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":683,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"1228:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":684,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"1244:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1228:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":686,"nodeType":"ExpressionStatement","src":"1228:24:5"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":688,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"1292:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1292:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":690,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"1301:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":687,"name":"OwnershipTransferStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"1267:24:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1267:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":692,"nodeType":"EmitStatement","src":"1262:48:5"}]},"documentation":{"id":675,"nodeType":"StructuredDocumentation","src":"952:182:5","text":" @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":694,"implemented":true,"kind":"function","modifiers":[{"id":681,"kind":"modifierInvocation","modifierName":{"id":680,"name":"onlyOwner","nameLocations":["1208:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":570,"src":"1208:9:5"},"nodeType":"ModifierInvocation","src":"1208:9:5"}],"name":"transferOwnership","nameLocation":"1148:17:5","nodeType":"FunctionDefinition","overrides":{"id":679,"nodeType":"OverrideSpecifier","overrides":[],"src":"1199:8:5"},"parameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":677,"mutability":"mutable","name":"newOwner","nameLocation":"1174:8:5","nodeType":"VariableDeclaration","scope":694,"src":"1166:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"1166:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1165:18:5"},"returnParameters":{"id":682,"nodeType":"ParameterList","parameters":[],"src":"1218:0:5"},"scope":734,"src":"1139:178:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[650],"body":{"id":710,"nodeType":"Block","src":"1573:81:5","statements":[{"expression":{"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1583:20:5","subExpression":{"id":701,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"1590:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":703,"nodeType":"ExpressionStatement","src":"1583:20:5"},{"expression":{"arguments":[{"id":707,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"1638:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":704,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1613:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Ownable2Step_$734_$","typeString":"type(contract super Ownable2Step)"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1619:18:5","memberName":"_transferOwnership","nodeType":"MemberAccess","referencedDeclaration":650,"src":"1613:24:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1613:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":709,"nodeType":"ExpressionStatement","src":"1613:34:5"}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"1323:173:5","text":" @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n Internal function without access restriction."},"id":711,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"1510:18:5","nodeType":"FunctionDefinition","overrides":{"id":699,"nodeType":"OverrideSpecifier","overrides":[],"src":"1564:8:5"},"parameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"mutability":"mutable","name":"newOwner","nameLocation":"1537:8:5","nodeType":"VariableDeclaration","scope":711,"src":"1529:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"1529:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1528:18:5"},"returnParameters":{"id":700,"nodeType":"ParameterList","parameters":[],"src":"1573:0:5"},"scope":734,"src":"1501:153:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":732,"nodeType":"Block","src":"1776:170:5","statements":[{"assignments":[716],"declarations":[{"constant":false,"id":716,"mutability":"mutable","name":"sender","nameLocation":"1794:6:5","nodeType":"VariableDeclaration","scope":732,"src":"1786:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"1786:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":719,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":717,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"1803:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1803:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1786:29:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":721,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"1833:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1833:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":723,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"1851:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1833:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206e6577206f776e6572","id":725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1859:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","typeString":"literal_string \"Ownable2Step: caller is not the new owner\""},"value":"Ownable2Step: caller is not the new owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","typeString":"literal_string \"Ownable2Step: caller is not the new owner\""}],"id":720,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1825:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1825:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":727,"nodeType":"ExpressionStatement","src":"1825:78:5"},{"expression":{"arguments":[{"id":729,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"1932:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":728,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[711],"referencedDeclaration":711,"src":"1913:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1913:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":731,"nodeType":"ExpressionStatement","src":"1913:26:5"}]},"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"1660:69:5","text":" @dev The new owner accepts the ownership transfer."},"functionSelector":"79ba5097","id":733,"implemented":true,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"1743:15:5","nodeType":"FunctionDefinition","parameters":{"id":713,"nodeType":"ParameterList","parameters":[],"src":"1758:2:5"},"returnParameters":{"id":714,"nodeType":"ParameterList","parameters":[],"src":"1776:0:5"},"scope":734,"src":"1734:212:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":735,"src":"599:1349:5","usedErrors":[],"usedEvents":[552,665]}],"src":"107:1842:5"},"id":5},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[799]},"id":800,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":736,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:6"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"137:750:6","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":799,"linearizedBaseContracts":[799],"name":"ReentrancyGuard","nameLocation":"906:15:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":740,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:6","nodeType":"VariableDeclaration","scope":799,"src":"1676:41:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":743,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:6","nodeType":"VariableDeclaration","scope":799,"src":"1723:37:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":741,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":745,"mutability":"mutable","name":"_status","nameLocation":"1783:7:6","nodeType":"VariableDeclaration","scope":799,"src":"1767:23:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":744,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":752,"nodeType":"Block","src":"1811:39:6","statements":[{"expression":{"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":748,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"1821:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":749,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"1831:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":751,"nodeType":"ExpressionStatement","src":"1821:22:6"}]},"id":753,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":746,"nodeType":"ParameterList","parameters":[],"src":"1808:2:6"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[],"src":"1811:0:6"},"scope":799,"src":"1797:53:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":763,"nodeType":"Block","src":"2251:79:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":756,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"2261:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"ExpressionStatement","src":"2261:21:6"},{"id":759,"nodeType":"PlaceholderStatement","src":"2292:1:6"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":760,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"2303:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":762,"nodeType":"ExpressionStatement","src":"2303:20:6"}]},"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"1856:366:6","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":764,"name":"nonReentrant","nameLocation":"2236:12:6","nodeType":"ModifierDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[],"src":"2248:2:6"},"src":"2227:103:6","virtual":false,"visibility":"internal"},{"body":{"id":778,"nodeType":"Block","src":"2375:248:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":768,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"2468:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":769,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"2479:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":767,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":773,"nodeType":"ExpressionStatement","src":"2460:63:6"},{"expression":{"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":774,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"2598:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":775,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"2608:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":777,"nodeType":"ExpressionStatement","src":"2598:18:6"}]},"id":779,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:6","nodeType":"FunctionDefinition","parameters":{"id":765,"nodeType":"ParameterList","parameters":[],"src":"2364:2:6"},"returnParameters":{"id":766,"nodeType":"ParameterList","parameters":[],"src":"2375:0:6"},"scope":799,"src":"2336:287:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":786,"nodeType":"Block","src":"2667:171:6","statements":[{"expression":{"id":784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":782,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"2809:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":783,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"2819:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":785,"nodeType":"ExpressionStatement","src":"2809:22:6"}]},"id":787,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:6","nodeType":"FunctionDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[],"src":"2656:2:6"},"returnParameters":{"id":781,"nodeType":"ParameterList","parameters":[],"src":"2667:0:6"},"scope":799,"src":"2629:209:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":797,"nodeType":"Block","src":"3081:43:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":793,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"3098:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":794,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"3109:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":792,"id":796,"nodeType":"Return","src":"3091:26:6"}]},"documentation":{"id":788,"nodeType":"StructuredDocumentation","src":"2844:168:6","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":798,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:6","nodeType":"FunctionDefinition","parameters":{"id":789,"nodeType":"ParameterList","parameters":[],"src":"3049:2:6"},"returnParameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":798,"src":"3075:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":790,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:6"},"scope":799,"src":"3017:107:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":800,"src":"888:2238:6","usedErrors":[],"usedEvents":[]}],"src":"112:3015:6"},"id":6},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[821]},"id":822,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":801,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:7"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"111:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":821,"linearizedBaseContracts":[821],"name":"Context","nameLocation":"626:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":810,"nodeType":"Block","src":"702:34:7","statements":[{"expression":{"expression":{"id":807,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:7","memberName":"sender","nodeType":"MemberAccess","src":"719:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":806,"id":809,"nodeType":"Return","src":"712:17:7"}]},"id":811,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:7","nodeType":"FunctionDefinition","parameters":{"id":803,"nodeType":"ParameterList","parameters":[],"src":"659:2:7"},"returnParameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":811,"src":"693:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:7"},"scope":821,"src":"640:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":819,"nodeType":"Block","src":"809:32:7","statements":[{"expression":{"expression":{"id":816,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:7","memberName":"data","nodeType":"MemberAccess","src":"826:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":815,"id":818,"nodeType":"Return","src":"819:15:7"}]},"id":820,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:7","nodeType":"FunctionDefinition","parameters":{"id":812,"nodeType":"ParameterList","parameters":[],"src":"759:2:7"},"returnParameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":820,"src":"793:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":813,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:7"},"scope":821,"src":"742:99:7","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":822,"src":"608:235:7","usedErrors":[],"usedEvents":[]}],"src":"86:758:7"},"id":7},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[1952],"SignedMath":[2057],"Strings":[1050]},"id":1051,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":823,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":824,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1051,"sourceUnit":1953,"src":"126:25:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":825,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1051,"sourceUnit":2058,"src":"152:31:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":826,"nodeType":"StructuredDocumentation","src":"185:34:8","text":" @dev String operations."},"fullyImplemented":true,"id":1050,"linearizedBaseContracts":[1050],"name":"Strings","nameLocation":"228:7:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":829,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:8","nodeType":"VariableDeclaration","scope":1050,"src":"242:54:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":827,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:8","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":832,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:8","nodeType":"VariableDeclaration","scope":1050,"src":"302:43:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":830,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:8","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":879,"nodeType":"Block","src":"518:625:8","statements":[{"id":878,"nodeType":"UncheckedBlock","src":"528:609:8","statements":[{"assignments":[841],"declarations":[{"constant":false,"id":841,"mutability":"mutable","name":"length","nameLocation":"560:6:8","nodeType":"VariableDeclaration","scope":878,"src":"552:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":848,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"580:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":842,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"569:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1952_$","typeString":"type(library Math)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:8","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":1789,"src":"569:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:8"},{"assignments":[850],"declarations":[{"constant":false,"id":850,"mutability":"mutable","name":"buffer","nameLocation":"618:6:8","nodeType":"VariableDeclaration","scope":878,"src":"604:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":849,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":855,"initialValue":{"arguments":[{"id":853,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"638:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":851,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:8"},{"assignments":[857],"declarations":[{"constant":false,"id":857,"mutability":"mutable","name":"ptr","nameLocation":"667:3:8","nodeType":"VariableDeclaration","scope":878,"src":"659:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":858,"nodeType":"VariableDeclarationStatement","src":"659:11:8"},{"AST":{"nodeType":"YulBlock","src":"740:67:8","statements":[{"nodeType":"YulAssignment","src":"758:35:8","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:8","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:8"},"nodeType":"YulFunctionCall","src":"777:15:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:8"},"nodeType":"YulFunctionCall","src":"765:28:8"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:8"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":850,"isOffset":false,"isSlot":false,"src":"769:6:8","valueSize":1},{"declaration":841,"isOffset":false,"isSlot":false,"src":"785:6:8","valueSize":1},{"declaration":857,"isOffset":false,"isSlot":false,"src":"758:3:8","valueSize":1}],"id":859,"nodeType":"InlineAssembly","src":"731:76:8"},{"body":{"id":874,"nodeType":"Block","src":"833:267:8","statements":[{"expression":{"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:8","subExpression":{"id":861,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"851:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":863,"nodeType":"ExpressionStatement","src":"851:5:8"},{"AST":{"nodeType":"YulBlock","src":"934:84:8","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:8"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:8","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:8"},"nodeType":"YulFunctionCall","src":"974:14:8"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:8"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:8"},"nodeType":"YulFunctionCall","src":"969:30:8"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:8"},"nodeType":"YulFunctionCall","src":"956:44:8"},"nodeType":"YulExpressionStatement","src":"956:44:8"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":829,"isOffset":false,"isSlot":false,"src":"990:8:8","valueSize":1},{"declaration":857,"isOffset":false,"isSlot":false,"src":"964:3:8","valueSize":1},{"declaration":835,"isOffset":false,"isSlot":false,"src":"978:5:8","valueSize":1}],"id":864,"nodeType":"InlineAssembly","src":"925:93:8"},{"expression":{"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"1035:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":868,"nodeType":"ExpressionStatement","src":"1035:11:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"1068:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":873,"nodeType":"IfStatement","src":"1064:21:8","trueBody":{"id":872,"nodeType":"Break","src":"1080:5:8"}}]},"condition":{"hexValue":"74727565","id":860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":875,"nodeType":"WhileStatement","src":"820:280:8"},{"expression":{"id":876,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"1120:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":839,"id":877,"nodeType":"Return","src":"1113:13:8"}]}]},"documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"352:90:8","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":880,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:8","nodeType":"FunctionDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"mutability":"mutable","name":"value","nameLocation":"473:5:8","nodeType":"VariableDeclaration","scope":880,"src":"465:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:8"},"returnParameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":880,"src":"503:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":837,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:8"},"scope":1050,"src":"447:696:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":907,"nodeType":"Block","src":"1313:103:8","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"1354:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:8","trueExpression":{"hexValue":"2d","id":895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"1400:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":899,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"1385:10:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$2057_$","typeString":"type(library SignedMath)"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:8","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":2056,"src":"1385:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":898,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[880,908],"referencedDeclaration":880,"src":"1376:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":890,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":888,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:8","typeDescriptions":{}}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":887,"id":906,"nodeType":"Return","src":"1323:86:8"}]},"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"1149:89:8","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":908,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:8","nodeType":"FunctionDefinition","parameters":{"id":884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":883,"mutability":"mutable","name":"value","nameLocation":"1268:5:8","nodeType":"VariableDeclaration","scope":908,"src":"1261:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":882,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:8"},"returnParameters":{"id":887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":908,"src":"1298:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":885,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:8"},"scope":1050,"src":"1243:173:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":927,"nodeType":"Block","src":"1595:100:8","statements":[{"id":926,"nodeType":"UncheckedBlock","src":"1605:84:8","statements":[{"expression":{"arguments":[{"id":917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"1648:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"1667:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":918,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"1655:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1952_$","typeString":"type(library Math)"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:8","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":1912,"src":"1655:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":916,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[928,1004,1024],"referencedDeclaration":1004,"src":"1636:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":915,"id":925,"nodeType":"Return","src":"1629:49:8"}]}]},"documentation":{"id":909,"nodeType":"StructuredDocumentation","src":"1422:94:8","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":928,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:8","nodeType":"FunctionDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"mutability":"mutable","name":"value","nameLocation":"1550:5:8","nodeType":"VariableDeclaration","scope":928,"src":"1542:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":910,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:8"},"returnParameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":928,"src":"1580:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":913,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:8"},"scope":1050,"src":"1521:174:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1003,"nodeType":"Block","src":"1908:347:8","statements":[{"assignments":[939],"declarations":[{"constant":false,"id":939,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:8","nodeType":"VariableDeclaration","scope":1003,"src":"1918:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":938,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":948,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":943,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"1954:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":940,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:8"},{"expression":{"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":949,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"1975:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":951,"indexExpression":{"hexValue":"30","id":950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":954,"nodeType":"ExpressionStatement","src":"1975:15:8"},{"expression":{"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":955,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"2000:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":957,"indexExpression":{"hexValue":"31","id":956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":960,"nodeType":"ExpressionStatement","src":"2000:15:8"},{"body":{"id":989,"nodeType":"Block","src":"2070:83:8","statements":[{"expression":{"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":975,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"2084:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":977,"indexExpression":{"id":976,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"2091:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":978,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"2096:8:8","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":982,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"2105:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:8","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":984,"nodeType":"ExpressionStatement","src":"2084:33:8"},{"expression":{"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"2131:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":988,"nodeType":"ExpressionStatement","src":"2131:11:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":969,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"2058:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":990,"initializationExpression":{"assignments":[962],"declarations":[{"constant":false,"id":962,"mutability":"mutable","name":"i","nameLocation":"2038:1:8","nodeType":"VariableDeclaration","scope":990,"src":"2030:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":968,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":964,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"2046:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:8"},"loopExpression":{"expression":{"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:8","subExpression":{"id":972,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"2067:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":974,"nodeType":"ExpressionStatement","src":"2065:3:8"},"nodeType":"ForStatement","src":"2025:128:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"2170:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":991,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":997,"nodeType":"ExpressionStatement","src":"2162:55:8"},{"expression":{"arguments":[{"id":1000,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"2241:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":998,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:8","typeDescriptions":{}}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":937,"id":1002,"nodeType":"Return","src":"2227:21:8"}]},"documentation":{"id":929,"nodeType":"StructuredDocumentation","src":"1701:112:8","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1004,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:8","nodeType":"FunctionDefinition","parameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"value","nameLocation":"1847:5:8","nodeType":"VariableDeclaration","scope":1004,"src":"1839:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":933,"mutability":"mutable","name":"length","nameLocation":"1862:6:8","nodeType":"VariableDeclaration","scope":1004,"src":"1854:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":932,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:8"},"returnParameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1004,"src":"1893:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":935,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:8"},"scope":1050,"src":"1818:437:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1023,"nodeType":"Block","src":"2480:76:8","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1017,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"2525:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1015,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:8","typeDescriptions":{}}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1013,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:8","typeDescriptions":{}}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1020,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"2533:15:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1012,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[928,1004,1024],"referencedDeclaration":1004,"src":"2497:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1011,"id":1022,"nodeType":"Return","src":"2490:59:8"}]},"documentation":{"id":1005,"nodeType":"StructuredDocumentation","src":"2261:141:8","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1024,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:8","nodeType":"FunctionDefinition","parameters":{"id":1008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1007,"mutability":"mutable","name":"addr","nameLocation":"2436:4:8","nodeType":"VariableDeclaration","scope":1024,"src":"2428:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:8"},"returnParameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1024,"src":"2465:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1009,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:8"},"scope":1050,"src":"2407:149:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1048,"nodeType":"Block","src":"2711:66:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1037,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"2744:1:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1035,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:8","typeDescriptions":{}}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1034,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1043,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"2767:1:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1041,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:8","typeDescriptions":{}}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1040,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1033,"id":1047,"nodeType":"Return","src":"2721:49:8"}]},"documentation":{"id":1025,"nodeType":"StructuredDocumentation","src":"2562:66:8","text":" @dev Returns true if the two strings are equal."},"id":1049,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:8","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"a","nameLocation":"2662:1:8","nodeType":"VariableDeclaration","scope":1049,"src":"2648:15:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1026,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1029,"mutability":"mutable","name":"b","nameLocation":"2679:1:8","nodeType":"VariableDeclaration","scope":1049,"src":"2665:15:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1028,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:8"},"returnParameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1049,"src":"2705:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1031,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:8"},"scope":1050,"src":"2633:144:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1051,"src":"220:2559:8","usedErrors":[],"usedEvents":[]}],"src":"101:2679:8"},"id":8},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1074],"IERC165":[1086]},"id":1075,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1052,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:9"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1053,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1075,"sourceUnit":1087,"src":"124:23:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1055,"name":"IERC165","nameLocations":["754:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1086,"src":"754:7:9"},"id":1056,"nodeType":"InheritanceSpecifier","src":"754:7:9"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1054,"nodeType":"StructuredDocumentation","src":"149:576:9","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":1074,"linearizedBaseContracts":[1074,1086],"name":"ERC165","nameLocation":"744:6:9","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1085],"body":{"id":1072,"nodeType":"Block","src":"920:64:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1065,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"937:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1067,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"957:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1086_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1086_$","typeString":"type(contract IERC165)"}],"id":1066,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1086","typeString":"type(contract IERC165)"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:9","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1064,"id":1071,"nodeType":"Return","src":"930:47:9"}]},"documentation":{"id":1057,"nodeType":"StructuredDocumentation","src":"768:56:9","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1073,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:9","nodeType":"FunctionDefinition","overrides":{"id":1061,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:9"},"parameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:9","nodeType":"VariableDeclaration","scope":1073,"src":"856:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1058,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:9"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1073,"src":"914:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1062,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:9"},"scope":1074,"src":"829:155:9","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1075,"src":"726:260:9","usedErrors":[],"usedEvents":[]}],"src":"99:888:9"},"id":9},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1086]},"id":1087,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1076,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"125:279:10","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1086,"linearizedBaseContracts":[1086],"name":"IERC165","nameLocation":"415:7:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1078,"nodeType":"StructuredDocumentation","src":"429:340:10","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1085,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:10","nodeType":"FunctionDefinition","parameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:10","nodeType":"VariableDeclaration","scope":1085,"src":"801:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1079,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:10"},"returnParameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1085,"src":"844:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1082,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:10"},"scope":1086,"src":"774:76:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1087,"src":"405:447:10","usedErrors":[],"usedEvents":[]}],"src":"100:753:10"},"id":10},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1952]},"id":1953,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1088,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1089,"nodeType":"StructuredDocumentation","src":"128:73:11","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1952,"linearizedBaseContracts":[1952],"name":"Math","nameLocation":"210:4:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1093,"members":[{"id":1090,"name":"Down","nameLocation":"245:4:11","nodeType":"EnumValue","src":"245:4:11"},{"id":1091,"name":"Up","nameLocation":"287:2:11","nodeType":"EnumValue","src":"287:2:11"},{"id":1092,"name":"Zero","nameLocation":"318:4:11","nodeType":"EnumValue","src":"318:4:11"}],"name":"Rounding","nameLocation":"226:8:11","nodeType":"EnumDefinition","src":"221:122:11"},{"body":{"id":1110,"nodeType":"Block","src":"480:37:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1103,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"497:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1104,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"501:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1107,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"509:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:11","trueExpression":{"id":1106,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"505:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1102,"id":1109,"nodeType":"Return","src":"490:20:11"}]},"documentation":{"id":1094,"nodeType":"StructuredDocumentation","src":"349:59:11","text":" @dev Returns the largest of two numbers."},"id":1111,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:11","nodeType":"FunctionDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"a","nameLocation":"434:1:11","nodeType":"VariableDeclaration","scope":1111,"src":"426:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"b","nameLocation":"445:1:11","nodeType":"VariableDeclaration","scope":1111,"src":"437:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:11"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1111,"src":"471:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:11"},"scope":1952,"src":"413:104:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1128,"nodeType":"Block","src":"655:37:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1121,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"672:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1122,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"676:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1125,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"684:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:11","trueExpression":{"id":1124,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"680:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1120,"id":1127,"nodeType":"Return","src":"665:20:11"}]},"documentation":{"id":1112,"nodeType":"StructuredDocumentation","src":"523:60:11","text":" @dev Returns the smallest of two numbers."},"id":1129,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:11","nodeType":"FunctionDefinition","parameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"a","nameLocation":"609:1:11","nodeType":"VariableDeclaration","scope":1129,"src":"601:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1113,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1116,"mutability":"mutable","name":"b","nameLocation":"620:1:11","nodeType":"VariableDeclaration","scope":1129,"src":"612:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1115,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:11"},"returnParameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1129,"src":"646:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:11"},"scope":1952,"src":"588:104:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1151,"nodeType":"Block","src":"876:82:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1139,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"931:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1140,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"935:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1142,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1143,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"941:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1144,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"945:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1146,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1138,"id":1150,"nodeType":"Return","src":"923:28:11"}]},"documentation":{"id":1130,"nodeType":"StructuredDocumentation","src":"698:102:11","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1152,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:11","nodeType":"FunctionDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"a","nameLocation":"830:1:11","nodeType":"VariableDeclaration","scope":1152,"src":"822:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1131,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1134,"mutability":"mutable","name":"b","nameLocation":"841:1:11","nodeType":"VariableDeclaration","scope":1152,"src":"833:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1133,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:11"},"returnParameters":{"id":1138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1152,"src":"867:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:11"},"scope":1952,"src":"805:153:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1176,"nodeType":"Block","src":"1228:123:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1162,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"1316:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1166,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"1330:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1169,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1170,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"1339:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:11","trueExpression":{"hexValue":"30","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1161,"id":1175,"nodeType":"Return","src":"1309:35:11"}]},"documentation":{"id":1153,"nodeType":"StructuredDocumentation","src":"964:188:11","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1177,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:11","nodeType":"FunctionDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"a","nameLocation":"1182:1:11","nodeType":"VariableDeclaration","scope":1177,"src":"1174:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1154,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"b","nameLocation":"1193:1:11","nodeType":"VariableDeclaration","scope":1177,"src":"1185:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:11"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1177,"src":"1219:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1159,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:11"},"scope":1952,"src":"1157:194:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1299,"nodeType":"Block","src":"1765:4115:11","statements":[{"id":1298,"nodeType":"UncheckedBlock","src":"1775:4099:11","statements":[{"assignments":[1190],"declarations":[{"constant":false,"id":1190,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:11","nodeType":"VariableDeclaration","scope":1298,"src":"2096:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1189,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1191,"nodeType":"VariableDeclarationStatement","src":"2096:13:11"},{"assignments":[1193],"declarations":[{"constant":false,"id":1193,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:11","nodeType":"VariableDeclaration","scope":1298,"src":"2168:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1192,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1194,"nodeType":"VariableDeclarationStatement","src":"2168:13:11"},{"AST":{"nodeType":"YulBlock","src":"2248:157:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:11"},"nodeType":"YulFunctionCall","src":"2289:6:11"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:11"},"nodeType":"YulFunctionCall","src":"2276:20:11"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:11","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:11"},"nodeType":"YulFunctionCall","src":"2322:9:11"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:11"}]},{"nodeType":"YulAssignment","src":"2348:43:11","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:11"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:11"},"nodeType":"YulFunctionCall","src":"2361:14:11"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:11"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:11"},"nodeType":"YulFunctionCall","src":"2377:13:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:11"},"nodeType":"YulFunctionCall","src":"2357:34:11"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1190,"isOffset":false,"isSlot":false,"src":"2313:5:11","valueSize":1},{"declaration":1190,"isOffset":false,"isSlot":false,"src":"2369:5:11","valueSize":1},{"declaration":1190,"isOffset":false,"isSlot":false,"src":"2384:5:11","valueSize":1},{"declaration":1193,"isOffset":false,"isSlot":false,"src":"2348:5:11","valueSize":1},{"declaration":1180,"isOffset":false,"isSlot":false,"src":"2283:1:11","valueSize":1},{"declaration":1180,"isOffset":false,"isSlot":false,"src":"2326:1:11","valueSize":1},{"declaration":1182,"isOffset":false,"isSlot":false,"src":"2286:1:11","valueSize":1},{"declaration":1182,"isOffset":false,"isSlot":false,"src":"2329:1:11","valueSize":1}],"id":1195,"nodeType":"InlineAssembly","src":"2239:166:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1196,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"2486:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1204,"nodeType":"IfStatement","src":"2482:368:11","trueBody":{"id":1203,"nodeType":"Block","src":"2498:352:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1199,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"2816:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1200,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"2824:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1188,"id":1202,"nodeType":"Return","src":"2809:26:11"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1206,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"2960:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1207,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"2974:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":1205,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1211,"nodeType":"ExpressionStatement","src":"2952:53:11"},{"assignments":[1213],"declarations":[{"constant":false,"id":1213,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:11","nodeType":"VariableDeclaration","scope":1298,"src":"3261:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1214,"nodeType":"VariableDeclarationStatement","src":"3261:17:11"},{"AST":{"nodeType":"YulBlock","src":"3301:291:11","statements":[{"nodeType":"YulAssignment","src":"3370:38:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:11"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:11"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:11"},"nodeType":"YulFunctionCall","src":"3383:25:11"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:11"}]},{"nodeType":"YulAssignment","src":"3490:41:11","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:11"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:11"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:11"},"nodeType":"YulFunctionCall","src":"3510:20:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:11"},"nodeType":"YulFunctionCall","src":"3499:32:11"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:11"}]},{"nodeType":"YulAssignment","src":"3548:30:11","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:11"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:11"},"nodeType":"YulFunctionCall","src":"3557:21:11"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1184,"isOffset":false,"isSlot":false,"src":"3396:11:11","valueSize":1},{"declaration":1190,"isOffset":false,"isSlot":false,"src":"3524:5:11","valueSize":1},{"declaration":1190,"isOffset":false,"isSlot":false,"src":"3548:5:11","valueSize":1},{"declaration":1190,"isOffset":false,"isSlot":false,"src":"3561:5:11","valueSize":1},{"declaration":1193,"isOffset":false,"isSlot":false,"src":"3490:5:11","valueSize":1},{"declaration":1193,"isOffset":false,"isSlot":false,"src":"3503:5:11","valueSize":1},{"declaration":1213,"isOffset":false,"isSlot":false,"src":"3370:9:11","valueSize":1},{"declaration":1213,"isOffset":false,"isSlot":false,"src":"3513:9:11","valueSize":1},{"declaration":1213,"isOffset":false,"isSlot":false,"src":"3568:9:11","valueSize":1},{"declaration":1180,"isOffset":false,"isSlot":false,"src":"3390:1:11","valueSize":1},{"declaration":1182,"isOffset":false,"isSlot":false,"src":"3393:1:11","valueSize":1}],"id":1215,"nodeType":"InlineAssembly","src":"3292:300:11"},{"assignments":[1217],"declarations":[{"constant":false,"id":1217,"mutability":"mutable","name":"twos","nameLocation":"3907:4:11","nodeType":"VariableDeclaration","scope":1298,"src":"3899:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1225,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1218,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"3914:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:11","subExpression":{"id":1219,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"3930:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:11"},{"AST":{"nodeType":"YulBlock","src":"3969:362:11","statements":[{"nodeType":"YulAssignment","src":"4034:37:11","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:11"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:11"},"nodeType":"YulFunctionCall","src":"4049:22:11"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:11"}]},{"nodeType":"YulAssignment","src":"4138:25:11","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:11"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:11"},"nodeType":"YulFunctionCall","src":"4147:16:11"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:11"}]},{"nodeType":"YulAssignment","src":"4278:39:11","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:11","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:11"},"nodeType":"YulFunctionCall","src":"4294:12:11"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:11"},"nodeType":"YulFunctionCall","src":"4290:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:11"},"nodeType":"YulFunctionCall","src":"4286:31:11"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1184,"isOffset":false,"isSlot":false,"src":"4034:11:11","valueSize":1},{"declaration":1184,"isOffset":false,"isSlot":false,"src":"4053:11:11","valueSize":1},{"declaration":1190,"isOffset":false,"isSlot":false,"src":"4138:5:11","valueSize":1},{"declaration":1190,"isOffset":false,"isSlot":false,"src":"4151:5:11","valueSize":1},{"declaration":1217,"isOffset":false,"isSlot":false,"src":"4066:4:11","valueSize":1},{"declaration":1217,"isOffset":false,"isSlot":false,"src":"4158:4:11","valueSize":1},{"declaration":1217,"isOffset":false,"isSlot":false,"src":"4278:4:11","valueSize":1},{"declaration":1217,"isOffset":false,"isSlot":false,"src":"4301:4:11","valueSize":1},{"declaration":1217,"isOffset":false,"isSlot":false,"src":"4308:4:11","valueSize":1}],"id":1226,"nodeType":"InlineAssembly","src":"3960:371:11"},{"expression":{"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1227,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"4397:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1228,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"4406:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1229,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"4414:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1232,"nodeType":"ExpressionStatement","src":"4397:21:11"},{"assignments":[1234],"declarations":[{"constant":false,"id":1234,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:11","nodeType":"VariableDeclaration","scope":1298,"src":"4736:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1241,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1236,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"4759:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1238,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:11"},{"expression":{"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1242,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"4992:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1244,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"5007:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1245,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"5021:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1249,"nodeType":"ExpressionStatement","src":"4992:36:11"},{"expression":{"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1250,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"5061:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1252,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"5076:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1253,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"5090:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1257,"nodeType":"ExpressionStatement","src":"5061:36:11"},{"expression":{"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1258,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"5131:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1260,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"5146:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1261,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"5160:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1265,"nodeType":"ExpressionStatement","src":"5131:36:11"},{"expression":{"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1266,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"5201:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1268,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"5216:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1269,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"5230:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1273,"nodeType":"ExpressionStatement","src":"5201:36:11"},{"expression":{"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1274,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"5271:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1276,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"5286:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1277,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"5300:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1281,"nodeType":"ExpressionStatement","src":"5271:36:11"},{"expression":{"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1282,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"5342:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1284,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"5357:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1285,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"5371:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1289,"nodeType":"ExpressionStatement","src":"5342:36:11"},{"expression":{"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1290,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"5812:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1291,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"5821:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1292,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"5829:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1295,"nodeType":"ExpressionStatement","src":"5812:24:11"},{"expression":{"id":1296,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"5857:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1188,"id":1297,"nodeType":"Return","src":"5850:13:11"}]}]},"documentation":{"id":1178,"nodeType":"StructuredDocumentation","src":"1357:305:11","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1300,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:11","nodeType":"FunctionDefinition","parameters":{"id":1185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"x","nameLocation":"1691:1:11","nodeType":"VariableDeclaration","scope":1300,"src":"1683:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1179,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1182,"mutability":"mutable","name":"y","nameLocation":"1702:1:11","nodeType":"VariableDeclaration","scope":1300,"src":"1694:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1184,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:11","nodeType":"VariableDeclaration","scope":1300,"src":"1705:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1183,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:11"},"returnParameters":{"id":1188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"result","nameLocation":"1757:6:11","nodeType":"VariableDeclaration","scope":1300,"src":"1749:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1186,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:11"},"scope":1952,"src":"1667:4213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1343,"nodeType":"Block","src":"6122:189:11","statements":[{"assignments":[1316],"declarations":[{"constant":false,"id":1316,"mutability":"mutable","name":"result","nameLocation":"6140:6:11","nodeType":"VariableDeclaration","scope":1343,"src":"6132:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1315,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1322,"initialValue":{"arguments":[{"id":1318,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"6156:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1319,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"6159:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1320,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"6162:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1317,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1300,1344],"referencedDeclaration":1300,"src":"6149:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1323,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"6188:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1324,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"6200:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1093_$","typeString":"type(enum Math.Rounding)"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:11","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1091,"src":"6200:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"}},"src":"6188:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1328,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"6222:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1329,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"6225:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1330,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"6228:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1327,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1340,"nodeType":"IfStatement","src":"6184:98:11","trueBody":{"id":1339,"nodeType":"Block","src":"6246:36:11","statements":[{"expression":{"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1335,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"6260:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1338,"nodeType":"ExpressionStatement","src":"6260:11:11"}]}},{"expression":{"id":1341,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"6298:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1314,"id":1342,"nodeType":"Return","src":"6291:13:11"}]},"documentation":{"id":1301,"nodeType":"StructuredDocumentation","src":"5886:121:11","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1344,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:11","nodeType":"FunctionDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"x","nameLocation":"6036:1:11","nodeType":"VariableDeclaration","scope":1344,"src":"6028:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1305,"mutability":"mutable","name":"y","nameLocation":"6047:1:11","nodeType":"VariableDeclaration","scope":1344,"src":"6039:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1304,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1307,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:11","nodeType":"VariableDeclaration","scope":1344,"src":"6050:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1306,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:11","nodeType":"VariableDeclaration","scope":1344,"src":"6071:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"},"typeName":{"id":1309,"nodeType":"UserDefinedTypeName","pathNode":{"id":1308,"name":"Rounding","nameLocations":["6071:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1093,"src":"6071:8:11"},"referencedDeclaration":1093,"src":"6071:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:11"},"returnParameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1344,"src":"6113:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1312,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:11"},"scope":1952,"src":"6012:299:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1455,"nodeType":"Block","src":"6587:1585:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1352,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"6601:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1358,"nodeType":"IfStatement","src":"6597:45:11","trueBody":{"id":1357,"nodeType":"Block","src":"6609:33:11","statements":[{"expression":{"hexValue":"30","id":1355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1351,"id":1356,"nodeType":"Return","src":"6623:8:11"}]}},{"assignments":[1360],"declarations":[{"constant":false,"id":1360,"mutability":"mutable","name":"result","nameLocation":"7329:6:11","nodeType":"VariableDeclaration","scope":1455,"src":"7321:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1369,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1363,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"7349:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1362,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1624,1660],"referencedDeclaration":1624,"src":"7344:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1367,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:11"},{"id":1454,"nodeType":"UncheckedBlock","src":"7758:408:11","statements":[{"expression":{"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1370,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"7782:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1371,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"7792:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1372,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"7801:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1373,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"7805:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1380,"nodeType":"ExpressionStatement","src":"7782:35:11"},{"expression":{"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1381,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"7831:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1382,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"7841:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1383,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"7850:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1384,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"7854:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1387,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1391,"nodeType":"ExpressionStatement","src":"7831:35:11"},{"expression":{"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1392,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"7880:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1393,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"7890:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1394,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"7899:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1395,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"7903:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1398,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1402,"nodeType":"ExpressionStatement","src":"7880:35:11"},{"expression":{"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1403,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"7929:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1404,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"7939:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1405,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"7948:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1406,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"7952:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1409,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1413,"nodeType":"ExpressionStatement","src":"7929:35:11"},{"expression":{"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1414,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"7978:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1415,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"7988:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1416,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"7997:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1417,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"8001:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1420,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1424,"nodeType":"ExpressionStatement","src":"7978:35:11"},{"expression":{"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1425,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"8027:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1426,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"8037:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1427,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"8046:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1428,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"8050:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1431,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1435,"nodeType":"ExpressionStatement","src":"8027:35:11"},{"expression":{"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1436,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"8076:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1437,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"8086:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1438,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"8095:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1439,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"8099:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1442,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1446,"nodeType":"ExpressionStatement","src":"8076:35:11"},{"expression":{"arguments":[{"id":1448,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"8136:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1449,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"8144:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1450,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"8148:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1447,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"8132:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1351,"id":1453,"nodeType":"Return","src":"8125:30:11"}]}]},"documentation":{"id":1345,"nodeType":"StructuredDocumentation","src":"6317:208:11","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1456,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:11","nodeType":"FunctionDefinition","parameters":{"id":1348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"mutability":"mutable","name":"a","nameLocation":"6552:1:11","nodeType":"VariableDeclaration","scope":1456,"src":"6544:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1346,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:11"},"returnParameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1456,"src":"6578:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:11"},"scope":1952,"src":"6530:1642:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1491,"nodeType":"Block","src":"8348:161:11","statements":[{"id":1490,"nodeType":"UncheckedBlock","src":"8358:145:11","statements":[{"assignments":[1468],"declarations":[{"constant":false,"id":1468,"mutability":"mutable","name":"result","nameLocation":"8390:6:11","nodeType":"VariableDeclaration","scope":1490,"src":"8382:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1467,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1472,"initialValue":{"arguments":[{"id":1470,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"8404:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1469,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1456,1492],"referencedDeclaration":1456,"src":"8399:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1473,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"8427:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1474,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"8437:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1475,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"8449:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1093_$","typeString":"type(enum Math.Rounding)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:11","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1091,"src":"8449:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"}},"src":"8437:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1478,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"8464:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1479,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"8473:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1481,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"8482:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:11","trueExpression":{"hexValue":"31","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1466,"id":1489,"nodeType":"Return","src":"8420:72:11"}]}]},"documentation":{"id":1457,"nodeType":"StructuredDocumentation","src":"8178:89:11","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1492,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:11","nodeType":"FunctionDefinition","parameters":{"id":1463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1459,"mutability":"mutable","name":"a","nameLocation":"8294:1:11","nodeType":"VariableDeclaration","scope":1492,"src":"8286:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1458,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1462,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:11","nodeType":"VariableDeclaration","scope":1492,"src":"8297:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"},"typeName":{"id":1461,"nodeType":"UserDefinedTypeName","pathNode":{"id":1460,"name":"Rounding","nameLocations":["8297:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1093,"src":"8297:8:11"},"referencedDeclaration":1093,"src":"8297:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:11"},"returnParameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1492,"src":"8339:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:11"},"scope":1952,"src":"8272:237:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1623,"nodeType":"Block","src":"8694:922:11","statements":[{"assignments":[1501],"declarations":[{"constant":false,"id":1501,"mutability":"mutable","name":"result","nameLocation":"8712:6:11","nodeType":"VariableDeclaration","scope":1623,"src":"8704:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1500,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1503,"initialValue":{"hexValue":"30","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:11"},{"id":1620,"nodeType":"UncheckedBlock","src":"8732:855:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"8760:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1518,"nodeType":"IfStatement","src":"8756:99:11","trueBody":{"id":1517,"nodeType":"Block","src":"8778:77:11","statements":[{"expression":{"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"8796:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1512,"nodeType":"ExpressionStatement","src":"8796:13:11"},{"expression":{"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1513,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"8827:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1516,"nodeType":"ExpressionStatement","src":"8827:13:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"8872:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1533,"nodeType":"IfStatement","src":"8868:96:11","trueBody":{"id":1532,"nodeType":"Block","src":"8889:75:11","statements":[{"expression":{"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"8907:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1527,"nodeType":"ExpressionStatement","src":"8907:12:11"},{"expression":{"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1528,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"8937:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1531,"nodeType":"ExpressionStatement","src":"8937:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"8981:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1548,"nodeType":"IfStatement","src":"8977:96:11","trueBody":{"id":1547,"nodeType":"Block","src":"8998:75:11","statements":[{"expression":{"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"9016:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1542,"nodeType":"ExpressionStatement","src":"9016:12:11"},{"expression":{"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1543,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"9046:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1546,"nodeType":"ExpressionStatement","src":"9046:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"9090:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1563,"nodeType":"IfStatement","src":"9086:96:11","trueBody":{"id":1562,"nodeType":"Block","src":"9107:75:11","statements":[{"expression":{"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"9125:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1557,"nodeType":"ExpressionStatement","src":"9125:12:11"},{"expression":{"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1558,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"9155:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1561,"nodeType":"ExpressionStatement","src":"9155:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"9199:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1578,"nodeType":"IfStatement","src":"9195:93:11","trueBody":{"id":1577,"nodeType":"Block","src":"9215:73:11","statements":[{"expression":{"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"9233:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1572,"nodeType":"ExpressionStatement","src":"9233:11:11"},{"expression":{"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1573,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"9262:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1576,"nodeType":"ExpressionStatement","src":"9262:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"9305:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1593,"nodeType":"IfStatement","src":"9301:93:11","trueBody":{"id":1592,"nodeType":"Block","src":"9321:73:11","statements":[{"expression":{"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"9339:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1587,"nodeType":"ExpressionStatement","src":"9339:11:11"},{"expression":{"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1588,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"9368:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1591,"nodeType":"ExpressionStatement","src":"9368:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"9411:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1608,"nodeType":"IfStatement","src":"9407:93:11","trueBody":{"id":1607,"nodeType":"Block","src":"9427:73:11","statements":[{"expression":{"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"9445:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1602,"nodeType":"ExpressionStatement","src":"9445:11:11"},{"expression":{"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1603,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"9474:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1606,"nodeType":"ExpressionStatement","src":"9474:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"9517:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1619,"nodeType":"IfStatement","src":"9513:64:11","trueBody":{"id":1618,"nodeType":"Block","src":"9533:44:11","statements":[{"expression":{"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1614,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"9551:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1617,"nodeType":"ExpressionStatement","src":"9551:11:11"}]}}]},{"expression":{"id":1621,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"9603:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1499,"id":1622,"nodeType":"Return","src":"9596:13:11"}]},"documentation":{"id":1493,"nodeType":"StructuredDocumentation","src":"8515:113:11","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1624,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:11","nodeType":"FunctionDefinition","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"value","nameLocation":"8655:5:11","nodeType":"VariableDeclaration","scope":1624,"src":"8647:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:11"},"returnParameters":{"id":1499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1624,"src":"8685:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1497,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:11"},"scope":1952,"src":"8633:983:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1659,"nodeType":"Block","src":"9849:165:11","statements":[{"id":1658,"nodeType":"UncheckedBlock","src":"9859:149:11","statements":[{"assignments":[1636],"declarations":[{"constant":false,"id":1636,"mutability":"mutable","name":"result","nameLocation":"9891:6:11","nodeType":"VariableDeclaration","scope":1658,"src":"9883:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1635,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1640,"initialValue":{"arguments":[{"id":1638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"9905:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1637,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1624,1660],"referencedDeclaration":1624,"src":"9900:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1641,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"9932:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1642,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"9942:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1643,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"9954:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1093_$","typeString":"type(enum Math.Rounding)"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:11","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1091,"src":"9954:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"}},"src":"9942:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1647,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"9974:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"9983:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:11","trueExpression":{"hexValue":"31","id":1652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1655,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1634,"id":1657,"nodeType":"Return","src":"9925:72:11"}]}]},"documentation":{"id":1625,"nodeType":"StructuredDocumentation","src":"9622:142:11","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1660,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:11","nodeType":"FunctionDefinition","parameters":{"id":1631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"value","nameLocation":"9791:5:11","nodeType":"VariableDeclaration","scope":1660,"src":"9783:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1626,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1630,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:11","nodeType":"VariableDeclaration","scope":1660,"src":"9798:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"},"typeName":{"id":1629,"nodeType":"UserDefinedTypeName","pathNode":{"id":1628,"name":"Rounding","nameLocations":["9798:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1093,"src":"9798:8:11"},"referencedDeclaration":1093,"src":"9798:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:11"},"returnParameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1660,"src":"9840:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1632,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:11"},"scope":1952,"src":"9769:245:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1788,"nodeType":"Block","src":"10201:854:11","statements":[{"assignments":[1669],"declarations":[{"constant":false,"id":1669,"mutability":"mutable","name":"result","nameLocation":"10219:6:11","nodeType":"VariableDeclaration","scope":1788,"src":"10211:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1668,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1671,"initialValue":{"hexValue":"30","id":1670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:11"},{"id":1785,"nodeType":"UncheckedBlock","src":"10239:787:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"10267:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1688,"nodeType":"IfStatement","src":"10263:103:11","trueBody":{"id":1687,"nodeType":"Block","src":"10286:80:11","statements":[{"expression":{"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"10304:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1682,"nodeType":"ExpressionStatement","src":"10304:17:11"},{"expression":{"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1683,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"10339:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1686,"nodeType":"ExpressionStatement","src":"10339:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"10383:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1705,"nodeType":"IfStatement","src":"10379:103:11","trueBody":{"id":1704,"nodeType":"Block","src":"10402:80:11","statements":[{"expression":{"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"10420:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1699,"nodeType":"ExpressionStatement","src":"10420:17:11"},{"expression":{"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"10455:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1703,"nodeType":"ExpressionStatement","src":"10455:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"10499:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1722,"nodeType":"IfStatement","src":"10495:103:11","trueBody":{"id":1721,"nodeType":"Block","src":"10518:80:11","statements":[{"expression":{"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"10536:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1716,"nodeType":"ExpressionStatement","src":"10536:17:11"},{"expression":{"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1717,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"10571:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1720,"nodeType":"ExpressionStatement","src":"10571:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"10615:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1739,"nodeType":"IfStatement","src":"10611:100:11","trueBody":{"id":1738,"nodeType":"Block","src":"10633:78:11","statements":[{"expression":{"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"10651:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1733,"nodeType":"ExpressionStatement","src":"10651:16:11"},{"expression":{"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1734,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"10685:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1737,"nodeType":"ExpressionStatement","src":"10685:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"10728:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:11","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1756,"nodeType":"IfStatement","src":"10724:100:11","trueBody":{"id":1755,"nodeType":"Block","src":"10746:78:11","statements":[{"expression":{"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"10764:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:11","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1750,"nodeType":"ExpressionStatement","src":"10764:16:11"},{"expression":{"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1751,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"10798:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1754,"nodeType":"ExpressionStatement","src":"10798:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"10841:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1773,"nodeType":"IfStatement","src":"10837:100:11","trueBody":{"id":1772,"nodeType":"Block","src":"10859:78:11","statements":[{"expression":{"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"10877:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1767,"nodeType":"ExpressionStatement","src":"10877:16:11"},{"expression":{"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1768,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"10911:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1771,"nodeType":"ExpressionStatement","src":"10911:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"10954:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1784,"nodeType":"IfStatement","src":"10950:66:11","trueBody":{"id":1783,"nodeType":"Block","src":"10972:44:11","statements":[{"expression":{"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1779,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"10990:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1782,"nodeType":"ExpressionStatement","src":"10990:11:11"}]}}]},{"expression":{"id":1786,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"11042:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1667,"id":1787,"nodeType":"Return","src":"11035:13:11"}]},"documentation":{"id":1661,"nodeType":"StructuredDocumentation","src":"10020:114:11","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1789,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:11","nodeType":"FunctionDefinition","parameters":{"id":1664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1663,"mutability":"mutable","name":"value","nameLocation":"10162:5:11","nodeType":"VariableDeclaration","scope":1789,"src":"10154:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1662,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:11"},"returnParameters":{"id":1667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1789,"src":"10192:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1665,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:11"},"scope":1952,"src":"10139:916:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1824,"nodeType":"Block","src":"11290:167:11","statements":[{"id":1823,"nodeType":"UncheckedBlock","src":"11300:151:11","statements":[{"assignments":[1801],"declarations":[{"constant":false,"id":1801,"mutability":"mutable","name":"result","nameLocation":"11332:6:11","nodeType":"VariableDeclaration","scope":1823,"src":"11324:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1800,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1805,"initialValue":{"arguments":[{"id":1803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"11347:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1802,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[1789,1825],"referencedDeclaration":1789,"src":"11341:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1806,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"11374:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1807,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"11384:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1808,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"11396:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1093_$","typeString":"type(enum Math.Rounding)"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:11","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1091,"src":"11396:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"}},"src":"11384:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1812,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"11417:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"11426:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:11","trueExpression":{"hexValue":"31","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1820,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1799,"id":1822,"nodeType":"Return","src":"11367:73:11"}]}]},"documentation":{"id":1790,"nodeType":"StructuredDocumentation","src":"11061:143:11","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1825,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:11","nodeType":"FunctionDefinition","parameters":{"id":1796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1792,"mutability":"mutable","name":"value","nameLocation":"11232:5:11","nodeType":"VariableDeclaration","scope":1825,"src":"11224:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1791,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1795,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:11","nodeType":"VariableDeclaration","scope":1825,"src":"11239:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"},"typeName":{"id":1794,"nodeType":"UserDefinedTypeName","pathNode":{"id":1793,"name":"Rounding","nameLocations":["11239:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1093,"src":"11239:8:11"},"referencedDeclaration":1093,"src":"11239:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:11"},"returnParameters":{"id":1799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1825,"src":"11281:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1797,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:11"},"scope":1952,"src":"11209:248:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1911,"nodeType":"Block","src":"11771:600:11","statements":[{"assignments":[1834],"declarations":[{"constant":false,"id":1834,"mutability":"mutable","name":"result","nameLocation":"11789:6:11","nodeType":"VariableDeclaration","scope":1911,"src":"11781:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1833,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1836,"initialValue":{"hexValue":"30","id":1835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:11"},{"id":1908,"nodeType":"UncheckedBlock","src":"11809:533:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"11837:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1851,"nodeType":"IfStatement","src":"11833:98:11","trueBody":{"id":1850,"nodeType":"Block","src":"11855:76:11","statements":[{"expression":{"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"11873:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1845,"nodeType":"ExpressionStatement","src":"11873:13:11"},{"expression":{"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1846,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"11904:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1849,"nodeType":"ExpressionStatement","src":"11904:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"11948:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1866,"nodeType":"IfStatement","src":"11944:95:11","trueBody":{"id":1865,"nodeType":"Block","src":"11965:74:11","statements":[{"expression":{"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"11983:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1860,"nodeType":"ExpressionStatement","src":"11983:12:11"},{"expression":{"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1861,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"12013:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1864,"nodeType":"ExpressionStatement","src":"12013:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"12056:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1881,"nodeType":"IfStatement","src":"12052:95:11","trueBody":{"id":1880,"nodeType":"Block","src":"12073:74:11","statements":[{"expression":{"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"12091:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1875,"nodeType":"ExpressionStatement","src":"12091:12:11"},{"expression":{"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1876,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"12121:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1879,"nodeType":"ExpressionStatement","src":"12121:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"12164:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1896,"nodeType":"IfStatement","src":"12160:95:11","trueBody":{"id":1895,"nodeType":"Block","src":"12181:74:11","statements":[{"expression":{"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"12199:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1890,"nodeType":"ExpressionStatement","src":"12199:12:11"},{"expression":{"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1891,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"12229:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1894,"nodeType":"ExpressionStatement","src":"12229:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"12272:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1907,"nodeType":"IfStatement","src":"12268:64:11","trueBody":{"id":1906,"nodeType":"Block","src":"12288:44:11","statements":[{"expression":{"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1902,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"12306:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1905,"nodeType":"ExpressionStatement","src":"12306:11:11"}]}}]},{"expression":{"id":1909,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"12358:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1832,"id":1910,"nodeType":"Return","src":"12351:13:11"}]},"documentation":{"id":1826,"nodeType":"StructuredDocumentation","src":"11463:240:11","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":1912,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:11","nodeType":"FunctionDefinition","parameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"value","nameLocation":"11732:5:11","nodeType":"VariableDeclaration","scope":1912,"src":"11724:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1827,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:11"},"returnParameters":{"id":1832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1912,"src":"11762:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1830,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:11"},"scope":1952,"src":"11708:663:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1950,"nodeType":"Block","src":"12608:174:11","statements":[{"id":1949,"nodeType":"UncheckedBlock","src":"12618:158:11","statements":[{"assignments":[1924],"declarations":[{"constant":false,"id":1924,"mutability":"mutable","name":"result","nameLocation":"12650:6:11","nodeType":"VariableDeclaration","scope":1949,"src":"12642:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1923,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1928,"initialValue":{"arguments":[{"id":1926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"12666:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1925,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[1912,1951],"referencedDeclaration":1912,"src":"12659:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1929,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"12693:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1930,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"12703:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1931,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"12715:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1093_$","typeString":"type(enum Math.Rounding)"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:11","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1091,"src":"12715:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"}},"src":"12703:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1935,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"12736:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":1936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1938,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"12751:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:11","trueExpression":{"hexValue":"31","id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1946,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1922,"id":1948,"nodeType":"Return","src":"12686:79:11"}]}]},"documentation":{"id":1913,"nodeType":"StructuredDocumentation","src":"12377:144:11","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1951,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:11","nodeType":"FunctionDefinition","parameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1915,"mutability":"mutable","name":"value","nameLocation":"12550:5:11","nodeType":"VariableDeclaration","scope":1951,"src":"12542:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1918,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:11","nodeType":"VariableDeclaration","scope":1951,"src":"12557:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"},"typeName":{"id":1917,"nodeType":"UserDefinedTypeName","pathNode":{"id":1916,"name":"Rounding","nameLocations":["12557:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1093,"src":"12557:8:11"},"referencedDeclaration":1093,"src":"12557:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1093","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:11"},"returnParameters":{"id":1922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1951,"src":"12599:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1920,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:11"},"scope":1952,"src":"12526:256:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1953,"src":"202:12582:11","usedErrors":[],"usedEvents":[]}],"src":"103:12682:11"},"id":11},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[2057]},"id":2058,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1954,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1955,"nodeType":"StructuredDocumentation","src":"134:80:12","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2057,"linearizedBaseContracts":[2057],"name":"SignedMath","nameLocation":"223:10:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1972,"nodeType":"Block","src":"375:37:12","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1965,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"392:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1966,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"396:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1969,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"404:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:12","trueExpression":{"id":1968,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"400:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1964,"id":1971,"nodeType":"Return","src":"385:20:12"}]},"documentation":{"id":1956,"nodeType":"StructuredDocumentation","src":"240:66:12","text":" @dev Returns the largest of two signed numbers."},"id":1973,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:12","nodeType":"FunctionDefinition","parameters":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"mutability":"mutable","name":"a","nameLocation":"331:1:12","nodeType":"VariableDeclaration","scope":1973,"src":"324:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1957,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1960,"mutability":"mutable","name":"b","nameLocation":"341:1:12","nodeType":"VariableDeclaration","scope":1973,"src":"334:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1959,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:12"},"returnParameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1973,"src":"367:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1962,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:12"},"scope":2057,"src":"311:101:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1990,"nodeType":"Block","src":"554:37:12","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1983,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"571:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1984,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"575:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1987,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"583:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:12","trueExpression":{"id":1986,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"579:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1982,"id":1989,"nodeType":"Return","src":"564:20:12"}]},"documentation":{"id":1974,"nodeType":"StructuredDocumentation","src":"418:67:12","text":" @dev Returns the smallest of two signed numbers."},"id":1991,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:12","nodeType":"FunctionDefinition","parameters":{"id":1979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"a","nameLocation":"510:1:12","nodeType":"VariableDeclaration","scope":1991,"src":"503:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1975,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1978,"mutability":"mutable","name":"b","nameLocation":"520:1:12","nodeType":"VariableDeclaration","scope":1991,"src":"513:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1977,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:12"},"returnParameters":{"id":1982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1991,"src":"546:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1980,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:12"},"scope":2057,"src":"490:101:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2034,"nodeType":"Block","src":"796:162:12","statements":[{"assignments":[2002],"declarations":[{"constant":false,"id":2002,"mutability":"mutable","name":"x","nameLocation":"865:1:12","nodeType":"VariableDeclaration","scope":2034,"src":"858:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2001,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2015,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2003,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"870:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2004,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"874:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2006,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2007,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"881:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2008,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"885:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2010,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2013,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:12"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2016,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"910:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2021,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"930:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2019,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:12","typeDescriptions":{}}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2017,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:12","typeDescriptions":{}}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2026,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"944:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2027,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"948:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2029,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2031,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2000,"id":2033,"nodeType":"Return","src":"903:48:12"}]},"documentation":{"id":1992,"nodeType":"StructuredDocumentation","src":"597:126:12","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":2035,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:12","nodeType":"FunctionDefinition","parameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"a","nameLocation":"752:1:12","nodeType":"VariableDeclaration","scope":2035,"src":"745:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1993,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1996,"mutability":"mutable","name":"b","nameLocation":"762:1:12","nodeType":"VariableDeclaration","scope":2035,"src":"755:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1995,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:12"},"returnParameters":{"id":2000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2035,"src":"788:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1998,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:12"},"scope":2057,"src":"728:230:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2055,"nodeType":"Block","src":"1102:158:12","statements":[{"id":2054,"nodeType":"UncheckedBlock","src":"1112:142:12","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2045,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"1227:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:12","subExpression":{"id":2049,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"1241:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:12","trueExpression":{"id":2048,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"1236:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:12","typeDescriptions":{}}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2042,"id":2053,"nodeType":"Return","src":"1212:31:12"}]}]},"documentation":{"id":2036,"nodeType":"StructuredDocumentation","src":"964:78:12","text":" @dev Returns the absolute unsigned value of a signed value."},"id":2056,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:12","nodeType":"FunctionDefinition","parameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2038,"mutability":"mutable","name":"n","nameLocation":"1067:1:12","nodeType":"VariableDeclaration","scope":2056,"src":"1060:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2037,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:12"},"returnParameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2056,"src":"1093:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:12"},"scope":2057,"src":"1047:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2058,"src":"215:1047:12","usedErrors":[],"usedEvents":[]}],"src":"109:1154:12"},"id":12},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[2670]},"id":2671,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2059,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":2060,"nodeType":"StructuredDocumentation","src":"230:1098:13","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":2670,"linearizedBaseContracts":[2670],"name":"EnumerableSet","nameLocation":"1337:13:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":2068,"members":[{"constant":false,"id":2063,"mutability":"mutable","name":"_values","nameLocation":"1861:7:13","nodeType":"VariableDeclaration","scope":2068,"src":"1851:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1851:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2062,"nodeType":"ArrayTypeName","src":"1851:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2067,"mutability":"mutable","name":"_indexes","nameLocation":"2029:8:13","nodeType":"VariableDeclaration","scope":2068,"src":"2001:36:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":2066,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2064,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2009:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2001:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2065,"name":"uint256","nodeType":"ElementaryTypeName","src":"2020:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1804:3:13","nodeType":"StructDefinition","scope":2670,"src":"1797:247:13","visibility":"public"},{"body":{"id":2109,"nodeType":"Block","src":"2283:335:13","statements":[{"condition":{"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2297:22:13","subExpression":{"arguments":[{"id":2080,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"2308:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":2081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"2313:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2079,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"2298:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2068_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2298:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2107,"nodeType":"Block","src":"2575:37:13","statements":[{"expression":{"hexValue":"66616c7365","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2596:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2078,"id":2106,"nodeType":"Return","src":"2589:12:13"}]},"id":2108,"nodeType":"IfStatement","src":"2293:319:13","trueBody":{"id":2104,"nodeType":"Block","src":"2321:248:13","statements":[{"expression":{"arguments":[{"id":2089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"2352:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":2084,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"2335:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2087,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2339:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2063,"src":"2335:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2347:4:13","memberName":"push","nodeType":"MemberAccess","src":"2335:16:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2091,"nodeType":"ExpressionStatement","src":"2335:23:13"},{"expression":{"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2092,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"2493:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2497:8:13","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2067,"src":"2493:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2096,"indexExpression":{"id":2094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"2506:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2493:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":2097,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"2515:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2098,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2519:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2063,"src":"2515:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2527:6:13","memberName":"length","nodeType":"MemberAccess","src":"2515:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2493:40:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2101,"nodeType":"ExpressionStatement","src":"2493:40:13"},{"expression":{"hexValue":"74727565","id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2554:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2078,"id":2103,"nodeType":"Return","src":"2547:11:13"}]}}]},"documentation":{"id":2069,"nodeType":"StructuredDocumentation","src":"2050:159:13","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2110,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2223:4:13","nodeType":"FunctionDefinition","parameters":{"id":2075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2072,"mutability":"mutable","name":"set","nameLocation":"2240:3:13","nodeType":"VariableDeclaration","scope":2110,"src":"2228:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2071,"nodeType":"UserDefinedTypeName","pathNode":{"id":2070,"name":"Set","nameLocations":["2228:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2068,"src":"2228:3:13"},"referencedDeclaration":2068,"src":"2228:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2074,"mutability":"mutable","name":"value","nameLocation":"2253:5:13","nodeType":"VariableDeclaration","scope":2110,"src":"2245:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2073,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2245:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2227:32:13"},"returnParameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2110,"src":"2277:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2076,"name":"bool","nodeType":"ElementaryTypeName","src":"2277:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2276:6:13"},"scope":2670,"src":"2214:404:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2193,"nodeType":"Block","src":"2858:1316:13","statements":[{"assignments":[2122],"declarations":[{"constant":false,"id":2122,"mutability":"mutable","name":"valueIndex","nameLocation":"2976:10:13","nodeType":"VariableDeclaration","scope":2193,"src":"2968:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2121,"name":"uint256","nodeType":"ElementaryTypeName","src":"2968:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2127,"initialValue":{"baseExpression":{"expression":{"id":2123,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"2989:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2124,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2993:8:13","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2067,"src":"2989:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2126,"indexExpression":{"id":2125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"3002:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2989:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2968:40:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2128,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"3023:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3037:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3023:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2191,"nodeType":"Block","src":"4131:37:13","statements":[{"expression":{"hexValue":"66616c7365","id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4152:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2120,"id":2190,"nodeType":"Return","src":"4145:12:13"}]},"id":2192,"nodeType":"IfStatement","src":"3019:1149:13","trueBody":{"id":2188,"nodeType":"Block","src":"3040:1085:13","statements":[{"assignments":[2132],"declarations":[{"constant":false,"id":2132,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3400:13:13","nodeType":"VariableDeclaration","scope":2188,"src":"3392:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2131,"name":"uint256","nodeType":"ElementaryTypeName","src":"3392:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2136,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2133,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"3416:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3429:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3416:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3392:38:13"},{"assignments":[2138],"declarations":[{"constant":false,"id":2138,"mutability":"mutable","name":"lastIndex","nameLocation":"3452:9:13","nodeType":"VariableDeclaration","scope":2188,"src":"3444:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2137,"name":"uint256","nodeType":"ElementaryTypeName","src":"3444:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2144,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2139,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"3464:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3468:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2063,"src":"3464:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3476:6:13","memberName":"length","nodeType":"MemberAccess","src":"3464:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3485:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3464:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3444:42:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2145,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"3505:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2146,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"3518:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3505:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2172,"nodeType":"IfStatement","src":"3501:398:13","trueBody":{"id":2171,"nodeType":"Block","src":"3533:366:13","statements":[{"assignments":[2149],"declarations":[{"constant":false,"id":2149,"mutability":"mutable","name":"lastValue","nameLocation":"3559:9:13","nodeType":"VariableDeclaration","scope":2171,"src":"3551:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3551:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2154,"initialValue":{"baseExpression":{"expression":{"id":2150,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"3571:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2151,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3575:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2063,"src":"3571:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2153,"indexExpression":{"id":2152,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"3583:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3571:22:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3551:42:13"},{"expression":{"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2155,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"3693:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3697:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2063,"src":"3693:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2159,"indexExpression":{"id":2157,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"3705:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3693:26:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2160,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"3722:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3693:38:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2162,"nodeType":"ExpressionStatement","src":"3693:38:13"},{"expression":{"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2163,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"3805:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3809:8:13","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2067,"src":"3805:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2167,"indexExpression":{"id":2165,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"3818:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3805:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2168,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"3831:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3805:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2170,"nodeType":"ExpressionStatement","src":"3805:36:13"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":2173,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"3977:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3981:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2063,"src":"3977:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3989:3:13","memberName":"pop","nodeType":"MemberAccess","src":"3977:15:13","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3977:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2179,"nodeType":"ExpressionStatement","src":"3977:17:13"},{"expression":{"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4062:26:13","subExpression":{"baseExpression":{"expression":{"id":2180,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"4069:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2181,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4073:8:13","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2067,"src":"4069:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2183,"indexExpression":{"id":2182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"4082:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4069:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2185,"nodeType":"ExpressionStatement","src":"4062:26:13"},{"expression":{"hexValue":"74727565","id":2186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4110:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2120,"id":2187,"nodeType":"Return","src":"4103:11:13"}]}}]},"documentation":{"id":2111,"nodeType":"StructuredDocumentation","src":"2624:157:13","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2194,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2795:7:13","nodeType":"FunctionDefinition","parameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2114,"mutability":"mutable","name":"set","nameLocation":"2815:3:13","nodeType":"VariableDeclaration","scope":2194,"src":"2803:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2113,"nodeType":"UserDefinedTypeName","pathNode":{"id":2112,"name":"Set","nameLocations":["2803:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2068,"src":"2803:3:13"},"referencedDeclaration":2068,"src":"2803:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2116,"mutability":"mutable","name":"value","nameLocation":"2828:5:13","nodeType":"VariableDeclaration","scope":2194,"src":"2820:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2820:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2802:32:13"},"returnParameters":{"id":2120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2194,"src":"2852:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2118,"name":"bool","nodeType":"ElementaryTypeName","src":"2852:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2851:6:13"},"scope":2670,"src":"2786:1388:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2212,"nodeType":"Block","src":"4334:48:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":2205,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"4351:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4355:8:13","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2067,"src":"4351:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2208,"indexExpression":{"id":2207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"4364:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4351:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4374:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4351:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2204,"id":2211,"nodeType":"Return","src":"4344:31:13"}]},"documentation":{"id":2195,"nodeType":"StructuredDocumentation","src":"4180:70:13","text":" @dev Returns true if the value is in the set. O(1)."},"id":2213,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4264:9:13","nodeType":"FunctionDefinition","parameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"mutability":"mutable","name":"set","nameLocation":"4286:3:13","nodeType":"VariableDeclaration","scope":2213,"src":"4274:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2197,"nodeType":"UserDefinedTypeName","pathNode":{"id":2196,"name":"Set","nameLocations":["4274:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2068,"src":"4274:3:13"},"referencedDeclaration":2068,"src":"4274:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2200,"mutability":"mutable","name":"value","nameLocation":"4299:5:13","nodeType":"VariableDeclaration","scope":2213,"src":"4291:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2199,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4291:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4273:32:13"},"returnParameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2213,"src":"4328:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2202,"name":"bool","nodeType":"ElementaryTypeName","src":"4328:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4327:6:13"},"scope":2670,"src":"4255:127:13","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2226,"nodeType":"Block","src":"4528:42:13","statements":[{"expression":{"expression":{"expression":{"id":2222,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"4545:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2223,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4549:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2063,"src":"4545:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4557:6:13","memberName":"length","nodeType":"MemberAccess","src":"4545:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2221,"id":2225,"nodeType":"Return","src":"4538:25:13"}]},"documentation":{"id":2214,"nodeType":"StructuredDocumentation","src":"4388:70:13","text":" @dev Returns the number of values on the set. O(1)."},"id":2227,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4472:7:13","nodeType":"FunctionDefinition","parameters":{"id":2218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"set","nameLocation":"4492:3:13","nodeType":"VariableDeclaration","scope":2227,"src":"4480:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2216,"nodeType":"UserDefinedTypeName","pathNode":{"id":2215,"name":"Set","nameLocations":["4480:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2068,"src":"4480:3:13"},"referencedDeclaration":2068,"src":"4480:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4479:17:13"},"returnParameters":{"id":2221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2227,"src":"4519:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2219,"name":"uint256","nodeType":"ElementaryTypeName","src":"4519:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4518:9:13"},"scope":2670,"src":"4463:107:13","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2243,"nodeType":"Block","src":"4988:42:13","statements":[{"expression":{"baseExpression":{"expression":{"id":2238,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5005:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5009:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2063,"src":"5005:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2241,"indexExpression":{"id":2240,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"5017:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5005:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2237,"id":2242,"nodeType":"Return","src":"4998:25:13"}]},"documentation":{"id":2228,"nodeType":"StructuredDocumentation","src":"4576:331:13","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2244,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4921:3:13","nodeType":"FunctionDefinition","parameters":{"id":2234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2231,"mutability":"mutable","name":"set","nameLocation":"4937:3:13","nodeType":"VariableDeclaration","scope":2244,"src":"4925:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2230,"nodeType":"UserDefinedTypeName","pathNode":{"id":2229,"name":"Set","nameLocations":["4925:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2068,"src":"4925:3:13"},"referencedDeclaration":2068,"src":"4925:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2233,"mutability":"mutable","name":"index","nameLocation":"4950:5:13","nodeType":"VariableDeclaration","scope":2244,"src":"4942:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2232,"name":"uint256","nodeType":"ElementaryTypeName","src":"4942:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4924:32:13"},"returnParameters":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2244,"src":"4979:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4979:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4978:9:13"},"scope":2670,"src":"4912:118:13","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2257,"nodeType":"Block","src":"5644:35:13","statements":[{"expression":{"expression":{"id":2254,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"5661:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5665:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2063,"src":"5661:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":2253,"id":2256,"nodeType":"Return","src":"5654:18:13"}]},"documentation":{"id":2245,"nodeType":"StructuredDocumentation","src":"5036:529:13","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2258,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5579:7:13","nodeType":"FunctionDefinition","parameters":{"id":2249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2248,"mutability":"mutable","name":"set","nameLocation":"5599:3:13","nodeType":"VariableDeclaration","scope":2258,"src":"5587:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2247,"nodeType":"UserDefinedTypeName","pathNode":{"id":2246,"name":"Set","nameLocations":["5587:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2068,"src":"5587:3:13"},"referencedDeclaration":2068,"src":"5587:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5586:17:13"},"returnParameters":{"id":2253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2258,"src":"5626:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5626:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2251,"nodeType":"ArrayTypeName","src":"5626:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5625:18:13"},"scope":2670,"src":"5570:109:13","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":2262,"members":[{"constant":false,"id":2261,"mutability":"mutable","name":"_inner","nameLocation":"5736:6:13","nodeType":"VariableDeclaration","scope":2262,"src":"5732:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2260,"nodeType":"UserDefinedTypeName","pathNode":{"id":2259,"name":"Set","nameLocations":["5732:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2068,"src":"5732:3:13"},"referencedDeclaration":2068,"src":"5732:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5711:10:13","nodeType":"StructDefinition","scope":2670,"src":"5704:45:13","visibility":"public"},{"body":{"id":2279,"nodeType":"Block","src":"5995:47:13","statements":[{"expression":{"arguments":[{"expression":{"id":2274,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"6017:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2262_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6021:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2261,"src":"6017:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"6029:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2273,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"6012:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2068_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2272,"id":2278,"nodeType":"Return","src":"6005:30:13"}]},"documentation":{"id":2263,"nodeType":"StructuredDocumentation","src":"5755:159:13","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2280,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5928:3:13","nodeType":"FunctionDefinition","parameters":{"id":2269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"mutability":"mutable","name":"set","nameLocation":"5951:3:13","nodeType":"VariableDeclaration","scope":2280,"src":"5932:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2262_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2265,"nodeType":"UserDefinedTypeName","pathNode":{"id":2264,"name":"Bytes32Set","nameLocations":["5932:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2262,"src":"5932:10:13"},"referencedDeclaration":2262,"src":"5932:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2262_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2268,"mutability":"mutable","name":"value","nameLocation":"5964:5:13","nodeType":"VariableDeclaration","scope":2280,"src":"5956:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2267,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5956:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5931:39:13"},"returnParameters":{"id":2272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2280,"src":"5989:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2270,"name":"bool","nodeType":"ElementaryTypeName","src":"5989:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5988:6:13"},"scope":2670,"src":"5919:123:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2297,"nodeType":"Block","src":"6289:50:13","statements":[{"expression":{"arguments":[{"expression":{"id":2292,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"6314:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2262_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2293,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6318:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2261,"src":"6314:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"6326:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2291,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"6306:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2068_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6306:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2290,"id":2296,"nodeType":"Return","src":"6299:33:13"}]},"documentation":{"id":2281,"nodeType":"StructuredDocumentation","src":"6048:157:13","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2298,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6219:6:13","nodeType":"FunctionDefinition","parameters":{"id":2287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"mutability":"mutable","name":"set","nameLocation":"6245:3:13","nodeType":"VariableDeclaration","scope":2298,"src":"6226:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2262_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2283,"nodeType":"UserDefinedTypeName","pathNode":{"id":2282,"name":"Bytes32Set","nameLocations":["6226:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2262,"src":"6226:10:13"},"referencedDeclaration":2262,"src":"6226:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2262_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2286,"mutability":"mutable","name":"value","nameLocation":"6258:5:13","nodeType":"VariableDeclaration","scope":2298,"src":"6250:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6250:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6225:39:13"},"returnParameters":{"id":2290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2298,"src":"6283:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2288,"name":"bool","nodeType":"ElementaryTypeName","src":"6283:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6282:6:13"},"scope":2670,"src":"6210:129:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2315,"nodeType":"Block","src":"6506:52:13","statements":[{"expression":{"arguments":[{"expression":{"id":2310,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"6533:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2262_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2311,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6537:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2261,"src":"6533:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"6545:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2309,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"6523:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2068_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6523:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2308,"id":2314,"nodeType":"Return","src":"6516:35:13"}]},"documentation":{"id":2299,"nodeType":"StructuredDocumentation","src":"6345:70:13","text":" @dev Returns true if the value is in the set. O(1)."},"id":2316,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6429:8:13","nodeType":"FunctionDefinition","parameters":{"id":2305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2302,"mutability":"mutable","name":"set","nameLocation":"6457:3:13","nodeType":"VariableDeclaration","scope":2316,"src":"6438:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2262_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2301,"nodeType":"UserDefinedTypeName","pathNode":{"id":2300,"name":"Bytes32Set","nameLocations":["6438:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2262,"src":"6438:10:13"},"referencedDeclaration":2262,"src":"6438:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2262_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2304,"mutability":"mutable","name":"value","nameLocation":"6470:5:13","nodeType":"VariableDeclaration","scope":2316,"src":"6462:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6462:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6437:39:13"},"returnParameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2316,"src":"6500:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2306,"name":"bool","nodeType":"ElementaryTypeName","src":"6500:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6499:6:13"},"scope":2670,"src":"6420:138:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2330,"nodeType":"Block","src":"6711:43:13","statements":[{"expression":{"arguments":[{"expression":{"id":2326,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"6736:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2262_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6740:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2261,"src":"6736:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2325,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"6728:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2068_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6728:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2324,"id":2329,"nodeType":"Return","src":"6721:26:13"}]},"documentation":{"id":2317,"nodeType":"StructuredDocumentation","src":"6564:70:13","text":" @dev Returns the number of values in the set. O(1)."},"id":2331,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6648:6:13","nodeType":"FunctionDefinition","parameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"set","nameLocation":"6674:3:13","nodeType":"VariableDeclaration","scope":2331,"src":"6655:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2262_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2319,"nodeType":"UserDefinedTypeName","pathNode":{"id":2318,"name":"Bytes32Set","nameLocations":["6655:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2262,"src":"6655:10:13"},"referencedDeclaration":2262,"src":"6655:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2262_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6654:24:13"},"returnParameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2331,"src":"6702:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2322,"name":"uint256","nodeType":"ElementaryTypeName","src":"6702:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6701:9:13"},"scope":2670,"src":"6639:115:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2348,"nodeType":"Block","src":"7179:46:13","statements":[{"expression":{"arguments":[{"expression":{"id":2343,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"7200:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2262_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7204:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2261,"src":"7200:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2345,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"7212:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2342,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"7196:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2068_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7196:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2341,"id":2347,"nodeType":"Return","src":"7189:29:13"}]},"documentation":{"id":2332,"nodeType":"StructuredDocumentation","src":"6760:331:13","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2349,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7105:2:13","nodeType":"FunctionDefinition","parameters":{"id":2338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2335,"mutability":"mutable","name":"set","nameLocation":"7127:3:13","nodeType":"VariableDeclaration","scope":2349,"src":"7108:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2262_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2334,"nodeType":"UserDefinedTypeName","pathNode":{"id":2333,"name":"Bytes32Set","nameLocations":["7108:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2262,"src":"7108:10:13"},"referencedDeclaration":2262,"src":"7108:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2262_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2337,"mutability":"mutable","name":"index","nameLocation":"7140:5:13","nodeType":"VariableDeclaration","scope":2349,"src":"7132:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2336,"name":"uint256","nodeType":"ElementaryTypeName","src":"7132:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7107:39:13"},"returnParameters":{"id":2341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2349,"src":"7170:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2339,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7170:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7169:9:13"},"scope":2670,"src":"7096:129:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2378,"nodeType":"Block","src":"7846:219:13","statements":[{"assignments":[2363],"declarations":[{"constant":false,"id":2363,"mutability":"mutable","name":"store","nameLocation":"7873:5:13","nodeType":"VariableDeclaration","scope":2378,"src":"7856:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2361,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7856:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2362,"nodeType":"ArrayTypeName","src":"7856:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2368,"initialValue":{"arguments":[{"expression":{"id":2365,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"7889:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2262_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7893:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2261,"src":"7889:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2364,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"7881:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2068_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7881:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7856:44:13"},{"assignments":[2373],"declarations":[{"constant":false,"id":2373,"mutability":"mutable","name":"result","nameLocation":"7927:6:13","nodeType":"VariableDeclaration","scope":2378,"src":"7910:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7910:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2372,"nodeType":"ArrayTypeName","src":"7910:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2374,"nodeType":"VariableDeclarationStatement","src":"7910:23:13"},{"AST":{"nodeType":"YulBlock","src":"7996:39:13","statements":[{"nodeType":"YulAssignment","src":"8010:15:13","value":{"name":"store","nodeType":"YulIdentifier","src":"8020:5:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8010:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2373,"isOffset":false,"isSlot":false,"src":"8010:6:13","valueSize":1},{"declaration":2363,"isOffset":false,"isSlot":false,"src":"8020:5:13","valueSize":1}],"id":2375,"nodeType":"InlineAssembly","src":"7987:48:13"},{"expression":{"id":2376,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"8052:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2358,"id":2377,"nodeType":"Return","src":"8045:13:13"}]},"documentation":{"id":2350,"nodeType":"StructuredDocumentation","src":"7231:529:13","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2379,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7774:6:13","nodeType":"FunctionDefinition","parameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"mutability":"mutable","name":"set","nameLocation":"7800:3:13","nodeType":"VariableDeclaration","scope":2379,"src":"7781:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2262_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2352,"nodeType":"UserDefinedTypeName","pathNode":{"id":2351,"name":"Bytes32Set","nameLocations":["7781:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2262,"src":"7781:10:13"},"referencedDeclaration":2262,"src":"7781:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2262_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7780:24:13"},"returnParameters":{"id":2358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2379,"src":"7828:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7828:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2356,"nodeType":"ArrayTypeName","src":"7828:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7827:18:13"},"scope":2670,"src":"7765:300:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":2383,"members":[{"constant":false,"id":2382,"mutability":"mutable","name":"_inner","nameLocation":"8122:6:13","nodeType":"VariableDeclaration","scope":2383,"src":"8118:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2381,"nodeType":"UserDefinedTypeName","pathNode":{"id":2380,"name":"Set","nameLocations":["8118:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2068,"src":"8118:3:13"},"referencedDeclaration":2068,"src":"8118:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8097:10:13","nodeType":"StructDefinition","scope":2670,"src":"8090:45:13","visibility":"public"},{"body":{"id":2409,"nodeType":"Block","src":"8381:74:13","statements":[{"expression":{"arguments":[{"expression":{"id":2395,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"8403:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2396,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8407:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2382,"src":"8403:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"8439:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8431:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2401,"name":"uint160","nodeType":"ElementaryTypeName","src":"8431:7:13","typeDescriptions":{}}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8431:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8423:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2399,"name":"uint256","nodeType":"ElementaryTypeName","src":"8423:7:13","typeDescriptions":{}}},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8423:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8415:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2397,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8415:7:13","typeDescriptions":{}}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8415:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2394,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"8398:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2068_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8398:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2393,"id":2408,"nodeType":"Return","src":"8391:57:13"}]},"documentation":{"id":2384,"nodeType":"StructuredDocumentation","src":"8141:159:13","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2410,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8314:3:13","nodeType":"FunctionDefinition","parameters":{"id":2390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2387,"mutability":"mutable","name":"set","nameLocation":"8337:3:13","nodeType":"VariableDeclaration","scope":2410,"src":"8318:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2386,"nodeType":"UserDefinedTypeName","pathNode":{"id":2385,"name":"AddressSet","nameLocations":["8318:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2383,"src":"8318:10:13"},"referencedDeclaration":2383,"src":"8318:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2389,"mutability":"mutable","name":"value","nameLocation":"8350:5:13","nodeType":"VariableDeclaration","scope":2410,"src":"8342:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2388,"name":"address","nodeType":"ElementaryTypeName","src":"8342:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8317:39:13"},"returnParameters":{"id":2393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2410,"src":"8375:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2391,"name":"bool","nodeType":"ElementaryTypeName","src":"8375:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8374:6:13"},"scope":2670,"src":"8305:150:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2436,"nodeType":"Block","src":"8702:77:13","statements":[{"expression":{"arguments":[{"expression":{"id":2422,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"8727:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8731:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2382,"src":"8727:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"8763:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8755:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2428,"name":"uint160","nodeType":"ElementaryTypeName","src":"8755:7:13","typeDescriptions":{}}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8755:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8747:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2426,"name":"uint256","nodeType":"ElementaryTypeName","src":"8747:7:13","typeDescriptions":{}}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8747:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2424,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8739:7:13","typeDescriptions":{}}},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8739:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2421,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"8719:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2068_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8719:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2420,"id":2435,"nodeType":"Return","src":"8712:60:13"}]},"documentation":{"id":2411,"nodeType":"StructuredDocumentation","src":"8461:157:13","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2437,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8632:6:13","nodeType":"FunctionDefinition","parameters":{"id":2417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"set","nameLocation":"8658:3:13","nodeType":"VariableDeclaration","scope":2437,"src":"8639:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2413,"nodeType":"UserDefinedTypeName","pathNode":{"id":2412,"name":"AddressSet","nameLocations":["8639:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2383,"src":"8639:10:13"},"referencedDeclaration":2383,"src":"8639:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2416,"mutability":"mutable","name":"value","nameLocation":"8671:5:13","nodeType":"VariableDeclaration","scope":2437,"src":"8663:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2415,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8638:39:13"},"returnParameters":{"id":2420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2437,"src":"8696:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2418,"name":"bool","nodeType":"ElementaryTypeName","src":"8696:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8695:6:13"},"scope":2670,"src":"8623:156:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2463,"nodeType":"Block","src":"8946:79:13","statements":[{"expression":{"arguments":[{"expression":{"id":2449,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"8973:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2450,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8977:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2382,"src":"8973:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"9009:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9001:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2455,"name":"uint160","nodeType":"ElementaryTypeName","src":"9001:7:13","typeDescriptions":{}}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9001:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8993:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2453,"name":"uint256","nodeType":"ElementaryTypeName","src":"8993:7:13","typeDescriptions":{}}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8993:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2451,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8985:7:13","typeDescriptions":{}}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8985:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2448,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"8963:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2068_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8963:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2447,"id":2462,"nodeType":"Return","src":"8956:62:13"}]},"documentation":{"id":2438,"nodeType":"StructuredDocumentation","src":"8785:70:13","text":" @dev Returns true if the value is in the set. O(1)."},"id":2464,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8869:8:13","nodeType":"FunctionDefinition","parameters":{"id":2444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"mutability":"mutable","name":"set","nameLocation":"8897:3:13","nodeType":"VariableDeclaration","scope":2464,"src":"8878:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2440,"nodeType":"UserDefinedTypeName","pathNode":{"id":2439,"name":"AddressSet","nameLocations":["8878:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2383,"src":"8878:10:13"},"referencedDeclaration":2383,"src":"8878:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2443,"mutability":"mutable","name":"value","nameLocation":"8910:5:13","nodeType":"VariableDeclaration","scope":2464,"src":"8902:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2442,"name":"address","nodeType":"ElementaryTypeName","src":"8902:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:39:13"},"returnParameters":{"id":2447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2464,"src":"8940:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2445,"name":"bool","nodeType":"ElementaryTypeName","src":"8940:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8939:6:13"},"scope":2670,"src":"8860:165:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2478,"nodeType":"Block","src":"9178:43:13","statements":[{"expression":{"arguments":[{"expression":{"id":2474,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"9203:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9207:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2382,"src":"9203:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2473,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"9195:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2068_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9195:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2472,"id":2477,"nodeType":"Return","src":"9188:26:13"}]},"documentation":{"id":2465,"nodeType":"StructuredDocumentation","src":"9031:70:13","text":" @dev Returns the number of values in the set. O(1)."},"id":2479,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9115:6:13","nodeType":"FunctionDefinition","parameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"set","nameLocation":"9141:3:13","nodeType":"VariableDeclaration","scope":2479,"src":"9122:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2467,"nodeType":"UserDefinedTypeName","pathNode":{"id":2466,"name":"AddressSet","nameLocations":["9122:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2383,"src":"9122:10:13"},"referencedDeclaration":2383,"src":"9122:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9121:24:13"},"returnParameters":{"id":2472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2479,"src":"9169:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2470,"name":"uint256","nodeType":"ElementaryTypeName","src":"9169:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9168:9:13"},"scope":2670,"src":"9106:115:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2505,"nodeType":"Block","src":"9646:73:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":2497,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"9691:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9695:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2382,"src":"9691:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2499,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"9703:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2496,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"9687:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2068_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9687:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9679:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"9679:7:13","typeDescriptions":{}}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9679:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9671:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2492,"name":"uint160","nodeType":"ElementaryTypeName","src":"9671:7:13","typeDescriptions":{}}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9671:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2490,"name":"address","nodeType":"ElementaryTypeName","src":"9663:7:13","typeDescriptions":{}}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9663:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2489,"id":2504,"nodeType":"Return","src":"9656:56:13"}]},"documentation":{"id":2480,"nodeType":"StructuredDocumentation","src":"9227:331:13","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2506,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9572:2:13","nodeType":"FunctionDefinition","parameters":{"id":2486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"set","nameLocation":"9594:3:13","nodeType":"VariableDeclaration","scope":2506,"src":"9575:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2482,"nodeType":"UserDefinedTypeName","pathNode":{"id":2481,"name":"AddressSet","nameLocations":["9575:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2383,"src":"9575:10:13"},"referencedDeclaration":2383,"src":"9575:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2485,"mutability":"mutable","name":"index","nameLocation":"9607:5:13","nodeType":"VariableDeclaration","scope":2506,"src":"9599:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2484,"name":"uint256","nodeType":"ElementaryTypeName","src":"9599:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9574:39:13"},"returnParameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2506,"src":"9637:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2487,"name":"address","nodeType":"ElementaryTypeName","src":"9637:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9636:9:13"},"scope":2670,"src":"9563:156:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2535,"nodeType":"Block","src":"10340:219:13","statements":[{"assignments":[2520],"declarations":[{"constant":false,"id":2520,"mutability":"mutable","name":"store","nameLocation":"10367:5:13","nodeType":"VariableDeclaration","scope":2535,"src":"10350:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2518,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10350:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2519,"nodeType":"ArrayTypeName","src":"10350:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2525,"initialValue":{"arguments":[{"expression":{"id":2522,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"10383:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10387:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2382,"src":"10383:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2521,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"10375:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2068_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10375:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10350:44:13"},{"assignments":[2530],"declarations":[{"constant":false,"id":2530,"mutability":"mutable","name":"result","nameLocation":"10421:6:13","nodeType":"VariableDeclaration","scope":2535,"src":"10404:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2528,"name":"address","nodeType":"ElementaryTypeName","src":"10404:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2529,"nodeType":"ArrayTypeName","src":"10404:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2531,"nodeType":"VariableDeclarationStatement","src":"10404:23:13"},{"AST":{"nodeType":"YulBlock","src":"10490:39:13","statements":[{"nodeType":"YulAssignment","src":"10504:15:13","value":{"name":"store","nodeType":"YulIdentifier","src":"10514:5:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10504:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2530,"isOffset":false,"isSlot":false,"src":"10504:6:13","valueSize":1},{"declaration":2520,"isOffset":false,"isSlot":false,"src":"10514:5:13","valueSize":1}],"id":2532,"nodeType":"InlineAssembly","src":"10481:48:13"},{"expression":{"id":2533,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"10546:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2515,"id":2534,"nodeType":"Return","src":"10539:13:13"}]},"documentation":{"id":2507,"nodeType":"StructuredDocumentation","src":"9725:529:13","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2536,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10268:6:13","nodeType":"FunctionDefinition","parameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2510,"mutability":"mutable","name":"set","nameLocation":"10294:3:13","nodeType":"VariableDeclaration","scope":2536,"src":"10275:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2509,"nodeType":"UserDefinedTypeName","pathNode":{"id":2508,"name":"AddressSet","nameLocations":["10275:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2383,"src":"10275:10:13"},"referencedDeclaration":2383,"src":"10275:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2383_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10274:24:13"},"returnParameters":{"id":2515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2536,"src":"10322:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2512,"name":"address","nodeType":"ElementaryTypeName","src":"10322:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2513,"nodeType":"ArrayTypeName","src":"10322:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10321:18:13"},"scope":2670,"src":"10259:300:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":2540,"members":[{"constant":false,"id":2539,"mutability":"mutable","name":"_inner","nameLocation":"10610:6:13","nodeType":"VariableDeclaration","scope":2540,"src":"10606:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2538,"nodeType":"UserDefinedTypeName","pathNode":{"id":2537,"name":"Set","nameLocations":["10606:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2068,"src":"10606:3:13"},"referencedDeclaration":2068,"src":"10606:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10588:7:13","nodeType":"StructDefinition","scope":2670,"src":"10581:42:13","visibility":"public"},{"body":{"id":2560,"nodeType":"Block","src":"10866:56:13","statements":[{"expression":{"arguments":[{"expression":{"id":2552,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"10888:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2540_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2553,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10892:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2539,"src":"10888:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"10908:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10900:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2554,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10900:7:13","typeDescriptions":{}}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10900:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2551,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"10883:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2068_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10883:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2550,"id":2559,"nodeType":"Return","src":"10876:39:13"}]},"documentation":{"id":2541,"nodeType":"StructuredDocumentation","src":"10629:159:13","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2561,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10802:3:13","nodeType":"FunctionDefinition","parameters":{"id":2547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"set","nameLocation":"10822:3:13","nodeType":"VariableDeclaration","scope":2561,"src":"10806:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2540_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2543,"nodeType":"UserDefinedTypeName","pathNode":{"id":2542,"name":"UintSet","nameLocations":["10806:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2540,"src":"10806:7:13"},"referencedDeclaration":2540,"src":"10806:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2540_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2546,"mutability":"mutable","name":"value","nameLocation":"10835:5:13","nodeType":"VariableDeclaration","scope":2561,"src":"10827:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"10827:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10805:36:13"},"returnParameters":{"id":2550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2561,"src":"10860:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2548,"name":"bool","nodeType":"ElementaryTypeName","src":"10860:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10859:6:13"},"scope":2670,"src":"10793:129:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2581,"nodeType":"Block","src":"11166:59:13","statements":[{"expression":{"arguments":[{"expression":{"id":2573,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"11191:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2540_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2574,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11195:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2539,"src":"11191:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"11211:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11203:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2575,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11203:7:13","typeDescriptions":{}}},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11203:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2572,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"11183:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2068_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11183:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2571,"id":2580,"nodeType":"Return","src":"11176:42:13"}]},"documentation":{"id":2562,"nodeType":"StructuredDocumentation","src":"10928:157:13","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2582,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11099:6:13","nodeType":"FunctionDefinition","parameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2565,"mutability":"mutable","name":"set","nameLocation":"11122:3:13","nodeType":"VariableDeclaration","scope":2582,"src":"11106:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2540_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2564,"nodeType":"UserDefinedTypeName","pathNode":{"id":2563,"name":"UintSet","nameLocations":["11106:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2540,"src":"11106:7:13"},"referencedDeclaration":2540,"src":"11106:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2540_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2567,"mutability":"mutable","name":"value","nameLocation":"11135:5:13","nodeType":"VariableDeclaration","scope":2582,"src":"11127:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2566,"name":"uint256","nodeType":"ElementaryTypeName","src":"11127:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11105:36:13"},"returnParameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2582,"src":"11160:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2569,"name":"bool","nodeType":"ElementaryTypeName","src":"11160:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11159:6:13"},"scope":2670,"src":"11090:135:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2602,"nodeType":"Block","src":"11389:61:13","statements":[{"expression":{"arguments":[{"expression":{"id":2594,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"11416:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2540_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11420:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2539,"src":"11416:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"11436:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11428:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11428:7:13","typeDescriptions":{}}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11428:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2593,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"11406:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2068_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11406:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2592,"id":2601,"nodeType":"Return","src":"11399:44:13"}]},"documentation":{"id":2583,"nodeType":"StructuredDocumentation","src":"11231:70:13","text":" @dev Returns true if the value is in the set. O(1)."},"id":2603,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11315:8:13","nodeType":"FunctionDefinition","parameters":{"id":2589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2586,"mutability":"mutable","name":"set","nameLocation":"11340:3:13","nodeType":"VariableDeclaration","scope":2603,"src":"11324:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2540_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2585,"nodeType":"UserDefinedTypeName","pathNode":{"id":2584,"name":"UintSet","nameLocations":["11324:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2540,"src":"11324:7:13"},"referencedDeclaration":2540,"src":"11324:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2540_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2588,"mutability":"mutable","name":"value","nameLocation":"11353:5:13","nodeType":"VariableDeclaration","scope":2603,"src":"11345:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2587,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11323:36:13"},"returnParameters":{"id":2592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2603,"src":"11383:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2590,"name":"bool","nodeType":"ElementaryTypeName","src":"11383:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11382:6:13"},"scope":2670,"src":"11306:144:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2617,"nodeType":"Block","src":"11600:43:13","statements":[{"expression":{"arguments":[{"expression":{"id":2613,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"11625:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2540_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11629:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2539,"src":"11625:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2612,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"11617:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2068_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11617:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2611,"id":2616,"nodeType":"Return","src":"11610:26:13"}]},"documentation":{"id":2604,"nodeType":"StructuredDocumentation","src":"11456:70:13","text":" @dev Returns the number of values in the set. O(1)."},"id":2618,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11540:6:13","nodeType":"FunctionDefinition","parameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"set","nameLocation":"11563:3:13","nodeType":"VariableDeclaration","scope":2618,"src":"11547:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2540_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2606,"nodeType":"UserDefinedTypeName","pathNode":{"id":2605,"name":"UintSet","nameLocations":["11547:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2540,"src":"11547:7:13"},"referencedDeclaration":2540,"src":"11547:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2540_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11546:21:13"},"returnParameters":{"id":2611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2618,"src":"11591:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2609,"name":"uint256","nodeType":"ElementaryTypeName","src":"11591:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11590:9:13"},"scope":2670,"src":"11531:112:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2638,"nodeType":"Block","src":"12065:55:13","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2632,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"12094:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2540_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2633,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12098:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2539,"src":"12094:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2634,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"12106:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2631,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"12090:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2068_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12090:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12082:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2629,"name":"uint256","nodeType":"ElementaryTypeName","src":"12082:7:13","typeDescriptions":{}}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12082:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2628,"id":2637,"nodeType":"Return","src":"12075:38:13"}]},"documentation":{"id":2619,"nodeType":"StructuredDocumentation","src":"11649:331:13","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2639,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11994:2:13","nodeType":"FunctionDefinition","parameters":{"id":2625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"set","nameLocation":"12013:3:13","nodeType":"VariableDeclaration","scope":2639,"src":"11997:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2540_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2621,"nodeType":"UserDefinedTypeName","pathNode":{"id":2620,"name":"UintSet","nameLocations":["11997:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2540,"src":"11997:7:13"},"referencedDeclaration":2540,"src":"11997:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2540_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2624,"mutability":"mutable","name":"index","nameLocation":"12026:5:13","nodeType":"VariableDeclaration","scope":2639,"src":"12018:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2623,"name":"uint256","nodeType":"ElementaryTypeName","src":"12018:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11996:36:13"},"returnParameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2639,"src":"12056:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2626,"name":"uint256","nodeType":"ElementaryTypeName","src":"12056:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12055:9:13"},"scope":2670,"src":"11985:135:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2668,"nodeType":"Block","src":"12738:219:13","statements":[{"assignments":[2653],"declarations":[{"constant":false,"id":2653,"mutability":"mutable","name":"store","nameLocation":"12765:5:13","nodeType":"VariableDeclaration","scope":2668,"src":"12748:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12748:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2652,"nodeType":"ArrayTypeName","src":"12748:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2658,"initialValue":{"arguments":[{"expression":{"id":2655,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"12781:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2540_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2656,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12785:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2539,"src":"12781:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2068_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2654,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"12773:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2068_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12773:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12748:44:13"},{"assignments":[2663],"declarations":[{"constant":false,"id":2663,"mutability":"mutable","name":"result","nameLocation":"12819:6:13","nodeType":"VariableDeclaration","scope":2668,"src":"12802:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2661,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2662,"nodeType":"ArrayTypeName","src":"12802:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2664,"nodeType":"VariableDeclarationStatement","src":"12802:23:13"},{"AST":{"nodeType":"YulBlock","src":"12888:39:13","statements":[{"nodeType":"YulAssignment","src":"12902:15:13","value":{"name":"store","nodeType":"YulIdentifier","src":"12912:5:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12902:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2663,"isOffset":false,"isSlot":false,"src":"12902:6:13","valueSize":1},{"declaration":2653,"isOffset":false,"isSlot":false,"src":"12912:5:13","valueSize":1}],"id":2665,"nodeType":"InlineAssembly","src":"12879:48:13"},{"expression":{"id":2666,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"12944:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2648,"id":2667,"nodeType":"Return","src":"12937:13:13"}]},"documentation":{"id":2640,"nodeType":"StructuredDocumentation","src":"12126:529:13","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2669,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12669:6:13","nodeType":"FunctionDefinition","parameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2643,"mutability":"mutable","name":"set","nameLocation":"12692:3:13","nodeType":"VariableDeclaration","scope":2669,"src":"12676:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2540_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2642,"nodeType":"UserDefinedTypeName","pathNode":{"id":2641,"name":"UintSet","nameLocations":["12676:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2540,"src":"12676:7:13"},"referencedDeclaration":2540,"src":"12676:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2540_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12675:21:13"},"returnParameters":{"id":2648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2669,"src":"12720:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2645,"name":"uint256","nodeType":"ElementaryTypeName","src":"12720:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2646,"nodeType":"ArrayTypeName","src":"12720:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12719:18:13"},"scope":2670,"src":"12660:297:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2671,"src":"1329:11630:13","usedErrors":[],"usedEvents":[]}],"src":"205:12755:13"},"id":13},"contracts/AlgebraCommunityVault.sol":{"ast":{"absolutePath":"contracts/AlgebraCommunityVault.sol","exportedSymbols":{"AlgebraCommunityVault":[3179],"FullMath":[5446],"IAlgebraCommunityVault":[5156],"IAlgebraFactory":[4338],"IAlgebraPluginFactory":[4422],"IAlgebraPoolErrors":[4640],"IAlgebraVaultFactory":[5184],"SafeTransfer":[5474]},"id":3180,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":2672,"literals":["solidity","=","0.8",".20"],"nodeType":"PragmaDirective","src":"37:24:14"},{"absolutePath":"contracts/libraries/SafeTransfer.sol","file":"./libraries/SafeTransfer.sol","id":2673,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3180,"sourceUnit":5475,"src":"63:38:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/FullMath.sol","file":"./libraries/FullMath.sol","id":2674,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3180,"sourceUnit":5447,"src":"102:34:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAlgebraFactory.sol","file":"./interfaces/IAlgebraFactory.sol","id":2675,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3180,"sourceUnit":4339,"src":"138:42:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/vault/IAlgebraCommunityVault.sol","file":"./interfaces/vault/IAlgebraCommunityVault.sol","id":2676,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3180,"sourceUnit":5157,"src":"181:55:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2678,"name":"IAlgebraCommunityVault","nameLocations":["466:22:14"],"nodeType":"IdentifierPath","referencedDeclaration":5156,"src":"466:22:14"},"id":2679,"nodeType":"InheritanceSpecifier","src":"466:22:14"}],"canonicalName":"AlgebraCommunityVault","contractDependencies":[],"contractKind":"contract","documentation":{"id":2677,"nodeType":"StructuredDocumentation","src":"238:194:14","text":"@title Algebra community fee vault\n @notice Community fee from pools is sent here, if it is enabled\n @dev Role system is used to withdraw tokens\n @dev Version: Algebra Integral 1.2"},"fullyImplemented":true,"id":3179,"linearizedBaseContracts":[3179,5156],"name":"AlgebraCommunityVault","nameLocation":"441:21:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2680,"nodeType":"StructuredDocumentation","src":"493:50:14","text":"@dev The role can be granted in AlgebraFactory"},"functionSelector":"1de41613","id":2685,"mutability":"constant","name":"COMMUNITY_FEE_WITHDRAWER_ROLE","nameLocation":"570:29:14","nodeType":"VariableDeclaration","scope":3179,"src":"546:93:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2681,"name":"bytes32","nodeType":"ElementaryTypeName","src":"546:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"434f4d4d554e4954595f4645455f57495448445241574552","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"612:26:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_b77a63f119f4dc2174dc6c76fc1a1565fa4f2b0dde50ed5c0465471cd9b331f6","typeString":"literal_string \"COMMUNITY_FEE_WITHDRAWER\""},"value":"COMMUNITY_FEE_WITHDRAWER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_b77a63f119f4dc2174dc6c76fc1a1565fa4f2b0dde50ed5c0465471cd9b331f6","typeString":"literal_string \"COMMUNITY_FEE_WITHDRAWER\""}],"id":2682,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"602:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"602:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"documentation":{"id":2686,"nodeType":"StructuredDocumentation","src":"643:50:14","text":"@dev The role can be granted in AlgebraFactory"},"functionSelector":"bbac3b8d","id":2691,"mutability":"constant","name":"COMMUNITY_FEE_VAULT_ADMINISTRATOR","nameLocation":"720:33:14","nodeType":"VariableDeclaration","scope":3179,"src":"696:106:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"696:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"434f4d4d554e4954595f4645455f5641554c545f41444d494e4953545241544f52","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"766:35:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_63e58c34d94475ba3fc063e19800b940485850d84d09cd3c1f2c14192c559a68","typeString":"literal_string \"COMMUNITY_FEE_VAULT_ADMINISTRATOR\""},"value":"COMMUNITY_FEE_VAULT_ADMINISTRATOR"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_63e58c34d94475ba3fc063e19800b940485850d84d09cd3c1f2c14192c559a68","typeString":"literal_string \"COMMUNITY_FEE_VAULT_ADMINISTRATOR\""}],"id":2688,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"756:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"756:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"id":2693,"mutability":"immutable","name":"factory","nameLocation":"832:7:14","nodeType":"VariableDeclaration","scope":3179,"src":"806:33:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2692,"name":"address","nodeType":"ElementaryTypeName","src":"806:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"documentation":{"id":2694,"nodeType":"StructuredDocumentation","src":"844:63:14","text":"@notice Address to which community fees are sent from vault"},"functionSelector":"371abc95","id":2696,"mutability":"mutable","name":"communityFeeReceiver","nameLocation":"925:20:14","nodeType":"VariableDeclaration","scope":3179,"src":"910:35:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2695,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":2697,"nodeType":"StructuredDocumentation","src":"949:114:14","text":"@notice The percentage of the protocol fee that Algebra will receive\n @dev Value in thousandths,i.e. 1e-3"},"functionSelector":"9f856b8d","id":2699,"mutability":"mutable","name":"algebraFee","nameLocation":"1080:10:14","nodeType":"VariableDeclaration","scope":3179,"src":"1066:24:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2698,"name":"uint16","nodeType":"ElementaryTypeName","src":"1066:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"public"},{"constant":false,"documentation":{"id":2700,"nodeType":"StructuredDocumentation","src":"1094:73:14","text":"@notice Represents whether there is a new Algebra fee proposal or not"},"functionSelector":"c53b3fbe","id":2702,"mutability":"mutable","name":"hasNewAlgebraFeeProposal","nameLocation":"1182:24:14","nodeType":"VariableDeclaration","scope":3179,"src":"1170:36:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2701,"name":"bool","nodeType":"ElementaryTypeName","src":"1170:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"documentation":{"id":2703,"nodeType":"StructuredDocumentation","src":"1210:39:14","text":"@notice Suggested Algebra fee value"},"functionSelector":"62744405","id":2705,"mutability":"mutable","name":"proposedNewAlgebraFee","nameLocation":"1266:21:14","nodeType":"VariableDeclaration","scope":3179,"src":"1252:35:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2704,"name":"uint16","nodeType":"ElementaryTypeName","src":"1252:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"public"},{"constant":false,"documentation":{"id":2706,"nodeType":"StructuredDocumentation","src":"1291:62:14","text":"@notice Address of recipient Algebra part of community fee"},"functionSelector":"4738761c","id":2708,"mutability":"mutable","name":"algebraFeeReceiver","nameLocation":"1371:18:14","nodeType":"VariableDeclaration","scope":3179,"src":"1356:33:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2707,"name":"address","nodeType":"ElementaryTypeName","src":"1356:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":2709,"nodeType":"StructuredDocumentation","src":"1393:42:14","text":"@notice Address of Algebra fee manager"},"functionSelector":"9d754dde","id":2711,"mutability":"mutable","name":"algebraFeeManager","nameLocation":"1453:17:14","nodeType":"VariableDeclaration","scope":3179,"src":"1438:32:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2710,"name":"address","nodeType":"ElementaryTypeName","src":"1438:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":2713,"mutability":"mutable","name":"_pendingAlgebraFeeManager","nameLocation":"1490:25:14","nodeType":"VariableDeclaration","scope":3179,"src":"1474:41:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2712,"name":"address","nodeType":"ElementaryTypeName","src":"1474:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"id":2716,"mutability":"constant","name":"ALGEBRA_FEE_DENOMINATOR","nameLocation":"1544:23:14","nodeType":"VariableDeclaration","scope":3179,"src":"1520:54:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2714,"name":"uint16","nodeType":"ElementaryTypeName","src":"1520:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"31303030","id":2715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1570:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"visibility":"private"},{"body":{"id":2731,"nodeType":"Block","src":"1608:135:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":2723,"name":"COMMUNITY_FEE_VAULT_ADMINISTRATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"1662:33:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2724,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1697:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1701:6:14","memberName":"sender","nodeType":"MemberAccess","src":"1697:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2720,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"1638:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2719,"name":"IAlgebraFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"1622:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAlgebraFactory_$4338_$","typeString":"type(contract IAlgebraFactory)"}},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1622:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraFactory_$4338","typeString":"contract IAlgebraFactory"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1647:14:14","memberName":"hasRoleOrOwner","nodeType":"MemberAccess","referencedDeclaration":4161,"src":"1622:39:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view external returns (bool)"}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1622:86:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f6e6c792061646d696e6973747261746f72","id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1710:20:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_99dd25207a22d65edeb29e8e142bda291165d5040e7618d5fc4986296b11b47d","typeString":"literal_string \"only administrator\""},"value":"only administrator"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99dd25207a22d65edeb29e8e142bda291165d5040e7618d5fc4986296b11b47d","typeString":"literal_string \"only administrator\""}],"id":2718,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1614:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1614:117:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2729,"nodeType":"ExpressionStatement","src":"1614:117:14"},{"id":2730,"nodeType":"PlaceholderStatement","src":"1737:1:14"}]},"id":2732,"name":"onlyAdministrator","nameLocation":"1588:17:14","nodeType":"ModifierDefinition","parameters":{"id":2717,"nodeType":"ParameterList","parameters":[],"src":"1605:2:14"},"src":"1579:164:14","virtual":false,"visibility":"internal"},{"body":{"id":2752,"nodeType":"Block","src":"1773:163:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2735,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1787:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1791:6:14","memberName":"sender","nodeType":"MemberAccess","src":"1787:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2737,"name":"algebraFeeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"1801:17:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1787:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2743,"name":"COMMUNITY_FEE_WITHDRAWER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"1862:29:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2744,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1893:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1897:6:14","memberName":"sender","nodeType":"MemberAccess","src":"1893:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2740,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"1838:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2739,"name":"IAlgebraFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"1822:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAlgebraFactory_$4338_$","typeString":"type(contract IAlgebraFactory)"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1822:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraFactory_$4338","typeString":"contract IAlgebraFactory"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:14:14","memberName":"hasRoleOrOwner","nodeType":"MemberAccess","referencedDeclaration":4161,"src":"1822:39:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view external returns (bool)"}},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1822:82:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1787:117:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f6e6c792077697468647261776572","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:17:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_4cbf714950e058d3c5d10f8b84cbda7a3a55642b84d4a7fabaabf151ae72ed4b","typeString":"literal_string \"only withdrawer\""},"value":"only withdrawer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4cbf714950e058d3c5d10f8b84cbda7a3a55642b84d4a7fabaabf151ae72ed4b","typeString":"literal_string \"only withdrawer\""}],"id":2734,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1779:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1779:145:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2750,"nodeType":"ExpressionStatement","src":"1779:145:14"},{"id":2751,"nodeType":"PlaceholderStatement","src":"1930:1:14"}]},"id":2753,"name":"onlyWithdrawer","nameLocation":"1756:14:14","nodeType":"ModifierDefinition","parameters":{"id":2733,"nodeType":"ParameterList","parameters":[],"src":"1770:2:14"},"src":"1747:189:14","virtual":false,"visibility":"internal"},{"body":{"id":2764,"nodeType":"Block","src":"1973:86:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2756,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1987:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1991:6:14","memberName":"sender","nodeType":"MemberAccess","src":"1987:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2758,"name":"algebraFeeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"2001:17:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1987:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f6e6c7920616c676562726120666565206d616e61676572","id":2760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2020:26:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_ff0b2a4910e8f81a07d80bdb9346c2fc1c6ad6e36f5ccd7dca7b94096772771c","typeString":"literal_string \"only algebra fee manager\""},"value":"only algebra fee manager"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ff0b2a4910e8f81a07d80bdb9346c2fc1c6ad6e36f5ccd7dca7b94096772771c","typeString":"literal_string \"only algebra fee manager\""}],"id":2755,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1979:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1979:68:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2762,"nodeType":"ExpressionStatement","src":"1979:68:14"},{"id":2763,"nodeType":"PlaceholderStatement","src":"2053:1:14"}]},"id":2765,"name":"onlyAlgebraFeeManager","nameLocation":"1949:21:14","nodeType":"ModifierDefinition","parameters":{"id":2754,"nodeType":"ParameterList","parameters":[],"src":"1970:2:14"},"src":"1940:119:14","virtual":false,"visibility":"internal"},{"body":{"id":2780,"nodeType":"Block","src":"2121:72:14","statements":[{"expression":{"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2772,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"2128:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2773,"name":"algebraFeeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"2137:17:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2774,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"2127:28:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2775,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"2159:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2776,"name":"_algebraFeeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"2169:18:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2777,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:30:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"src":"2127:61:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2779,"nodeType":"ExpressionStatement","src":"2127:61:14"}]},"id":2781,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2767,"mutability":"mutable","name":"_factory","nameLocation":"2083:8:14","nodeType":"VariableDeclaration","scope":2781,"src":"2075:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2766,"name":"address","nodeType":"ElementaryTypeName","src":"2075:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2769,"mutability":"mutable","name":"_algebraFeeManager","nameLocation":"2101:18:14","nodeType":"VariableDeclaration","scope":2781,"src":"2093:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2768,"name":"address","nodeType":"ElementaryTypeName","src":"2093:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2074:46:14"},"returnParameters":{"id":2771,"nodeType":"ParameterList","parameters":[],"src":"2121:0:14"},"scope":3179,"src":"2063:130:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[5104],"body":{"id":2809,"nodeType":"Block","src":"2320:213:14","statements":[{"assignments":[2793,2795,2797],"declarations":[{"constant":false,"id":2793,"mutability":"mutable","name":"_algebraFee","nameLocation":"2334:11:14","nodeType":"VariableDeclaration","scope":2809,"src":"2327:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2792,"name":"uint16","nodeType":"ElementaryTypeName","src":"2327:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2795,"mutability":"mutable","name":"_algebraFeeReceiver","nameLocation":"2355:19:14","nodeType":"VariableDeclaration","scope":2809,"src":"2347:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2794,"name":"address","nodeType":"ElementaryTypeName","src":"2347:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2797,"mutability":"mutable","name":"_communityFeeReceiver","nameLocation":"2384:21:14","nodeType":"VariableDeclaration","scope":2809,"src":"2376:29:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2796,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2800,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2798,"name":"_readAndVerifyWithdrawSettings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"2409:30:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint16_$_t_address_$_t_address_$","typeString":"function () view returns (uint16,address,address)"}},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2409:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_address_$_t_address_$","typeString":"tuple(uint16,address,address)"}},"nodeType":"VariableDeclarationStatement","src":"2326:115:14"},{"expression":{"arguments":[{"id":2802,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"2457:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2803,"name":"_communityFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"2464:21:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2804,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"2487:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2805,"name":"_algebraFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"2495:11:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2806,"name":"_algebraFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"2508:19:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2801,"name":"_withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"2447:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint16_$_t_address_$returns$__$","typeString":"function (address,address,uint256,uint16,address)"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:81:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2808,"nodeType":"ExpressionStatement","src":"2447:81:14"}]},"documentation":{"id":2782,"nodeType":"StructuredDocumentation","src":"2197:38:14","text":"@inheritdoc IAlgebraCommunityVault"},"functionSelector":"f3fef3a3","id":2810,"implemented":true,"kind":"function","modifiers":[{"id":2790,"kind":"modifierInvocation","modifierName":{"id":2789,"name":"onlyWithdrawer","nameLocations":["2305:14:14"],"nodeType":"IdentifierPath","referencedDeclaration":2753,"src":"2305:14:14"},"nodeType":"ModifierInvocation","src":"2305:14:14"}],"name":"withdraw","nameLocation":"2247:8:14","nodeType":"FunctionDefinition","overrides":{"id":2788,"nodeType":"OverrideSpecifier","overrides":[],"src":"2296:8:14"},"parameters":{"id":2787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2784,"mutability":"mutable","name":"token","nameLocation":"2264:5:14","nodeType":"VariableDeclaration","scope":2810,"src":"2256:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2783,"name":"address","nodeType":"ElementaryTypeName","src":"2256:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2786,"mutability":"mutable","name":"amount","nameLocation":"2279:6:14","nodeType":"VariableDeclaration","scope":2810,"src":"2271:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2785,"name":"uint256","nodeType":"ElementaryTypeName","src":"2271:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2255:31:14"},"returnParameters":{"id":2791,"nodeType":"ParameterList","parameters":[],"src":"2320:0:14"},"scope":3179,"src":"2238:295:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5117],"body":{"id":2860,"nodeType":"Block","src":"2675:339:14","statements":[{"assignments":[2822],"declarations":[{"constant":false,"id":2822,"mutability":"mutable","name":"paramsLength","nameLocation":"2689:12:14","nodeType":"VariableDeclaration","scope":2860,"src":"2681:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2821,"name":"uint256","nodeType":"ElementaryTypeName","src":"2681:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2825,"initialValue":{"expression":{"id":2823,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"2704:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WithdrawTokensParams_$5109_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IAlgebraCommunityVault.WithdrawTokensParams calldata[] calldata"}},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2711:6:14","memberName":"length","nodeType":"MemberAccess","src":"2704:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2681:36:14"},{"assignments":[2827,2829,2831],"declarations":[{"constant":false,"id":2827,"mutability":"mutable","name":"_algebraFee","nameLocation":"2731:11:14","nodeType":"VariableDeclaration","scope":2860,"src":"2724:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2826,"name":"uint16","nodeType":"ElementaryTypeName","src":"2724:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2829,"mutability":"mutable","name":"_algebraFeeReceiver","nameLocation":"2752:19:14","nodeType":"VariableDeclaration","scope":2860,"src":"2744:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2828,"name":"address","nodeType":"ElementaryTypeName","src":"2744:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2831,"mutability":"mutable","name":"_communityFeeReceiver","nameLocation":"2781:21:14","nodeType":"VariableDeclaration","scope":2860,"src":"2773:29:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2830,"name":"address","nodeType":"ElementaryTypeName","src":"2773:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2834,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2832,"name":"_readAndVerifyWithdrawSettings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"2806:30:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint16_$_t_address_$_t_address_$","typeString":"function () view returns (uint16,address,address)"}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2806:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_address_$_t_address_$","typeString":"tuple(uint16,address,address)"}},"nodeType":"VariableDeclarationStatement","src":"2723:115:14"},{"id":2859,"nodeType":"UncheckedBlock","src":"2845:165:14","statements":[{"body":{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2845,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"2912:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WithdrawTokensParams_$5109_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IAlgebraCommunityVault.WithdrawTokensParams calldata[] calldata"}},"id":2847,"indexExpression":{"id":2846,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"2919:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2912:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawTokensParams_$5109_calldata_ptr","typeString":"struct IAlgebraCommunityVault.WithdrawTokensParams calldata"}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2922:5:14","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":5106,"src":"2912:15:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2849,"name":"_communityFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"2929:21:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":2850,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"2952:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WithdrawTokensParams_$5109_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IAlgebraCommunityVault.WithdrawTokensParams calldata[] calldata"}},"id":2852,"indexExpression":{"id":2851,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"2959:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2952:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawTokensParams_$5109_calldata_ptr","typeString":"struct IAlgebraCommunityVault.WithdrawTokensParams calldata"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2962:6:14","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5108,"src":"2952:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2854,"name":"_algebraFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"2970:11:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2855,"name":"_algebraFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"2983:19:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2844,"name":"_withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"2902:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint16_$_t_address_$returns$__$","typeString":"function (address,address,uint256,uint16,address)"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2902:101:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2857,"nodeType":"ExpressionStatement","src":"2902:101:14"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2838,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"2879:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2839,"name":"paramsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"2883:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2879:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2858,"initializationExpression":{"assignments":[2836],"declarations":[{"constant":false,"id":2836,"mutability":"mutable","name":"i","nameLocation":"2876:1:14","nodeType":"VariableDeclaration","scope":2858,"src":"2868:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"2868:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2837,"nodeType":"VariableDeclarationStatement","src":"2868:9:14"},"loopExpression":{"expression":{"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2897:3:14","subExpression":{"id":2841,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"2899:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2843,"nodeType":"ExpressionStatement","src":"2897:3:14"},"nodeType":"ForStatement","src":"2863:140:14"}]}]},"documentation":{"id":2811,"nodeType":"StructuredDocumentation","src":"2537:38:14","text":"@inheritdoc IAlgebraCommunityVault"},"functionSelector":"dfadc794","id":2861,"implemented":true,"kind":"function","modifiers":[{"id":2819,"kind":"modifierInvocation","modifierName":{"id":2818,"name":"onlyWithdrawer","nameLocations":["2660:14:14"],"nodeType":"IdentifierPath","referencedDeclaration":2753,"src":"2660:14:14"},"nodeType":"ModifierInvocation","src":"2660:14:14"}],"name":"withdrawTokens","nameLocation":"2587:14:14","nodeType":"FunctionDefinition","overrides":{"id":2817,"nodeType":"OverrideSpecifier","overrides":[],"src":"2651:8:14"},"parameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2815,"mutability":"mutable","name":"params","nameLocation":"2634:6:14","nodeType":"VariableDeclaration","scope":2861,"src":"2602:38:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WithdrawTokensParams_$5109_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IAlgebraCommunityVault.WithdrawTokensParams[]"},"typeName":{"baseType":{"id":2813,"nodeType":"UserDefinedTypeName","pathNode":{"id":2812,"name":"WithdrawTokensParams","nameLocations":["2602:20:14"],"nodeType":"IdentifierPath","referencedDeclaration":5109,"src":"2602:20:14"},"referencedDeclaration":5109,"src":"2602:20:14","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawTokensParams_$5109_storage_ptr","typeString":"struct IAlgebraCommunityVault.WithdrawTokensParams"}},"id":2814,"nodeType":"ArrayTypeName","src":"2602:22:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WithdrawTokensParams_$5109_storage_$dyn_storage_ptr","typeString":"struct IAlgebraCommunityVault.WithdrawTokensParams[]"}},"visibility":"internal"}],"src":"2601:40:14"},"returnParameters":{"id":2820,"nodeType":"ParameterList","parameters":[],"src":"2675:0:14"},"scope":3179,"src":"2578:436:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2904,"nodeType":"Block","src":"3162:297:14","statements":[{"expression":{"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2870,"name":"_algebraFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"3169:11:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2871,"name":"_algebraFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"3182:19:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2872,"name":"_communityFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"3203:21:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2873,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"3168:57:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_address_$_t_address_$","typeString":"tuple(uint16,address,address)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2874,"name":"algebraFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"3229:10:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2875,"name":"algebraFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"3241:18:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2876,"name":"communityFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"3261:20:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2877,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3228:54:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_address_$_t_address_$","typeString":"tuple(uint16,address,address)"}},"src":"3168:114:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2879,"nodeType":"ExpressionStatement","src":"3168:114:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2880,"name":"_algebraFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"3292:11:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3307:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3292:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2893,"nodeType":"IfStatement","src":"3288:96:14","trueBody":{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2884,"name":"_algebraFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"3318:19:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3349:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3341:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2885,"name":"address","nodeType":"ElementaryTypeName","src":"3341:7:14","typeDescriptions":{}}},"id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3341:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3318:33:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420616c676562726120666565207265636569766572","id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3353:30:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_2d701cb44082b54d76f2079d2ed56fb8bebc3ba7c1aed6b94050f9763933ebd0","typeString":"literal_string \"invalid algebra fee receiver\""},"value":"invalid algebra fee receiver"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2d701cb44082b54d76f2079d2ed56fb8bebc3ba7c1aed6b94050f9763933ebd0","typeString":"literal_string \"invalid algebra fee receiver\""}],"id":2883,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3310:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3310:74:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2892,"nodeType":"ExpressionStatement","src":"3310:74:14"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2895,"name":"_communityFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"3398:21:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3431:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3423:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2896,"name":"address","nodeType":"ElementaryTypeName","src":"3423:7:14","typeDescriptions":{}}},"id":2899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3423:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3398:35:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c6964207265636569766572","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3435:18:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_0eb53f4394227d9efae20f213ac7ba91324843ea74bf7589e808a58399106618","typeString":"literal_string \"invalid receiver\""},"value":"invalid receiver"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0eb53f4394227d9efae20f213ac7ba91324843ea74bf7589e808a58399106618","typeString":"literal_string \"invalid receiver\""}],"id":2894,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3390:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3390:64:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2903,"nodeType":"ExpressionStatement","src":"3390:64:14"}]},"id":2905,"implemented":true,"kind":"function","modifiers":[],"name":"_readAndVerifyWithdrawSettings","nameLocation":"3027:30:14","nodeType":"FunctionDefinition","parameters":{"id":2862,"nodeType":"ParameterList","parameters":[],"src":"3057:2:14"},"returnParameters":{"id":2869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2864,"mutability":"mutable","name":"_algebraFee","nameLocation":"3089:11:14","nodeType":"VariableDeclaration","scope":2905,"src":"3082:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2863,"name":"uint16","nodeType":"ElementaryTypeName","src":"3082:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2866,"mutability":"mutable","name":"_algebraFeeReceiver","nameLocation":"3110:19:14","nodeType":"VariableDeclaration","scope":2905,"src":"3102:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2865,"name":"address","nodeType":"ElementaryTypeName","src":"3102:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2868,"mutability":"mutable","name":"_communityFeeReceiver","nameLocation":"3139:21:14","nodeType":"VariableDeclaration","scope":2905,"src":"3131:29:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2867,"name":"address","nodeType":"ElementaryTypeName","src":"3131:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3081:80:14"},"scope":3179,"src":"3018:441:14","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2968,"nodeType":"Block","src":"3582:506:14","statements":[{"assignments":[2919],"declarations":[{"constant":false,"id":2919,"mutability":"mutable","name":"withdrawAmount","nameLocation":"3596:14:14","nodeType":"VariableDeclaration","scope":2968,"src":"3588:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2918,"name":"uint256","nodeType":"ElementaryTypeName","src":"3588:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2921,"initialValue":{"id":2920,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"3613:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3588:31:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2922,"name":"_algebraFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"3629:11:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3644:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3629:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2953,"nodeType":"IfStatement","src":"3625:346:14","trueBody":{"id":2952,"nodeType":"Block","src":"3647:324:14","statements":[{"assignments":[2926],"declarations":[{"constant":false,"id":2926,"mutability":"mutable","name":"algebraFeeAmount","nameLocation":"3663:16:14","nodeType":"VariableDeclaration","scope":2952,"src":"3655:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2925,"name":"uint256","nodeType":"ElementaryTypeName","src":"3655:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2933,"initialValue":{"arguments":[{"id":2929,"name":"withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"3708:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2930,"name":"_algebraFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"3724:11:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2931,"name":"ALGEBRA_FEE_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"3737:23:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":2927,"name":"FullMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"3682:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FullMath_$5446_$","typeString":"type(library FullMath)"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3691:16:14","memberName":"mulDivRoundingUp","nodeType":"MemberAccess","referencedDeclaration":5433,"src":"3682:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3682:79:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3655:106:14"},{"expression":{"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2934,"name":"withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"3769:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2935,"name":"algebraFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"3787:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3769:34:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2937,"nodeType":"ExpressionStatement","src":"3769:34:14"},{"expression":{"arguments":[{"id":2941,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"3837:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2942,"name":"_algebraFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"3844:19:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2943,"name":"algebraFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"3865:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2938,"name":"SafeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"3811:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeTransfer_$5474_$","typeString":"type(library SafeTransfer)"}},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3824:12:14","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":5473,"src":"3811:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3811:71:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2945,"nodeType":"ExpressionStatement","src":"3811:71:14"},{"eventCall":{"arguments":[{"id":2947,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"3919:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2948,"name":"_algebraFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"3926:19:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2949,"name":"algebraFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"3947:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2946,"name":"AlgebraTokensWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"3895:23:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3895:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2951,"nodeType":"EmitStatement","src":"3890:74:14"}]}},{"expression":{"arguments":[{"id":2957,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"4003:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2958,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"4010:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2959,"name":"withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"4014:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2954,"name":"SafeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"3977:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeTransfer_$5474_$","typeString":"type(library SafeTransfer)"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3990:12:14","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":5473,"src":"3977:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3977:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2961,"nodeType":"ExpressionStatement","src":"3977:52:14"},{"eventCall":{"arguments":[{"id":2963,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"4057:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2964,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"4064:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2965,"name":"withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"4068:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2962,"name":"TokensWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"4040:16:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4040:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2967,"nodeType":"EmitStatement","src":"4035:48:14"}]},"id":2969,"implemented":true,"kind":"function","modifiers":[],"name":"_withdraw","nameLocation":"3472:9:14","nodeType":"FunctionDefinition","parameters":{"id":2916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2907,"mutability":"mutable","name":"token","nameLocation":"3490:5:14","nodeType":"VariableDeclaration","scope":2969,"src":"3482:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2906,"name":"address","nodeType":"ElementaryTypeName","src":"3482:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2909,"mutability":"mutable","name":"to","nameLocation":"3505:2:14","nodeType":"VariableDeclaration","scope":2969,"src":"3497:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2908,"name":"address","nodeType":"ElementaryTypeName","src":"3497:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2911,"mutability":"mutable","name":"amount","nameLocation":"3517:6:14","nodeType":"VariableDeclaration","scope":2969,"src":"3509:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2910,"name":"uint256","nodeType":"ElementaryTypeName","src":"3509:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2913,"mutability":"mutable","name":"_algebraFee","nameLocation":"3532:11:14","nodeType":"VariableDeclaration","scope":2969,"src":"3525:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2912,"name":"uint16","nodeType":"ElementaryTypeName","src":"3525:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2915,"mutability":"mutable","name":"_algebraFeeReceiver","nameLocation":"3553:19:14","nodeType":"VariableDeclaration","scope":2969,"src":"3545:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2914,"name":"address","nodeType":"ElementaryTypeName","src":"3545:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3481:92:14"},"returnParameters":{"id":2917,"nodeType":"ParameterList","parameters":[],"src":"3582:0:14"},"scope":3179,"src":"3463:625:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[5123],"body":{"id":3006,"nodeType":"Block","src":"4288:380:14","statements":[{"expression":{"arguments":[{"id":2979,"name":"hasNewAlgebraFeeProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"4302:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e6f742070726f706f736564","id":2980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4328:14:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_61f4bfef26a944a0b3efb8b18eef7c8c5bd11fc7694112fa9edb2c79b76af2f9","typeString":"literal_string \"not proposed\""},"value":"not proposed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_61f4bfef26a944a0b3efb8b18eef7c8c5bd11fc7694112fa9edb2c79b76af2f9","typeString":"literal_string \"not proposed\""}],"id":2978,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4294:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2982,"nodeType":"ExpressionStatement","src":"4294:49:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2984,"name":"newAlgebraFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"4357:13:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2985,"name":"proposedNewAlgebraFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"4374:21:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"4357:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c6964206e657720666565","id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4397:17:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2468adb69dd1331d1c2924d5aa5b8659fa02c298a865a94acf70db5fb253ec8","typeString":"literal_string \"invalid new fee\""},"value":"invalid new fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2468adb69dd1331d1c2924d5aa5b8659fa02c298a865a94acf70db5fb253ec8","typeString":"literal_string \"invalid new fee\""}],"id":2983,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4349:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4349:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2989,"nodeType":"ExpressionStatement","src":"4349:66:14"},{"expression":{"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2990,"name":"algebraFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"4533:10:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2991,"name":"newAlgebraFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"4546:13:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"4533:26:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":2993,"nodeType":"ExpressionStatement","src":"4533:26:14"},{"expression":{"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2994,"name":"proposedNewAlgebraFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"4566:21:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2995,"name":"hasNewAlgebraFeeProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"4589:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2996,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4565:49:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_bool_$","typeString":"tuple(uint16,bool)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"hexValue":"30","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4618:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4621:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"id":2999,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4617:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_bool_$","typeString":"tuple(int_const 0,bool)"}},"src":"4565:62:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3001,"nodeType":"ExpressionStatement","src":"4565:62:14"},{"eventCall":{"arguments":[{"id":3003,"name":"newAlgebraFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"4649:13:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":3002,"name":"AlgebraFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"4638:10:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$returns$__$","typeString":"function (uint16)"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4638:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3005,"nodeType":"EmitStatement","src":"4633:30:14"}]},"documentation":{"id":2970,"nodeType":"StructuredDocumentation","src":"4149:38:14","text":"@inheritdoc IAlgebraCommunityVault"},"functionSelector":"ff3c43e1","id":3007,"implemented":true,"kind":"function","modifiers":[{"id":2976,"kind":"modifierInvocation","modifierName":{"id":2975,"name":"onlyAdministrator","nameLocations":["4270:17:14"],"nodeType":"IdentifierPath","referencedDeclaration":2732,"src":"4270:17:14"},"nodeType":"ModifierInvocation","src":"4270:17:14"}],"name":"acceptAlgebraFeeChangeProposal","nameLocation":"4199:30:14","nodeType":"FunctionDefinition","overrides":{"id":2974,"nodeType":"OverrideSpecifier","overrides":[],"src":"4261:8:14"},"parameters":{"id":2973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2972,"mutability":"mutable","name":"newAlgebraFee","nameLocation":"4237:13:14","nodeType":"VariableDeclaration","scope":3007,"src":"4230:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2971,"name":"uint16","nodeType":"ElementaryTypeName","src":"4230:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4229:22:14"},"returnParameters":{"id":2977,"nodeType":"ParameterList","parameters":[],"src":"4288:0:14"},"scope":3179,"src":"4190:478:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5129],"body":{"id":3039,"nodeType":"Block","src":"4818:227:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3017,"name":"newCommunityFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"4832:23:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4867:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4859:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3018,"name":"address","nodeType":"ElementaryTypeName","src":"4859:7:14","typeDescriptions":{}}},"id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4859:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4832:37:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3016,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4824:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4824:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3024,"nodeType":"ExpressionStatement","src":"4824:46:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3026,"name":"newCommunityFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"4884:23:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3027,"name":"communityFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"4911:20:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4884:47:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3025,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4876:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4876:56:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3030,"nodeType":"ExpressionStatement","src":"4876:56:14"},{"expression":{"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3031,"name":"communityFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"4938:20:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3032,"name":"newCommunityFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"4961:23:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4938:46:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3034,"nodeType":"ExpressionStatement","src":"4938:46:14"},{"eventCall":{"arguments":[{"id":3036,"name":"newCommunityFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"5016:23:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3035,"name":"CommunityFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5096,"src":"4995:20:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4995:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3038,"nodeType":"EmitStatement","src":"4990:50:14"}]},"documentation":{"id":3008,"nodeType":"StructuredDocumentation","src":"4672:38:14","text":"@inheritdoc IAlgebraCommunityVault"},"functionSelector":"b5f680ae","id":3040,"implemented":true,"kind":"function","modifiers":[{"id":3014,"kind":"modifierInvocation","modifierName":{"id":3013,"name":"onlyAdministrator","nameLocations":["4800:17:14"],"nodeType":"IdentifierPath","referencedDeclaration":2732,"src":"4800:17:14"},"nodeType":"ModifierInvocation","src":"4800:17:14"}],"name":"changeCommunityFeeReceiver","nameLocation":"4722:26:14","nodeType":"FunctionDefinition","overrides":{"id":3012,"nodeType":"OverrideSpecifier","overrides":[],"src":"4791:8:14"},"parameters":{"id":3011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"newCommunityFeeReceiver","nameLocation":"4757:23:14","nodeType":"VariableDeclaration","scope":3040,"src":"4749:31:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3009,"name":"address","nodeType":"ElementaryTypeName","src":"4749:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4748:33:14"},"returnParameters":{"id":3015,"nodeType":"ParameterList","parameters":[],"src":"4818:0:14"},"scope":3179,"src":"4713:332:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5135],"body":{"id":3057,"nodeType":"Block","src":"5255:118:14","statements":[{"expression":{"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3049,"name":"_pendingAlgebraFeeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"5261:25:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3050,"name":"_newAlgebraFeeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"5289:21:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5261:49:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3052,"nodeType":"ExpressionStatement","src":"5261:49:14"},{"eventCall":{"arguments":[{"id":3054,"name":"_newAlgebraFeeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"5346:21:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3053,"name":"PendingAlgebraFeeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"5321:24:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3056,"nodeType":"EmitStatement","src":"5316:52:14"}]},"documentation":{"id":3041,"nodeType":"StructuredDocumentation","src":"5104:38:14","text":"@inheritdoc IAlgebraCommunityVault"},"functionSelector":"50eea0c8","id":3058,"implemented":true,"kind":"function","modifiers":[{"id":3047,"kind":"modifierInvocation","modifierName":{"id":3046,"name":"onlyAlgebraFeeManager","nameLocations":["5233:21:14"],"nodeType":"IdentifierPath","referencedDeclaration":2765,"src":"5233:21:14"},"nodeType":"ModifierInvocation","src":"5233:21:14"}],"name":"transferAlgebraFeeManagerRole","nameLocation":"5154:29:14","nodeType":"FunctionDefinition","overrides":{"id":3045,"nodeType":"OverrideSpecifier","overrides":[],"src":"5224:8:14"},"parameters":{"id":3044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3043,"mutability":"mutable","name":"_newAlgebraFeeManager","nameLocation":"5192:21:14","nodeType":"VariableDeclaration","scope":3058,"src":"5184:29:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3042,"name":"address","nodeType":"ElementaryTypeName","src":"5184:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5183:31:14"},"returnParameters":{"id":3048,"nodeType":"ParameterList","parameters":[],"src":"5255:0:14"},"scope":3179,"src":"5145:228:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5139],"body":{"id":3087,"nodeType":"Block","src":"5475:178:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3064,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5489:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5493:6:14","memberName":"sender","nodeType":"MemberAccess","src":"5489:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3066,"name":"_pendingAlgebraFeeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"5503:25:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5489:39:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3063,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5481:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5481:48:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3069,"nodeType":"ExpressionStatement","src":"5481:48:14"},{"expression":{"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3070,"name":"_pendingAlgebraFeeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"5536:25:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3071,"name":"algebraFeeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"5563:17:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3072,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"5535:46:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"arguments":[{"hexValue":"30","id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5593:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5585:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3073,"name":"address","nodeType":"ElementaryTypeName","src":"5585:7:14","typeDescriptions":{}}},"id":3076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5585:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3077,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5597:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5601:6:14","memberName":"sender","nodeType":"MemberAccess","src":"5597:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3079,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5584:24:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"src":"5535:73:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3081,"nodeType":"ExpressionStatement","src":"5535:73:14"},{"eventCall":{"arguments":[{"expression":{"id":3083,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5637:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5641:6:14","memberName":"sender","nodeType":"MemberAccess","src":"5637:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3082,"name":"AlgebraFeeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"5619:17:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5619:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3086,"nodeType":"EmitStatement","src":"5614:34:14"}]},"documentation":{"id":3059,"nodeType":"StructuredDocumentation","src":"5377:38:14","text":"@inheritdoc IAlgebraCommunityVault"},"functionSelector":"ad6129ac","id":3088,"implemented":true,"kind":"function","modifiers":[],"name":"acceptAlgebraFeeManagerRole","nameLocation":"5427:27:14","nodeType":"FunctionDefinition","overrides":{"id":3061,"nodeType":"OverrideSpecifier","overrides":[],"src":"5466:8:14"},"parameters":{"id":3060,"nodeType":"ParameterList","parameters":[],"src":"5454:2:14"},"returnParameters":{"id":3062,"nodeType":"ParameterList","parameters":[],"src":"5475:0:14"},"scope":3179,"src":"5418:235:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5145],"body":{"id":3125,"nodeType":"Block","src":"5793:267:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3098,"name":"newAlgebraFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"5807:13:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3099,"name":"ALGEBRA_FEE_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"5824:23:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"5807:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3097,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5799:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3102,"nodeType":"ExpressionStatement","src":"5799:49:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3104,"name":"newAlgebraFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"5862:13:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3105,"name":"proposedNewAlgebraFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"5879:21:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"5862:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3107,"name":"newAlgebraFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"5904:13:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3108,"name":"algebraFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"5921:10:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"5904:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5862:69:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3103,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5854:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5854:78:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3112,"nodeType":"ExpressionStatement","src":"5854:78:14"},{"expression":{"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3113,"name":"proposedNewAlgebraFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"5939:21:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3114,"name":"hasNewAlgebraFeeProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"5962:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3115,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"5938:49:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_bool_$","typeString":"tuple(uint16,bool)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3116,"name":"newAlgebraFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"5991:13:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"hexValue":"74727565","id":3117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6006:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"id":3118,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5990:21:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_bool_$","typeString":"tuple(uint16,bool)"}},"src":"5938:73:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3120,"nodeType":"ExpressionStatement","src":"5938:73:14"},{"eventCall":{"arguments":[{"id":3122,"name":"newAlgebraFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"6041:13:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":3121,"name":"AlgebraFeeProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"6022:18:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$returns$__$","typeString":"function (uint16)"}},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6022:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3124,"nodeType":"EmitStatement","src":"6017:38:14"}]},"documentation":{"id":3089,"nodeType":"StructuredDocumentation","src":"5657:38:14","text":"@inheritdoc IAlgebraCommunityVault"},"functionSelector":"d9fb4353","id":3126,"implemented":true,"kind":"function","modifiers":[{"id":3095,"kind":"modifierInvocation","modifierName":{"id":3094,"name":"onlyAlgebraFeeManager","nameLocations":["5771:21:14"],"nodeType":"IdentifierPath","referencedDeclaration":2765,"src":"5771:21:14"},"nodeType":"ModifierInvocation","src":"5771:21:14"}],"name":"proposeAlgebraFeeChange","nameLocation":"5707:23:14","nodeType":"FunctionDefinition","overrides":{"id":3093,"nodeType":"OverrideSpecifier","overrides":[],"src":"5762:8:14"},"parameters":{"id":3092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"newAlgebraFee","nameLocation":"5738:13:14","nodeType":"VariableDeclaration","scope":3126,"src":"5731:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3090,"name":"uint16","nodeType":"ElementaryTypeName","src":"5731:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5730:22:14"},"returnParameters":{"id":3096,"nodeType":"ParameterList","parameters":[],"src":"5793:0:14"},"scope":3179,"src":"5698:362:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5149],"body":{"id":3144,"nodeType":"Block","src":"6187:110:14","statements":[{"expression":{"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3133,"name":"proposedNewAlgebraFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"6194:21:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3134,"name":"hasNewAlgebraFeeProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"6217:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3135,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"6193:49:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_bool_$","typeString":"tuple(uint16,bool)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"hexValue":"30","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6246:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6249:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"id":3138,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6245:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_bool_$","typeString":"tuple(int_const 0,bool)"}},"src":"6193:62:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3140,"nodeType":"ExpressionStatement","src":"6193:62:14"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3141,"name":"CancelAlgebraFeeProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5081,"src":"6266:24:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6266:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3143,"nodeType":"EmitStatement","src":"6261:31:14"}]},"documentation":{"id":3127,"nodeType":"StructuredDocumentation","src":"6064:38:14","text":"@inheritdoc IAlgebraCommunityVault"},"functionSelector":"d17bc783","id":3145,"implemented":true,"kind":"function","modifiers":[{"id":3131,"kind":"modifierInvocation","modifierName":{"id":3130,"name":"onlyAlgebraFeeManager","nameLocations":["6165:21:14"],"nodeType":"IdentifierPath","referencedDeclaration":2765,"src":"6165:21:14"},"nodeType":"ModifierInvocation","src":"6165:21:14"}],"name":"cancelAlgebraFeeChangeProposal","nameLocation":"6114:30:14","nodeType":"FunctionDefinition","overrides":{"id":3129,"nodeType":"OverrideSpecifier","overrides":[],"src":"6156:8:14"},"parameters":{"id":3128,"nodeType":"ParameterList","parameters":[],"src":"6144:2:14"},"returnParameters":{"id":3132,"nodeType":"ParameterList","parameters":[],"src":"6187:0:14"},"scope":3179,"src":"6105:192:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5155],"body":{"id":3177,"nodeType":"Block","src":"6447:213:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3155,"name":"newAlgebraFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"6461:21:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6494:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6486:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3156,"name":"address","nodeType":"ElementaryTypeName","src":"6486:7:14","typeDescriptions":{}}},"id":3159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6486:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6461:35:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3154,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6453:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6453:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3162,"nodeType":"ExpressionStatement","src":"6453:44:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3164,"name":"newAlgebraFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"6511:21:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3165,"name":"algebraFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"6536:18:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6511:43:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3163,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6503:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6503:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3168,"nodeType":"ExpressionStatement","src":"6503:52:14"},{"expression":{"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3169,"name":"algebraFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"6561:18:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3170,"name":"newAlgebraFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"6582:21:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6561:42:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3172,"nodeType":"ExpressionStatement","src":"6561:42:14"},{"eventCall":{"arguments":[{"id":3174,"name":"newAlgebraFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"6633:21:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3173,"name":"AlgebraFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5068,"src":"6614:18:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6614:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3176,"nodeType":"EmitStatement","src":"6609:46:14"}]},"documentation":{"id":3146,"nodeType":"StructuredDocumentation","src":"6301:38:14","text":"@inheritdoc IAlgebraCommunityVault"},"functionSelector":"48a50fcf","id":3178,"implemented":true,"kind":"function","modifiers":[{"id":3152,"kind":"modifierInvocation","modifierName":{"id":3151,"name":"onlyAlgebraFeeManager","nameLocations":["6425:21:14"],"nodeType":"IdentifierPath","referencedDeclaration":2765,"src":"6425:21:14"},"nodeType":"ModifierInvocation","src":"6425:21:14"}],"name":"changeAlgebraFeeReceiver","nameLocation":"6351:24:14","nodeType":"FunctionDefinition","overrides":{"id":3150,"nodeType":"OverrideSpecifier","overrides":[],"src":"6416:8:14"},"parameters":{"id":3149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3148,"mutability":"mutable","name":"newAlgebraFeeReceiver","nameLocation":"6384:21:14","nodeType":"VariableDeclaration","scope":3178,"src":"6376:29:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3147,"name":"address","nodeType":"ElementaryTypeName","src":"6376:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6375:31:14"},"returnParameters":{"id":3153,"nodeType":"ParameterList","parameters":[],"src":"6447:0:14"},"scope":3179,"src":"6342:318:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3180,"src":"432:6230:14","usedErrors":[4633],"usedEvents":[5054,5063,5068,5073,5078,5081,5086,5091,5096]}],"src":"37:6626:14"},"id":14},"contracts/AlgebraFactory.sol":{"ast":{"absolutePath":"contracts/AlgebraFactory.sol","exportedSymbols":{"AccessControl":[315],"AccessControlEnumerable":[440],"AlgebraCommunityVault":[3179],"AlgebraFactory":[4071],"Constants":[5239],"Context":[821],"ERC165":[1074],"EnumerableSet":[2670],"FullMath":[5446],"IAccessControl":[513],"IAccessControlEnumerable":[538],"IAlgebraCommunityVault":[5156],"IAlgebraFactory":[4338],"IAlgebraPluginFactory":[4422],"IAlgebraPool":[4360],"IAlgebraPoolActions":[4538],"IAlgebraPoolDeployer":[4390],"IAlgebraPoolErrors":[4640],"IAlgebraPoolEvents":[4782],"IAlgebraPoolImmutables":[4810],"IAlgebraPoolPermissionedActions":[4858],"IAlgebraPoolState":[5042],"IAlgebraVaultFactory":[5184],"IERC165":[1086],"Math":[1952],"Ownable":[651],"Ownable2Step":[734],"ReentrancyGuard":[799],"SafeTransfer":[5474],"SignedMath":[2057],"Strings":[1050]},"id":4072,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":3181,"literals":["solidity","=","0.8",".20"],"nodeType":"PragmaDirective","src":"37:24:15"},{"absolutePath":"contracts/libraries/Constants.sol","file":"./libraries/Constants.sol","id":3182,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4072,"sourceUnit":5240,"src":"63:35:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAlgebraFactory.sol","file":"./interfaces/IAlgebraFactory.sol","id":3183,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4072,"sourceUnit":4339,"src":"100:42:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAlgebraPool.sol","file":"./interfaces/IAlgebraPool.sol","id":3184,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4072,"sourceUnit":4361,"src":"143:39:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAlgebraPoolDeployer.sol","file":"./interfaces/IAlgebraPoolDeployer.sol","id":3185,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4072,"sourceUnit":4391,"src":"183:47:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/vault/IAlgebraVaultFactory.sol","file":"./interfaces/vault/IAlgebraVaultFactory.sol","id":3186,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4072,"sourceUnit":5185,"src":"231:53:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/plugin/IAlgebraPluginFactory.sol","file":"./interfaces/plugin/IAlgebraPluginFactory.sol","id":3187,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4072,"sourceUnit":4423,"src":"285:55:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/AlgebraCommunityVault.sol","file":"./AlgebraCommunityVault.sol","id":3188,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4072,"sourceUnit":3180,"src":"342:37:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable2Step.sol","file":"@openzeppelin/contracts/access/Ownable2Step.sol","id":3189,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4072,"sourceUnit":735,"src":"381:57:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","file":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","id":3190,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4072,"sourceUnit":441,"src":"439:68:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":3191,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4072,"sourceUnit":800,"src":"508:62:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3193,"name":"IAlgebraFactory","nameLocations":["717:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":4338,"src":"717:15:15"},"id":3194,"nodeType":"InheritanceSpecifier","src":"717:15:15"},{"baseName":{"id":3195,"name":"Ownable2Step","nameLocations":["734:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":734,"src":"734:12:15"},"id":3196,"nodeType":"InheritanceSpecifier","src":"734:12:15"},{"baseName":{"id":3197,"name":"AccessControlEnumerable","nameLocations":["748:23:15"],"nodeType":"IdentifierPath","referencedDeclaration":440,"src":"748:23:15"},"id":3198,"nodeType":"InheritanceSpecifier","src":"748:23:15"},{"baseName":{"id":3199,"name":"ReentrancyGuard","nameLocations":["773:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"773:15:15"},"id":3200,"nodeType":"InheritanceSpecifier","src":"773:15:15"}],"canonicalName":"AlgebraFactory","contractDependencies":[],"contractKind":"contract","documentation":{"id":3192,"nodeType":"StructuredDocumentation","src":"572:118:15","text":"@title Algebra factory\n @notice Is used to deploy pools and its plugins\n @dev Version: Algebra Integral 1.2"},"fullyImplemented":true,"id":4071,"linearizedBaseContracts":[4071,799,440,315,1074,1086,538,513,734,651,821,4338],"name":"AlgebraFactory","nameLocation":"699:14:15","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4145],"constant":true,"documentation":{"id":3201,"nodeType":"StructuredDocumentation","src":"793:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"b500a48b","id":3207,"mutability":"constant","name":"POOLS_ADMINISTRATOR_ROLE","nameLocation":"860:24:15","nodeType":"VariableDeclaration","overrides":{"id":3203,"nodeType":"OverrideSpecifier","overrides":[],"src":"851:8:15"},"scope":4071,"src":"827:92:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"827:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"504f4f4c535f41444d494e4953545241544f52","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"897:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b73ce166ead2f8e9add217713a7989e4edfba9625f71dfd2516204bb67ad3442","typeString":"literal_string \"POOLS_ADMINISTRATOR\""},"value":"POOLS_ADMINISTRATOR"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_b73ce166ead2f8e9add217713a7989e4edfba9625f71dfd2516204bb67ad3442","typeString":"literal_string \"POOLS_ADMINISTRATOR\""}],"id":3204,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"887:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"887:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"baseFunctions":[4151],"constant":true,"documentation":{"id":3208,"nodeType":"StructuredDocumentation","src":"976:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"07810754","id":3214,"mutability":"constant","name":"CUSTOM_POOL_DEPLOYER","nameLocation":"1043:20:15","nodeType":"VariableDeclaration","overrides":{"id":3210,"nodeType":"OverrideSpecifier","overrides":[],"src":"1034:8:15"},"scope":4071,"src":"1010:89:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1010:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"435553544f4d5f504f4f4c5f4445504c4f594552","id":3212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1076:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c9cf812513d9983585eb40fcfe6fd49fbb6a45815663ec33b30a6c6c7de3683b","typeString":"literal_string \"CUSTOM_POOL_DEPLOYER\""},"value":"CUSTOM_POOL_DEPLOYER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c9cf812513d9983585eb40fcfe6fd49fbb6a45815663ec33b30a6c6c7de3683b","typeString":"literal_string \"CUSTOM_POOL_DEPLOYER\""}],"id":3211,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1066:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1066:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"baseFunctions":[4173],"constant":false,"documentation":{"id":3215,"nodeType":"StructuredDocumentation","src":"1104:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"3119049a","id":3218,"mutability":"immutable","name":"poolDeployer","nameLocation":"1172:12:15","nodeType":"VariableDeclaration","overrides":{"id":3217,"nodeType":"OverrideSpecifier","overrides":[],"src":"1163:8:15"},"scope":4071,"src":"1138:46:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3216,"name":"address","nodeType":"ElementaryTypeName","src":"1138:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[4179],"constant":false,"documentation":{"id":3219,"nodeType":"StructuredDocumentation","src":"1189:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"2f8a39dd","id":3222,"mutability":"mutable","name":"defaultCommunityFee","nameLocation":"1246:19:15","nodeType":"VariableDeclaration","overrides":{"id":3221,"nodeType":"OverrideSpecifier","overrides":[],"src":"1237:8:15"},"scope":4071,"src":"1223:42:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3220,"name":"uint16","nodeType":"ElementaryTypeName","src":"1223:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"public"},{"baseFunctions":[4185],"constant":false,"documentation":{"id":3223,"nodeType":"StructuredDocumentation","src":"1270:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"5a6c72d0","id":3226,"mutability":"mutable","name":"defaultFee","nameLocation":"1327:10:15","nodeType":"VariableDeclaration","overrides":{"id":3225,"nodeType":"OverrideSpecifier","overrides":[],"src":"1318:8:15"},"scope":4071,"src":"1304:33:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3224,"name":"uint16","nodeType":"ElementaryTypeName","src":"1304:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"public"},{"baseFunctions":[4191],"constant":false,"documentation":{"id":3227,"nodeType":"StructuredDocumentation","src":"1342:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"29bc3446","id":3230,"mutability":"mutable","name":"defaultTickspacing","nameLocation":"1398:18:15","nodeType":"VariableDeclaration","overrides":{"id":3229,"nodeType":"OverrideSpecifier","overrides":[],"src":"1389:8:15"},"scope":4071,"src":"1376:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3228,"name":"int24","nodeType":"ElementaryTypeName","src":"1376:5:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"public"},{"baseFunctions":[4271],"constant":false,"documentation":{"id":3231,"nodeType":"StructuredDocumentation","src":"1421:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"084bfff9","id":3234,"mutability":"mutable","name":"renounceOwnershipStartTimestamp","nameLocation":"1479:31:15","nodeType":"VariableDeclaration","overrides":{"id":3233,"nodeType":"OverrideSpecifier","overrides":[],"src":"1470:8:15"},"scope":4071,"src":"1455:55:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3232,"name":"uint256","nodeType":"ElementaryTypeName","src":"1455:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"documentation":{"id":3235,"nodeType":"StructuredDocumentation","src":"1515:65:15","text":"@dev time delay before ownership renouncement can be finished"},"id":3238,"mutability":"constant","name":"RENOUNCE_OWNERSHIP_DELAY","nameLocation":"1608:24:15","nodeType":"VariableDeclaration","scope":4071,"src":"1583:58:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3236,"name":"uint256","nodeType":"ElementaryTypeName","src":"1583:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1635:6:15","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"visibility":"private"},{"baseFunctions":[4198],"constant":false,"documentation":{"id":3239,"nodeType":"StructuredDocumentation","src":"1646:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"d0ad2792","id":3242,"mutability":"mutable","name":"defaultPluginFactory","nameLocation":"1709:20:15","nodeType":"VariableDeclaration","scope":4071,"src":"1680:49:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraPluginFactory_$4422","typeString":"contract IAlgebraPluginFactory"},"typeName":{"id":3241,"nodeType":"UserDefinedTypeName","pathNode":{"id":3240,"name":"IAlgebraPluginFactory","nameLocations":["1680:21:15"],"nodeType":"IdentifierPath","referencedDeclaration":4422,"src":"1680:21:15"},"referencedDeclaration":4422,"src":"1680:21:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraPluginFactory_$4422","typeString":"contract IAlgebraPluginFactory"}},"visibility":"public"},{"baseFunctions":[4205],"constant":false,"documentation":{"id":3243,"nodeType":"StructuredDocumentation","src":"1734:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"d8a06f73","id":3246,"mutability":"mutable","name":"vaultFactory","nameLocation":"1796:12:15","nodeType":"VariableDeclaration","scope":4071,"src":"1768:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraVaultFactory_$5184","typeString":"contract IAlgebraVaultFactory"},"typeName":{"id":3245,"nodeType":"UserDefinedTypeName","pathNode":{"id":3244,"name":"IAlgebraVaultFactory","nameLocations":["1768:20:15"],"nodeType":"IdentifierPath","referencedDeclaration":5184,"src":"1768:20:15"},"referencedDeclaration":5184,"src":"1768:20:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraVaultFactory_$5184","typeString":"contract IAlgebraVaultFactory"}},"visibility":"public"},{"baseFunctions":[4247],"constant":false,"documentation":{"id":3247,"nodeType":"StructuredDocumentation","src":"1813:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"d9a641e1","id":3254,"mutability":"mutable","name":"poolByPair","nameLocation":"1911:10:15","nodeType":"VariableDeclaration","overrides":{"id":3253,"nodeType":"OverrideSpecifier","overrides":[],"src":"1902:8:15"},"scope":4071,"src":"1847:74:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"},"typeName":{"id":3252,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3248,"name":"address","nodeType":"ElementaryTypeName","src":"1855:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1847:47:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3251,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3249,"name":"address","nodeType":"ElementaryTypeName","src":"1874:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1866:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3250,"name":"address","nodeType":"ElementaryTypeName","src":"1885:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}}},"visibility":"public"},{"baseFunctions":[4259],"constant":false,"documentation":{"id":3255,"nodeType":"StructuredDocumentation","src":"1926:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"23da36cc","id":3264,"mutability":"mutable","name":"customPoolByPair","nameLocation":"2044:16:15","nodeType":"VariableDeclaration","overrides":{"id":3263,"nodeType":"OverrideSpecifier","overrides":[],"src":"2035:8:15"},"scope":4071,"src":"1960:100:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => address)))"},"typeName":{"id":3262,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3256,"name":"address","nodeType":"ElementaryTypeName","src":"1968:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1960:67:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => address)))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3261,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3257,"name":"address","nodeType":"ElementaryTypeName","src":"1987:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1979:47:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3260,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3258,"name":"address","nodeType":"ElementaryTypeName","src":"2006:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1998:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3259,"name":"address","nodeType":"ElementaryTypeName","src":"2017:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}}}},"visibility":"public"},{"baseFunctions":[4265],"constant":true,"documentation":{"id":3265,"nodeType":"StructuredDocumentation","src":"2065:129:15","text":"@inheritdoc IAlgebraFactory\n @dev keccak256 of AlgebraPool init bytecode. Used to compute pool address deterministically"},"functionSelector":"dc6fd8ab","id":3268,"mutability":"constant","name":"POOL_INIT_CODE_HASH","nameLocation":"2221:19:15","nodeType":"VariableDeclaration","scope":4071,"src":"2197:112:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3266,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2197:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862336663303962653565623433336439396231656338396664383433356161663566666561373563313837396531393032386161323431346131346233633835","id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2243:66:15","typeDescriptions":{"typeIdentifier":"t_rational_81409312604809310685274364585665150814529260136625784893147738473345971862661_by_1","typeString":"int_const 8140...(69 digits omitted)...2661"},"value":"0xb3fc09be5eb433d99b1ec89fd8435aaf5ffea75c1879e19028aa2414a14b3c85"},"visibility":"public"},{"body":{"id":3306,"nodeType":"Block","src":"2349:304:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3274,"name":"_poolDeployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"2363:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2388:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2380:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3275,"name":"address","nodeType":"ElementaryTypeName","src":"2380:7:15","typeDescriptions":{}}},"id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2380:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2363:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3273,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2355:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3281,"nodeType":"ExpressionStatement","src":"2355:36:15"},{"expression":{"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3282,"name":"poolDeployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"2397:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3283,"name":"_poolDeployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"2412:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2397:28:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3285,"nodeType":"ExpressionStatement","src":"2397:28:15"},{"expression":{"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3286,"name":"defaultTickspacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"2431:18:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3287,"name":"Constants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"2452:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Constants_$5239_$","typeString":"type(library Constants)"}},"id":3288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2462:25:15","memberName":"INIT_DEFAULT_TICK_SPACING","nodeType":"MemberAccess","referencedDeclaration":5215,"src":"2452:35:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"2431:56:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":3290,"nodeType":"ExpressionStatement","src":"2431:56:15"},{"expression":{"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3291,"name":"defaultFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"2493:10:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3292,"name":"Constants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"2506:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Constants_$5239_$","typeString":"type(library Constants)"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2516:16:15","memberName":"INIT_DEFAULT_FEE","nodeType":"MemberAccess","referencedDeclaration":5209,"src":"2506:26:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"2493:39:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":3295,"nodeType":"ExpressionStatement","src":"2493:39:15"},{"eventCall":{"arguments":[{"expression":{"id":3297,"name":"Constants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"2563:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Constants_$5239_$","typeString":"type(library Constants)"}},"id":3298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2573:25:15","memberName":"INIT_DEFAULT_TICK_SPACING","nodeType":"MemberAccess","referencedDeclaration":5215,"src":"2563:35:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"id":3296,"name":"DefaultTickspacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"2544:18:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_int24_$returns$__$","typeString":"function (int24)"}},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2544:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3300,"nodeType":"EmitStatement","src":"2539:60:15"},{"eventCall":{"arguments":[{"expression":{"id":3302,"name":"Constants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"2621:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Constants_$5239_$","typeString":"type(library Constants)"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2631:16:15","memberName":"INIT_DEFAULT_FEE","nodeType":"MemberAccess","referencedDeclaration":5209,"src":"2621:26:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":3301,"name":"DefaultFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"2610:10:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$returns$__$","typeString":"function (uint16)"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2610:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3305,"nodeType":"EmitStatement","src":"2605:43:15"}]},"id":3307,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"_poolDeployer","nameLocation":"2334:13:15","nodeType":"VariableDeclaration","scope":3307,"src":"2326:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3269,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2325:23:15"},"returnParameters":{"id":3272,"nodeType":"ParameterList","parameters":[],"src":"2349:0:15"},"scope":4071,"src":"2314:339:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[579,4167],"body":{"id":3320,"nodeType":"Block","src":"2773:31:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3316,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2786:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AlgebraFactory_$4071_$","typeString":"type(contract super AlgebraFactory)"}},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2792:5:15","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":579,"src":"2786:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2786:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3315,"id":3319,"nodeType":"Return","src":"2779:20:15"}]},"documentation":{"id":3308,"nodeType":"StructuredDocumentation","src":"2657:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"8da5cb5b","id":3321,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2700:5:15","nodeType":"FunctionDefinition","overrides":{"id":3312,"nodeType":"OverrideSpecifier","overrides":[{"id":3310,"name":"IAlgebraFactory","nameLocations":["2729:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":4338,"src":"2729:15:15"},{"id":3311,"name":"Ownable","nameLocations":["2746:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"2746:7:15"}],"src":"2720:34:15"},"parameters":{"id":3309,"nodeType":"ParameterList","parameters":[],"src":"2705:2:15"},"returnParameters":{"id":3315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3321,"src":"2764:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3313,"name":"address","nodeType":"ElementaryTypeName","src":"2764:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2763:9:15"},"scope":4071,"src":"2691:113:15","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[4161],"body":{"id":3344,"nodeType":"Block","src":"2933:70:15","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3332,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[3321],"referencedDeclaration":3321,"src":"2947:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2947:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3334,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"2958:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2947:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3338,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"2983:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3339,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"2989:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3336,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2969:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AlgebraFactory_$4071_$","typeString":"type(contract super AlgebraFactory)"}},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2975:7:15","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":79,"src":"2969:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2969:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2947:50:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2946:52:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3331,"id":3343,"nodeType":"Return","src":"2939:59:15"}]},"documentation":{"id":3322,"nodeType":"StructuredDocumentation","src":"2808:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"e8ae2b69","id":3345,"implemented":true,"kind":"function","modifiers":[],"name":"hasRoleOrOwner","nameLocation":"2851:14:15","nodeType":"FunctionDefinition","overrides":{"id":3328,"nodeType":"OverrideSpecifier","overrides":[],"src":"2909:8:15"},"parameters":{"id":3327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3324,"mutability":"mutable","name":"role","nameLocation":"2874:4:15","nodeType":"VariableDeclaration","scope":3345,"src":"2866:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2866:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3326,"mutability":"mutable","name":"account","nameLocation":"2888:7:15","nodeType":"VariableDeclaration","scope":3345,"src":"2880:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3325,"name":"address","nodeType":"ElementaryTypeName","src":"2880:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2865:31:15"},"returnParameters":{"id":3331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3345,"src":"2927:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3329,"name":"bool","nodeType":"ElementaryTypeName","src":"2927:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2926:6:15"},"scope":4071,"src":"2842:161:15","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[4215],"body":{"id":3361,"nodeType":"Block","src":"3164:71:15","statements":[{"expression":{"components":[{"id":3356,"name":"defaultCommunityFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"3178:19:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3357,"name":"defaultTickspacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"3199:18:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":3358,"name":"defaultFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"3219:10:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":3359,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3177:53:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_int24_$_t_uint16_$","typeString":"tuple(uint16,int24,uint16)"}},"functionReturnParameters":3355,"id":3360,"nodeType":"Return","src":"3170:60:15"}]},"documentation":{"id":3346,"nodeType":"StructuredDocumentation","src":"3007:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"25b355d6","id":3362,"implemented":true,"kind":"function","modifiers":[],"name":"defaultConfigurationForPool","nameLocation":"3050:27:15","nodeType":"FunctionDefinition","overrides":{"id":3348,"nodeType":"OverrideSpecifier","overrides":[],"src":"3094:8:15"},"parameters":{"id":3347,"nodeType":"ParameterList","parameters":[],"src":"3077:2:15"},"returnParameters":{"id":3355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3350,"mutability":"mutable","name":"communityFee","nameLocation":"3119:12:15","nodeType":"VariableDeclaration","scope":3362,"src":"3112:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3349,"name":"uint16","nodeType":"ElementaryTypeName","src":"3112:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3352,"mutability":"mutable","name":"tickSpacing","nameLocation":"3139:11:15","nodeType":"VariableDeclaration","scope":3362,"src":"3133:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3351,"name":"int24","nodeType":"ElementaryTypeName","src":"3133:5:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3354,"mutability":"mutable","name":"fee","nameLocation":"3159:3:15","nodeType":"VariableDeclaration","scope":3362,"src":"3152:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3353,"name":"uint16","nodeType":"ElementaryTypeName","src":"3152:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3111:52:15"},"scope":4071,"src":"3041:194:15","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[4225],"body":{"id":3400,"nodeType":"Block","src":"3377:155:15","statements":[{"expression":{"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3373,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"3383:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"hexValue":"ff","id":3383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"3441:7:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9","typeString":"literal_string hex\"ff\""}},{"id":3384,"name":"poolDeployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"3450:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":3388,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"3485:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3389,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"3493:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3386,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3474:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3478:6:15","memberName":"encode","nodeType":"MemberAccess","src":"3474:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3474:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3385,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3464:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3464:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3392,"name":"POOL_INIT_CODE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"3503:19:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9","typeString":"literal_string hex\"ff\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3381,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3424:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3428:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"3424:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3424:99:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3380,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3414:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3414:110:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3378,"name":"uint256","nodeType":"ElementaryTypeName","src":"3406:7:15","typeDescriptions":{}}},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:119:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3376,"name":"uint160","nodeType":"ElementaryTypeName","src":"3398:7:15","typeDescriptions":{}}},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:128:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3390:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3374,"name":"address","nodeType":"ElementaryTypeName","src":"3390:7:15","typeDescriptions":{}}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3390:137:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3383:144:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3399,"nodeType":"ExpressionStatement","src":"3383:144:15"}]},"documentation":{"id":3363,"nodeType":"StructuredDocumentation","src":"3239:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"d8ed2241","id":3401,"implemented":true,"kind":"function","modifiers":[],"name":"computePoolAddress","nameLocation":"3282:18:15","nodeType":"FunctionDefinition","overrides":{"id":3369,"nodeType":"OverrideSpecifier","overrides":[],"src":"3345:8:15"},"parameters":{"id":3368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3365,"mutability":"mutable","name":"token0","nameLocation":"3309:6:15","nodeType":"VariableDeclaration","scope":3401,"src":"3301:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3364,"name":"address","nodeType":"ElementaryTypeName","src":"3301:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3367,"mutability":"mutable","name":"token1","nameLocation":"3325:6:15","nodeType":"VariableDeclaration","scope":3401,"src":"3317:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3366,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3300:32:15"},"returnParameters":{"id":3372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3371,"mutability":"mutable","name":"pool","nameLocation":"3371:4:15","nodeType":"VariableDeclaration","scope":3401,"src":"3363:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3370,"name":"address","nodeType":"ElementaryTypeName","src":"3363:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3362:14:15"},"scope":4071,"src":"3273:259:15","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[4237],"body":{"id":3442,"nodeType":"Block","src":"3704:183:15","statements":[{"expression":{"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3414,"name":"customPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"3710:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"hexValue":"ff","id":3424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"3781:7:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9","typeString":"literal_string hex\"ff\""}},{"id":3425,"name":"poolDeployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"3790:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":3429,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"3825:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3430,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"3835:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3431,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"3843:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3427,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3814:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3818:6:15","memberName":"encode","nodeType":"MemberAccess","src":"3814:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3814:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3426,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3804:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3804:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3434,"name":"POOL_INIT_CODE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"3853:19:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9","typeString":"literal_string hex\"ff\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3422,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3764:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3768:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"3764:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3764:109:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3421,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3754:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3754:120:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3746:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3419,"name":"uint256","nodeType":"ElementaryTypeName","src":"3746:7:15","typeDescriptions":{}}},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3746:129:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3738:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3417,"name":"uint160","nodeType":"ElementaryTypeName","src":"3738:7:15","typeDescriptions":{}}},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3738:138:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3723:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3415,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:15","typeDescriptions":{}}},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3723:159:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3710:172:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3441,"nodeType":"ExpressionStatement","src":"3710:172:15"}]},"documentation":{"id":3402,"nodeType":"StructuredDocumentation","src":"3536:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"1ba89df4","id":3443,"implemented":true,"kind":"function","modifiers":[],"name":"computeCustomPoolAddress","nameLocation":"3579:24:15","nodeType":"FunctionDefinition","overrides":{"id":3410,"nodeType":"OverrideSpecifier","overrides":[],"src":"3666:8:15"},"parameters":{"id":3409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3404,"mutability":"mutable","name":"deployer","nameLocation":"3612:8:15","nodeType":"VariableDeclaration","scope":3443,"src":"3604:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3403,"name":"address","nodeType":"ElementaryTypeName","src":"3604:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3406,"mutability":"mutable","name":"token0","nameLocation":"3630:6:15","nodeType":"VariableDeclaration","scope":3443,"src":"3622:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3405,"name":"address","nodeType":"ElementaryTypeName","src":"3622:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3408,"mutability":"mutable","name":"token1","nameLocation":"3646:6:15","nodeType":"VariableDeclaration","scope":3443,"src":"3638:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3407,"name":"address","nodeType":"ElementaryTypeName","src":"3638:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3603:50:15"},"returnParameters":{"id":3413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3412,"mutability":"mutable","name":"customPool","nameLocation":"3692:10:15","nodeType":"VariableDeclaration","scope":3443,"src":"3684:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3411,"name":"address","nodeType":"ElementaryTypeName","src":"3684:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3683:20:15"},"scope":4071,"src":"3570:317:15","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[4283],"body":{"id":3470,"nodeType":"Block","src":"4052:75:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":3461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4085:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4077:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3459,"name":"address","nodeType":"ElementaryTypeName","src":"4077:7:15","typeDescriptions":{}}},"id":3462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4077:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3463,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4089:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4093:6:15","memberName":"sender","nodeType":"MemberAccess","src":"4089:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3465,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"4101:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3466,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"4109:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3467,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"4117:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3458,"name":"_createPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"4065:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (address,address,address,address,bytes memory) returns (address)"}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3457,"id":3469,"nodeType":"Return","src":"4058:64:15"}]},"documentation":{"id":3444,"nodeType":"StructuredDocumentation","src":"3891:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"321935c6","id":3471,"implemented":true,"kind":"function","modifiers":[{"id":3454,"kind":"modifierInvocation","modifierName":{"id":3453,"name":"nonReentrant","nameLocations":["4016:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":764,"src":"4016:12:15"},"nodeType":"ModifierInvocation","src":"4016:12:15"}],"name":"createPool","nameLocation":"3934:10:15","nodeType":"FunctionDefinition","overrides":{"id":3452,"nodeType":"OverrideSpecifier","overrides":[],"src":"4007:8:15"},"parameters":{"id":3451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3446,"mutability":"mutable","name":"tokenA","nameLocation":"3953:6:15","nodeType":"VariableDeclaration","scope":3471,"src":"3945:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3445,"name":"address","nodeType":"ElementaryTypeName","src":"3945:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3448,"mutability":"mutable","name":"tokenB","nameLocation":"3969:6:15","nodeType":"VariableDeclaration","scope":3471,"src":"3961:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3447,"name":"address","nodeType":"ElementaryTypeName","src":"3961:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3450,"mutability":"mutable","name":"data","nameLocation":"3992:4:15","nodeType":"VariableDeclaration","scope":3471,"src":"3977:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3449,"name":"bytes","nodeType":"ElementaryTypeName","src":"3977:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3944:53:15"},"returnParameters":{"id":3457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3456,"mutability":"mutable","name":"pool","nameLocation":"4046:4:15","nodeType":"VariableDeclaration","scope":3471,"src":"4038:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3455,"name":"address","nodeType":"ElementaryTypeName","src":"4038:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4037:14:15"},"scope":4071,"src":"3925:202:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4299],"body":{"id":3507,"nodeType":"Block","src":"4363:155:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3492,"name":"CUSTOM_POOL_DEPLOYER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"4385:20:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3493,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4407:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4411:6:15","memberName":"sender","nodeType":"MemberAccess","src":"4407:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3491,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"4377:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4377:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e60742063726561746520637573746f6d20706f6f6c73","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4420:27:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4923848de4258787551fdf161f1836f7adecfca5e0948f14f6ef0465d225420b","typeString":"literal_string \"Can`t create custom pools\""},"value":"Can`t create custom pools"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4923848de4258787551fdf161f1836f7adecfca5e0948f14f6ef0465d225420b","typeString":"literal_string \"Can`t create custom pools\""}],"id":3490,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4369:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4369:79:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3498,"nodeType":"ExpressionStatement","src":"4369:79:15"},{"expression":{"arguments":[{"id":3500,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"4473:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3501,"name":"creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"4483:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3502,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"4492:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3503,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"4500:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3504,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"4508:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3499,"name":"_createPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"4461:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (address,address,address,address,bytes memory) returns (address)"}},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4461:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3489,"id":3506,"nodeType":"Return","src":"4454:59:15"}]},"documentation":{"id":3472,"nodeType":"StructuredDocumentation","src":"4131:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"dbbf3db4","id":3508,"implemented":true,"kind":"function","modifiers":[{"id":3486,"kind":"modifierInvocation","modifierName":{"id":3485,"name":"nonReentrant","nameLocations":["4321:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":764,"src":"4321:12:15"},"nodeType":"ModifierInvocation","src":"4321:12:15"}],"name":"createCustomPool","nameLocation":"4174:16:15","nodeType":"FunctionDefinition","overrides":{"id":3484,"nodeType":"OverrideSpecifier","overrides":[],"src":"4312:8:15"},"parameters":{"id":3483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3474,"mutability":"mutable","name":"deployer","nameLocation":"4204:8:15","nodeType":"VariableDeclaration","scope":3508,"src":"4196:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3473,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3476,"mutability":"mutable","name":"creator","nameLocation":"4226:7:15","nodeType":"VariableDeclaration","scope":3508,"src":"4218:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3475,"name":"address","nodeType":"ElementaryTypeName","src":"4218:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3478,"mutability":"mutable","name":"tokenA","nameLocation":"4247:6:15","nodeType":"VariableDeclaration","scope":3508,"src":"4239:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3477,"name":"address","nodeType":"ElementaryTypeName","src":"4239:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3480,"mutability":"mutable","name":"tokenB","nameLocation":"4267:6:15","nodeType":"VariableDeclaration","scope":3508,"src":"4259:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3479,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3482,"mutability":"mutable","name":"data","nameLocation":"4294:4:15","nodeType":"VariableDeclaration","scope":3508,"src":"4279:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3481,"name":"bytes","nodeType":"ElementaryTypeName","src":"4279:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4190:112:15"},"returnParameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3488,"mutability":"mutable","name":"customPool","nameLocation":"4351:10:15","nodeType":"VariableDeclaration","scope":3508,"src":"4343:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3487,"name":"address","nodeType":"ElementaryTypeName","src":"4343:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4342:20:15"},"scope":4071,"src":"4165:353:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3761,"nodeType":"Block","src":"4660:1657:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3524,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"4674:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3525,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"4684:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4674:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3523,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4666:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4666:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3528,"nodeType":"ExpressionStatement","src":"4666:25:15"},{"assignments":[3530,3532],"declarations":[{"constant":false,"id":3530,"mutability":"mutable","name":"token0","nameLocation":"4706:6:15","nodeType":"VariableDeclaration","scope":3761,"src":"4698:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3529,"name":"address","nodeType":"ElementaryTypeName","src":"4698:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3532,"mutability":"mutable","name":"token1","nameLocation":"4722:6:15","nodeType":"VariableDeclaration","scope":3761,"src":"4714:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3531,"name":"address","nodeType":"ElementaryTypeName","src":"4714:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3543,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3533,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"4732:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3534,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"4741:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4732:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":3539,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"4770:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3540,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"4778:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3541,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4769:16:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4732:53:15","trueExpression":{"components":[{"id":3536,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"4751:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3537,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"4759:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4750:16:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"nodeType":"VariableDeclarationStatement","src":"4697:88:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3545,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"4799:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4817:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4809:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3546,"name":"address","nodeType":"ElementaryTypeName","src":"4809:7:15","typeDescriptions":{}}},"id":3549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4809:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4799:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3544,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4791:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4791:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3552,"nodeType":"ExpressionStatement","src":"4791:29:15"},{"assignments":[3558],"declarations":[{"constant":false,"id":3558,"mutability":"mutable","name":"_poolByPair","nameLocation":"4883:11:15","nodeType":"VariableDeclaration","scope":3761,"src":"4827:67:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"},"typeName":{"id":3557,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3553,"name":"address","nodeType":"ElementaryTypeName","src":"4835:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4827:47:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3556,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3554,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4846:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3555,"name":"address","nodeType":"ElementaryTypeName","src":"4865:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}}},"visibility":"internal"}],"id":3570,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3559,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"4897:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4917:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4909:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3560,"name":"address","nodeType":"ElementaryTypeName","src":"4909:7:15","typeDescriptions":{}}},"id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4909:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4897:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":3566,"name":"customPoolByPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"4935:16:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => address)))"}},"id":3568,"indexExpression":{"id":3567,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"4952:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4935:26:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4897:64:15","trueExpression":{"id":3565,"name":"poolByPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"4922:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"nodeType":"VariableDeclarationStatement","src":"4827:134:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":3572,"name":"_poolByPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"4975:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":3574,"indexExpression":{"id":3573,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"4987:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4975:19:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":3576,"indexExpression":{"id":3575,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"4995:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4975:27:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5014:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5006:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3577,"name":"address","nodeType":"ElementaryTypeName","src":"5006:7:15","typeDescriptions":{}}},"id":3580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4975:41:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3571,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4967:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4967:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3583,"nodeType":"ExpressionStatement","src":"4967:50:15"},{"assignments":[3585],"declarations":[{"constant":false,"id":3585,"mutability":"mutable","name":"plugin","nameLocation":"5032:6:15","nodeType":"VariableDeclaration","scope":3761,"src":"5024:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3584,"name":"address","nodeType":"ElementaryTypeName","src":"5024:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3586,"nodeType":"VariableDeclarationStatement","src":"5024:14:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3587,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"5048:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5068:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5060:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3588,"name":"address","nodeType":"ElementaryTypeName","src":"5060:7:15","typeDescriptions":{}}},"id":3591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5060:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5048:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3642,"nodeType":"Block","src":"5289:227:15","statements":[{"expression":{"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3623,"name":"plugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"5297:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3630,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"5395:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3631,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"5405:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3632,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"5413:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3629,"name":"computeCustomPoolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"5370:24:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address,address) view returns (address)"}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5370:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3634,"name":"creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"5430:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3635,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"5447:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3636,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"5465:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3637,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"5481:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3638,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"5497:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"expression":{"id":3625,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5328:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5332:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5328:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3624,"name":"IAlgebraPluginFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"5306:21:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAlgebraPluginFactory_$4422_$","typeString":"type(contract IAlgebraPluginFactory)"}},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5306:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraPluginFactory_$4422","typeString":"contract IAlgebraPluginFactory"}},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5340:20:15","memberName":"beforeCreatePoolHook","nodeType":"MemberAccess","referencedDeclaration":4411,"src":"5306:54:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (address,address,address,address,address,bytes memory) external returns (address)"}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5306:203:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5297:212:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3641,"nodeType":"ExpressionStatement","src":"5297:212:15"}]},"id":3643,"nodeType":"IfStatement","src":"5044:472:15","trueBody":{"id":3622,"nodeType":"Block","src":"5072:211:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3595,"name":"defaultPluginFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"5092:20:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraPluginFactory_$4422","typeString":"contract IAlgebraPluginFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IAlgebraPluginFactory_$4422","typeString":"contract IAlgebraPluginFactory"}],"id":3594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5084:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3593,"name":"address","nodeType":"ElementaryTypeName","src":"5084:7:15","typeDescriptions":{}}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5084:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5125:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5117:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3597,"name":"address","nodeType":"ElementaryTypeName","src":"5117:7:15","typeDescriptions":{}}},"id":3600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5117:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5084:43:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3621,"nodeType":"IfStatement","src":"5080:197:15","trueBody":{"id":3620,"nodeType":"Block","src":"5129:148:15","statements":[{"expression":{"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3602,"name":"plugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"5139:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3606,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"5209:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3607,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"5217:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3605,"name":"computePoolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"5190:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view returns (address)"}},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5190:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3609,"name":"creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"5226:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5243:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5235:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3610,"name":"address","nodeType":"ElementaryTypeName","src":"5235:7:15","typeDescriptions":{}}},"id":3613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5235:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3614,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"5247:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3615,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"5255:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3616,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"5263:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3603,"name":"defaultPluginFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"5148:20:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraPluginFactory_$4422","typeString":"contract IAlgebraPluginFactory"}},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5169:20:15","memberName":"beforeCreatePoolHook","nodeType":"MemberAccess","referencedDeclaration":4411,"src":"5148:41:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (address,address,address,address,address,bytes memory) external returns (address)"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5148:120:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5139:129:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3619,"nodeType":"ExpressionStatement","src":"5139:129:15"}]}}]}},{"expression":{"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3644,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"5522:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3649,"name":"plugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"5571:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3650,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"5579:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3651,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"5587:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3652,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"5595:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3646,"name":"poolDeployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"5550:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3645,"name":"IAlgebraPoolDeployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"5529:20:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAlgebraPoolDeployer_$4390_$","typeString":"type(contract IAlgebraPoolDeployer)"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraPoolDeployer_$4390","typeString":"contract IAlgebraPoolDeployer"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5564:6:15","memberName":"deploy","nodeType":"MemberAccess","referencedDeclaration":4389,"src":"5529:41:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address,address,address) external returns (address)"}},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5522:82:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3655,"nodeType":"ExpressionStatement","src":"5522:82:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3656,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"5615:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5635:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5627:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3657,"name":"address","nodeType":"ElementaryTypeName","src":"5627:7:15","typeDescriptions":{}}},"id":3660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5627:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5615:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3692,"nodeType":"Block","src":"5791:92:15","statements":[{"expression":{"arguments":[{"id":3687,"name":"plugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"5853:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3688,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"5861:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3689,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"5867:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":3683,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5821:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5825:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5821:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3682,"name":"IAlgebraPluginFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"5799:21:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAlgebraPluginFactory_$4422_$","typeString":"type(contract IAlgebraPluginFactory)"}},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraPluginFactory_$4422","typeString":"contract IAlgebraPluginFactory"}},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5833:19:15","memberName":"afterCreatePoolHook","nodeType":"MemberAccess","referencedDeclaration":4421,"src":"5799:53:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address) external"}},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3691,"nodeType":"ExpressionStatement","src":"5799:77:15"}]},"id":3693,"nodeType":"IfStatement","src":"5611:272:15","trueBody":{"id":3681,"nodeType":"Block","src":"5639:146:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3664,"name":"defaultPluginFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"5659:20:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraPluginFactory_$4422","typeString":"contract IAlgebraPluginFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IAlgebraPluginFactory_$4422","typeString":"contract IAlgebraPluginFactory"}],"id":3663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5651:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3662,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:15","typeDescriptions":{}}},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5651:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5692:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5684:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3666,"name":"address","nodeType":"ElementaryTypeName","src":"5684:7:15","typeDescriptions":{}}},"id":3669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5684:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5651:43:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3680,"nodeType":"IfStatement","src":"5647:132:15","trueBody":{"id":3679,"nodeType":"Block","src":"5696:83:15","statements":[{"expression":{"arguments":[{"id":3674,"name":"plugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"5747:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3675,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"5755:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3676,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"5761:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3671,"name":"defaultPluginFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"5706:20:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraPluginFactory_$4422","typeString":"contract IAlgebraPluginFactory"}},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5727:19:15","memberName":"afterCreatePoolHook","nodeType":"MemberAccess","referencedDeclaration":4421,"src":"5706:40:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address) external"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5706:64:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3678,"nodeType":"ExpressionStatement","src":"5706:64:15"}]}}]}},{"expression":{"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3694,"name":"_poolByPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"5889:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":3697,"indexExpression":{"id":3695,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"5901:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5889:19:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":3698,"indexExpression":{"id":3696,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"5909:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5889:27:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3699,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"5919:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5889:34:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3701,"nodeType":"ExpressionStatement","src":"5889:34:15"},{"expression":{"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3702,"name":"_poolByPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"5929:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":3705,"indexExpression":{"id":3703,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"5941:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5929:19:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":3706,"indexExpression":{"id":3704,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"5949:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5929:27:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3707,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"5959:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5929:34:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3709,"nodeType":"ExpressionStatement","src":"5929:34:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3710,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"5974:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5994:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5986:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3711,"name":"address","nodeType":"ElementaryTypeName","src":"5986:7:15","typeDescriptions":{}}},"id":3714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5986:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5974:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3730,"nodeType":"Block","src":"6050:62:15","statements":[{"eventCall":{"arguments":[{"id":3724,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"6074:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3725,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"6084:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3726,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"6092:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3727,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"6100:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3723,"name":"CustomPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"6063:10:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address,address)"}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6063:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3729,"nodeType":"EmitStatement","src":"6058:47:15"}]},"id":3731,"nodeType":"IfStatement","src":"5970:142:15","trueBody":{"id":3722,"nodeType":"Block","src":"5998:46:15","statements":[{"eventCall":{"arguments":[{"id":3717,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"6016:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3718,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"6024:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3719,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"6032:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3716,"name":"Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"6011:4:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6011:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3721,"nodeType":"EmitStatement","src":"6006:31:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3734,"name":"vaultFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"6130:12:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraVaultFactory_$5184","typeString":"contract IAlgebraVaultFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IAlgebraVaultFactory_$5184","typeString":"contract IAlgebraVaultFactory"}],"id":3733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6122:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3732,"name":"address","nodeType":"ElementaryTypeName","src":"6122:7:15","typeDescriptions":{}}},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6122:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6155:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6147:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3736,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:15","typeDescriptions":{}}},"id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6147:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6122:35:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3760,"nodeType":"IfStatement","src":"6118:195:15","trueBody":{"id":3759,"nodeType":"Block","src":"6159:154:15","statements":[{"assignments":[3742],"declarations":[{"constant":false,"id":3742,"mutability":"mutable","name":"vault","nameLocation":"6175:5:15","nodeType":"VariableDeclaration","scope":3759,"src":"6167:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3741,"name":"address","nodeType":"ElementaryTypeName","src":"6167:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3751,"initialValue":{"arguments":[{"id":3745,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"6215:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3746,"name":"creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"6221:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3747,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"6230:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3748,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"6240:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3749,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"6248:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3743,"name":"vaultFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"6183:12:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraVaultFactory_$5184","typeString":"contract IAlgebraVaultFactory"}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6196:18:15","memberName":"createVaultForPool","nodeType":"MemberAccess","referencedDeclaration":5183,"src":"6183:31:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address,address,address,address) external returns (address)"}},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6183:72:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6167:88:15"},{"expression":{"arguments":[{"id":3756,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"6300:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3753,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"6276:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3752,"name":"IAlgebraPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"6263:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAlgebraPool_$4360_$","typeString":"type(contract IAlgebraPool)"}},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6263:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraPool_$4360","typeString":"contract IAlgebraPool"}},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6282:17:15","memberName":"setCommunityVault","nodeType":"MemberAccess","referencedDeclaration":4843,"src":"6263:36:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6263:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3758,"nodeType":"ExpressionStatement","src":"6263:43:15"}]}}]},"id":3762,"implemented":true,"kind":"function","modifiers":[],"name":"_createPool","nameLocation":"4531:11:15","nodeType":"FunctionDefinition","parameters":{"id":3519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3510,"mutability":"mutable","name":"deployer","nameLocation":"4551:8:15","nodeType":"VariableDeclaration","scope":3762,"src":"4543:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3509,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3512,"mutability":"mutable","name":"creator","nameLocation":"4569:7:15","nodeType":"VariableDeclaration","scope":3762,"src":"4561:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3511,"name":"address","nodeType":"ElementaryTypeName","src":"4561:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3514,"mutability":"mutable","name":"tokenA","nameLocation":"4586:6:15","nodeType":"VariableDeclaration","scope":3762,"src":"4578:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3513,"name":"address","nodeType":"ElementaryTypeName","src":"4578:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3516,"mutability":"mutable","name":"tokenB","nameLocation":"4602:6:15","nodeType":"VariableDeclaration","scope":3762,"src":"4594:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3515,"name":"address","nodeType":"ElementaryTypeName","src":"4594:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3518,"mutability":"mutable","name":"data","nameLocation":"4623:4:15","nodeType":"VariableDeclaration","scope":3762,"src":"4610:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3517,"name":"bytes","nodeType":"ElementaryTypeName","src":"4610:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4542:86:15"},"returnParameters":{"id":3522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3521,"mutability":"mutable","name":"pool","nameLocation":"4654:4:15","nodeType":"VariableDeclaration","scope":3762,"src":"4646:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3520,"name":"address","nodeType":"ElementaryTypeName","src":"4646:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4645:14:15"},"scope":4071,"src":"4522:1795:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[4305],"body":{"id":3808,"nodeType":"Block","src":"6446:320:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3772,"name":"newDefaultCommunityFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"6460:22:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3773,"name":"Constants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"6486:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Constants_$5239_$","typeString":"type(library Constants)"}},"id":3774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6496:17:15","memberName":"MAX_COMMUNITY_FEE","nodeType":"MemberAccess","referencedDeclaration":5230,"src":"6486:27:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"6460:53:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3771,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6452:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6452:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3777,"nodeType":"ExpressionStatement","src":"6452:62:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3779,"name":"defaultCommunityFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"6528:19:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3780,"name":"newDefaultCommunityFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"6551:22:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"6528:45:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3778,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6520:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6520:54:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3783,"nodeType":"ExpressionStatement","src":"6520:54:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3784,"name":"newDefaultCommunityFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"6584:22:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6610:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6584:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3799,"nodeType":"IfStatement","src":"6580:77:15","trueBody":{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3790,"name":"vaultFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"6629:12:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraVaultFactory_$5184","typeString":"contract IAlgebraVaultFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IAlgebraVaultFactory_$5184","typeString":"contract IAlgebraVaultFactory"}],"id":3789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6621:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3788,"name":"address","nodeType":"ElementaryTypeName","src":"6621:7:15","typeDescriptions":{}}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6621:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6654:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6646:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3792,"name":"address","nodeType":"ElementaryTypeName","src":"6646:7:15","typeDescriptions":{}}},"id":3795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6646:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6621:35:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3787,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6613:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6613:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3798,"nodeType":"ExpressionStatement","src":"6613:44:15"}},{"expression":{"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3800,"name":"defaultCommunityFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"6663:19:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3801,"name":"newDefaultCommunityFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"6685:22:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"6663:44:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":3803,"nodeType":"ExpressionStatement","src":"6663:44:15"},{"eventCall":{"arguments":[{"id":3805,"name":"newDefaultCommunityFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"6738:22:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":3804,"name":"DefaultCommunityFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"6718:19:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$returns$__$","typeString":"function (uint16)"}},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6718:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3807,"nodeType":"EmitStatement","src":"6713:48:15"}]},"documentation":{"id":3763,"nodeType":"StructuredDocumentation","src":"6321:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"8d5a8711","id":3809,"implemented":true,"kind":"function","modifiers":[{"id":3769,"kind":"modifierInvocation","modifierName":{"id":3768,"name":"onlyOwner","nameLocations":["6436:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":570,"src":"6436:9:15"},"nodeType":"ModifierInvocation","src":"6436:9:15"}],"name":"setDefaultCommunityFee","nameLocation":"6364:22:15","nodeType":"FunctionDefinition","overrides":{"id":3767,"nodeType":"OverrideSpecifier","overrides":[],"src":"6427:8:15"},"parameters":{"id":3766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3765,"mutability":"mutable","name":"newDefaultCommunityFee","nameLocation":"6394:22:15","nodeType":"VariableDeclaration","scope":3809,"src":"6387:29:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3764,"name":"uint16","nodeType":"ElementaryTypeName","src":"6387:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"6386:31:15"},"returnParameters":{"id":3770,"nodeType":"ParameterList","parameters":[],"src":"6446:0:15"},"scope":4071,"src":"6355:411:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4311],"body":{"id":3839,"nodeType":"Block","src":"6877:172:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3819,"name":"newDefaultFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"6891:13:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3820,"name":"Constants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"6908:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Constants_$5239_$","typeString":"type(library Constants)"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6918:15:15","memberName":"MAX_DEFAULT_FEE","nodeType":"MemberAccess","referencedDeclaration":5212,"src":"6908:25:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"6891:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3818,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6883:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6883:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3824,"nodeType":"ExpressionStatement","src":"6883:51:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3826,"name":"defaultFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"6948:10:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3827,"name":"newDefaultFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"6962:13:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"6948:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3825,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6940:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6940:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3830,"nodeType":"ExpressionStatement","src":"6940:36:15"},{"expression":{"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3831,"name":"defaultFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"6982:10:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3832,"name":"newDefaultFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"6995:13:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"6982:26:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":3834,"nodeType":"ExpressionStatement","src":"6982:26:15"},{"eventCall":{"arguments":[{"id":3836,"name":"newDefaultFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"7030:13:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":3835,"name":"DefaultFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"7019:10:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$returns$__$","typeString":"function (uint16)"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3838,"nodeType":"EmitStatement","src":"7014:30:15"}]},"documentation":{"id":3810,"nodeType":"StructuredDocumentation","src":"6770:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"77326584","id":3840,"implemented":true,"kind":"function","modifiers":[{"id":3816,"kind":"modifierInvocation","modifierName":{"id":3815,"name":"onlyOwner","nameLocations":["6867:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":570,"src":"6867:9:15"},"nodeType":"ModifierInvocation","src":"6867:9:15"}],"name":"setDefaultFee","nameLocation":"6813:13:15","nodeType":"FunctionDefinition","overrides":{"id":3814,"nodeType":"OverrideSpecifier","overrides":[],"src":"6858:8:15"},"parameters":{"id":3813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3812,"mutability":"mutable","name":"newDefaultFee","nameLocation":"6834:13:15","nodeType":"VariableDeclaration","scope":3840,"src":"6827:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3811,"name":"uint16","nodeType":"ElementaryTypeName","src":"6827:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"6826:22:15"},"returnParameters":{"id":3817,"nodeType":"ParameterList","parameters":[],"src":"6877:0:15"},"scope":4071,"src":"6804:245:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4317],"body":{"id":3877,"nodeType":"Block","src":"7175:295:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3850,"name":"newDefaultTickspacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"7189:21:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":3851,"name":"Constants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"7214:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Constants_$5239_$","typeString":"type(library Constants)"}},"id":3852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7224:16:15","memberName":"MIN_TICK_SPACING","nodeType":"MemberAccess","referencedDeclaration":5221,"src":"7214:26:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"7189:51:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3849,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7181:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7181:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3855,"nodeType":"ExpressionStatement","src":"7181:60:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3857,"name":"newDefaultTickspacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"7255:21:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3858,"name":"Constants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"7280:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Constants_$5239_$","typeString":"type(library Constants)"}},"id":3859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7290:16:15","memberName":"MAX_TICK_SPACING","nodeType":"MemberAccess","referencedDeclaration":5218,"src":"7280:26:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"7255:51:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3856,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7247:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7247:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3862,"nodeType":"ExpressionStatement","src":"7247:60:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3864,"name":"newDefaultTickspacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"7321:21:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3865,"name":"defaultTickspacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"7346:18:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"7321:43:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3863,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7313:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7313:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3868,"nodeType":"ExpressionStatement","src":"7313:52:15"},{"expression":{"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3869,"name":"defaultTickspacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"7371:18:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3870,"name":"newDefaultTickspacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"7392:21:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"7371:42:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":3872,"nodeType":"ExpressionStatement","src":"7371:42:15"},{"eventCall":{"arguments":[{"id":3874,"name":"newDefaultTickspacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"7443:21:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"id":3873,"name":"DefaultTickspacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"7424:18:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_int24_$returns$__$","typeString":"function (int24)"}},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7424:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3876,"nodeType":"EmitStatement","src":"7419:46:15"}]},"documentation":{"id":3841,"nodeType":"StructuredDocumentation","src":"7053:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"f09489ac","id":3878,"implemented":true,"kind":"function","modifiers":[{"id":3847,"kind":"modifierInvocation","modifierName":{"id":3846,"name":"onlyOwner","nameLocations":["7165:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":570,"src":"7165:9:15"},"nodeType":"ModifierInvocation","src":"7165:9:15"}],"name":"setDefaultTickspacing","nameLocation":"7096:21:15","nodeType":"FunctionDefinition","overrides":{"id":3845,"nodeType":"OverrideSpecifier","overrides":[],"src":"7156:8:15"},"parameters":{"id":3844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3843,"mutability":"mutable","name":"newDefaultTickspacing","nameLocation":"7124:21:15","nodeType":"VariableDeclaration","scope":3878,"src":"7118:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3842,"name":"int24","nodeType":"ElementaryTypeName","src":"7118:5:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"7117:29:15"},"returnParameters":{"id":3848,"nodeType":"ParameterList","parameters":[],"src":"7175:0:15"},"scope":4071,"src":"7087:383:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4323],"body":{"id":3906,"nodeType":"Block","src":"7602:207:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3888,"name":"newDefaultPluginFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"7616:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":3891,"name":"defaultPluginFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"7651:20:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraPluginFactory_$4422","typeString":"contract IAlgebraPluginFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IAlgebraPluginFactory_$4422","typeString":"contract IAlgebraPluginFactory"}],"id":3890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7643:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3889,"name":"address","nodeType":"ElementaryTypeName","src":"7643:7:15","typeDescriptions":{}}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7643:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7616:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3887,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7608:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7608:65:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3895,"nodeType":"ExpressionStatement","src":"7608:65:15"},{"expression":{"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3896,"name":"defaultPluginFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"7679:20:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraPluginFactory_$4422","typeString":"contract IAlgebraPluginFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3898,"name":"newDefaultPluginFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"7724:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3897,"name":"IAlgebraPluginFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"7702:21:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAlgebraPluginFactory_$4422_$","typeString":"type(contract IAlgebraPluginFactory)"}},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7702:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraPluginFactory_$4422","typeString":"contract IAlgebraPluginFactory"}},"src":"7679:69:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraPluginFactory_$4422","typeString":"contract IAlgebraPluginFactory"}},"id":3901,"nodeType":"ExpressionStatement","src":"7679:69:15"},{"eventCall":{"arguments":[{"id":3903,"name":"newDefaultPluginFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"7780:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3902,"name":"DefaultPluginFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"7759:20:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7759:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3905,"nodeType":"EmitStatement","src":"7754:50:15"}]},"documentation":{"id":3879,"nodeType":"StructuredDocumentation","src":"7474:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"2939dd97","id":3907,"implemented":true,"kind":"function","modifiers":[{"id":3885,"kind":"modifierInvocation","modifierName":{"id":3884,"name":"onlyOwner","nameLocations":["7592:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":570,"src":"7592:9:15"},"nodeType":"ModifierInvocation","src":"7592:9:15"}],"name":"setDefaultPluginFactory","nameLocation":"7517:23:15","nodeType":"FunctionDefinition","overrides":{"id":3883,"nodeType":"OverrideSpecifier","overrides":[],"src":"7583:8:15"},"parameters":{"id":3882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3881,"mutability":"mutable","name":"newDefaultPluginFactory","nameLocation":"7549:23:15","nodeType":"VariableDeclaration","scope":3907,"src":"7541:31:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3880,"name":"address","nodeType":"ElementaryTypeName","src":"7541:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7540:33:15"},"returnParameters":{"id":3886,"nodeType":"ParameterList","parameters":[],"src":"7602:0:15"},"scope":4071,"src":"7508:301:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4329],"body":{"id":3948,"nodeType":"Block","src":"7925:232:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3917,"name":"newVaultFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"7939:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":3920,"name":"vaultFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"7966:12:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraVaultFactory_$5184","typeString":"contract IAlgebraVaultFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IAlgebraVaultFactory_$5184","typeString":"contract IAlgebraVaultFactory"}],"id":3919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7958:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3918,"name":"address","nodeType":"ElementaryTypeName","src":"7958:7:15","typeDescriptions":{}}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7958:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7939:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3916,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7931:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7931:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3924,"nodeType":"ExpressionStatement","src":"7931:49:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3925,"name":"newVaultFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"7990:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8017:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8009:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3926,"name":"address","nodeType":"ElementaryTypeName","src":"8009:7:15","typeDescriptions":{}}},"id":3929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8009:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7990:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3937,"nodeType":"IfStatement","src":"7986:68:15","trueBody":{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3932,"name":"defaultCommunityFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"8029:19:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8052:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8029:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3931,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8021:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3936,"nodeType":"ExpressionStatement","src":"8021:33:15"}},{"expression":{"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3938,"name":"vaultFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"8060:12:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraVaultFactory_$5184","typeString":"contract IAlgebraVaultFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3940,"name":"newVaultFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"8096:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3939,"name":"IAlgebraVaultFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"8075:20:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAlgebraVaultFactory_$5184_$","typeString":"type(contract IAlgebraVaultFactory)"}},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8075:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraVaultFactory_$5184","typeString":"contract IAlgebraVaultFactory"}},"src":"8060:52:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraVaultFactory_$5184","typeString":"contract IAlgebraVaultFactory"}},"id":3943,"nodeType":"ExpressionStatement","src":"8060:52:15"},{"eventCall":{"arguments":[{"id":3945,"name":"newVaultFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"8136:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3944,"name":"VaultFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"8123:12:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8123:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3947,"nodeType":"EmitStatement","src":"8118:34:15"}]},"documentation":{"id":3908,"nodeType":"StructuredDocumentation","src":"7813:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"3ea7fbdb","id":3949,"implemented":true,"kind":"function","modifiers":[{"id":3914,"kind":"modifierInvocation","modifierName":{"id":3913,"name":"onlyOwner","nameLocations":["7915:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":570,"src":"7915:9:15"},"nodeType":"ModifierInvocation","src":"7915:9:15"}],"name":"setVaultFactory","nameLocation":"7856:15:15","nodeType":"FunctionDefinition","overrides":{"id":3912,"nodeType":"OverrideSpecifier","overrides":[],"src":"7906:8:15"},"parameters":{"id":3911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3910,"mutability":"mutable","name":"newVaultFactory","nameLocation":"7880:15:15","nodeType":"VariableDeclaration","scope":3949,"src":"7872:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3909,"name":"address","nodeType":"ElementaryTypeName","src":"7872:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7871:25:15"},"returnParameters":{"id":3915,"nodeType":"ParameterList","parameters":[],"src":"7925:0:15"},"scope":4071,"src":"7847:310:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4333],"body":{"id":3974,"nodeType":"Block","src":"8257:237:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3957,"name":"renounceOwnershipStartTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"8271:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8306:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8271:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3956,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8263:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8263:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3961,"nodeType":"ExpressionStatement","src":"8263:45:15"},{"expression":{"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3962,"name":"renounceOwnershipStartTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"8314:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3963,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8348:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8354:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"8348:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8314:49:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3966,"nodeType":"ExpressionStatement","src":"8314:49:15"},{"eventCall":{"arguments":[{"id":3968,"name":"renounceOwnershipStartTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"8397:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3969,"name":"renounceOwnershipStartTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"8430:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3970,"name":"RENOUNCE_OWNERSHIP_DELAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"8464:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8430:58:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3967,"name":"RenounceOwnershipStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"8374:22:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:115:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3973,"nodeType":"EmitStatement","src":"8369:120:15"}]},"documentation":{"id":3950,"nodeType":"StructuredDocumentation","src":"8161:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"469388c4","id":3975,"implemented":true,"kind":"function","modifiers":[{"id":3954,"kind":"modifierInvocation","modifierName":{"id":3953,"name":"onlyOwner","nameLocations":["8247:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":570,"src":"8247:9:15"},"nodeType":"ModifierInvocation","src":"8247:9:15"}],"name":"startRenounceOwnership","nameLocation":"8204:22:15","nodeType":"FunctionDefinition","overrides":{"id":3952,"nodeType":"OverrideSpecifier","overrides":[],"src":"8238:8:15"},"parameters":{"id":3951,"nodeType":"ParameterList","parameters":[],"src":"8226:2:15"},"returnParameters":{"id":3955,"nodeType":"ParameterList","parameters":[],"src":"8257:0:15"},"scope":4071,"src":"8195:299:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4337],"body":{"id":3997,"nodeType":"Block","src":"8593:146:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3983,"name":"renounceOwnershipStartTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"8607:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8642:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8607:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3982,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8599:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8599:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3987,"nodeType":"ExpressionStatement","src":"8599:45:15"},{"expression":{"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3988,"name":"renounceOwnershipStartTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"8650:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8684:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8650:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3991,"nodeType":"ExpressionStatement","src":"8650:35:15"},{"eventCall":{"arguments":[{"expression":{"id":3993,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8718:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8724:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"8718:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3992,"name":"RenounceOwnershipStop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"8696:21:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8696:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3996,"nodeType":"EmitStatement","src":"8691:43:15"}]},"documentation":{"id":3976,"nodeType":"StructuredDocumentation","src":"8498:31:15","text":"@inheritdoc IAlgebraFactory"},"functionSelector":"238a1d74","id":3998,"implemented":true,"kind":"function","modifiers":[{"id":3980,"kind":"modifierInvocation","modifierName":{"id":3979,"name":"onlyOwner","nameLocations":["8583:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":570,"src":"8583:9:15"},"nodeType":"ModifierInvocation","src":"8583:9:15"}],"name":"stopRenounceOwnership","nameLocation":"8541:21:15","nodeType":"FunctionDefinition","overrides":{"id":3978,"nodeType":"OverrideSpecifier","overrides":[],"src":"8574:8:15"},"parameters":{"id":3977,"nodeType":"ParameterList","parameters":[],"src":"8562:2:15"},"returnParameters":{"id":3981,"nodeType":"ParameterList","parameters":[],"src":"8593:0:15"},"scope":4071,"src":"8532:207:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[607],"body":{"id":4034,"nodeType":"Block","src":"9064:272:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4006,"name":"renounceOwnershipStartTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"9078:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9113:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9078:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4005,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9070:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9070:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4010,"nodeType":"ExpressionStatement","src":"9070:45:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4012,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9129:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9135:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"9129:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4014,"name":"renounceOwnershipStartTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"9147:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9129:49:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4016,"name":"RENOUNCE_OWNERSHIP_DELAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"9182:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9129:77:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4011,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9121:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9121:86:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4019,"nodeType":"ExpressionStatement","src":"9121:86:15"},{"expression":{"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4020,"name":"renounceOwnershipStartTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"9213:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9247:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9213:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4023,"nodeType":"ExpressionStatement","src":"9213:35:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4024,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"9255:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AlgebraFactory_$4071_$","typeString":"type(contract super AlgebraFactory)"}},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9261:17:15","memberName":"renounceOwnership","nodeType":"MemberAccess","referencedDeclaration":607,"src":"9255:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9255:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4028,"nodeType":"ExpressionStatement","src":"9255:25:15"},{"eventCall":{"arguments":[{"expression":{"id":4030,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9315:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9321:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"9315:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4029,"name":"RenounceOwnershipFinish","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"9291:23:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9291:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4033,"nodeType":"EmitStatement","src":"9286:45:15"}]},"documentation":{"id":3999,"nodeType":"StructuredDocumentation","src":"8743:263:15","text":"@dev Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore.\n Can only be called by the current owner if RENOUNCE_OWNERSHIP_DELAY seconds\n have passed since the call to the startRenounceOwnership() function."},"functionSelector":"715018a6","id":4035,"implemented":true,"kind":"function","modifiers":[{"id":4003,"kind":"modifierInvocation","modifierName":{"id":4002,"name":"onlyOwner","nameLocations":["9054:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":570,"src":"9054:9:15"},"nodeType":"ModifierInvocation","src":"9054:9:15"}],"name":"renounceOwnership","nameLocation":"9018:17:15","nodeType":"FunctionDefinition","overrides":{"id":4001,"nodeType":"OverrideSpecifier","overrides":[],"src":"9045:8:15"},"parameters":{"id":4000,"nodeType":"ParameterList","parameters":[],"src":"9035:2:15"},"returnParameters":{"id":4004,"nodeType":"ParameterList","parameters":[],"src":"9064:0:15"},"scope":4071,"src":"9009:327:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[711],"body":{"id":4069,"nodeType":"Block","src":"9529:177:15","statements":[{"expression":{"arguments":[{"id":4043,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"9547:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4044,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[3321],"referencedDeclaration":3321,"src":"9567:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9567:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4042,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[439],"referencedDeclaration":439,"src":"9535:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9535:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4047,"nodeType":"ExpressionStatement","src":"9535:40:15"},{"expression":{"arguments":[{"id":4051,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"9606:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4048,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"9581:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AlgebraFactory_$4071_$","typeString":"type(contract super AlgebraFactory)"}},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9587:18:15","memberName":"_transferOwnership","nodeType":"MemberAccess","referencedDeclaration":711,"src":"9581:24:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9581:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4053,"nodeType":"ExpressionStatement","src":"9581:34:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4054,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[3321],"referencedDeclaration":3321,"src":"9625:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9625:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9644:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9636:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4056,"name":"address","nodeType":"ElementaryTypeName","src":"9636:7:15","typeDescriptions":{}}},"id":4059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9636:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9625:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4068,"nodeType":"IfStatement","src":"9621:81:15","trueBody":{"id":4067,"nodeType":"Block","src":"9648:54:15","statements":[{"expression":{"arguments":[{"id":4062,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"9667:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4063,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[3321],"referencedDeclaration":3321,"src":"9687:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9687:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4061,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[415],"referencedDeclaration":415,"src":"9656:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9656:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4066,"nodeType":"ExpressionStatement","src":"9656:39:15"}]}}]},"documentation":{"id":4036,"nodeType":"StructuredDocumentation","src":"9340:122:15","text":"@dev Transfers ownership of the contract to a new account (`newOwner`).\n Modified to fit with the role mechanism."},"id":4070,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"9474:18:15","nodeType":"FunctionDefinition","overrides":{"id":4040,"nodeType":"OverrideSpecifier","overrides":[],"src":"9520:8:15"},"parameters":{"id":4039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4038,"mutability":"mutable","name":"newOwner","nameLocation":"9501:8:15","nodeType":"VariableDeclaration","scope":4070,"src":"9493:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4037,"name":"address","nodeType":"ElementaryTypeName","src":"9493:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9492:18:15"},"returnParameters":{"id":4041,"nodeType":"ParameterList","parameters":[],"src":"9529:0:15"},"scope":4071,"src":"9465:241:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4072,"src":"690:9018:15","usedErrors":[],"usedEvents":[452,461,470,552,665,4084,4089,4094,4103,4114,4119,4124,4129,4134,4139]}],"src":"37:9672:15"},"id":15},"contracts/interfaces/IAlgebraFactory.sol":{"ast":{"absolutePath":"contracts/interfaces/IAlgebraFactory.sol","exportedSymbols":{"IAlgebraFactory":[4338],"IAlgebraPluginFactory":[4422],"IAlgebraVaultFactory":[5184]},"id":4339,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4073,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:16"},{"id":4074,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:16"},{"absolutePath":"contracts/interfaces/plugin/IAlgebraPluginFactory.sol","file":"./plugin/IAlgebraPluginFactory.sol","id":4075,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4339,"sourceUnit":4423,"src":"91:44:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/vault/IAlgebraVaultFactory.sol","file":"./vault/IAlgebraVaultFactory.sol","id":4076,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4339,"sourceUnit":5185,"src":"136:42:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAlgebraFactory","contractDependencies":[],"contractKind":"interface","documentation":{"id":4077,"nodeType":"StructuredDocumentation","src":"180:183:16","text":"@title The interface for the Algebra Factory\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"},"fullyImplemented":false,"id":4338,"linearizedBaseContracts":[4338],"name":"IAlgebraFactory","nameLocation":"373:15:16","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":4078,"nodeType":"StructuredDocumentation","src":"393:207:16","text":"@notice Emitted when a process of ownership renounce is started\n @param timestamp The timestamp of event\n @param finishTimestamp The timestamp when ownership renounce will be possible to finish"},"eventSelector":"cd60f5d54996130c21c3f063279b39230bcbafc12f763a1ac1dfaec2e9b61d29","id":4084,"name":"RenounceOwnershipStart","nameLocation":"609:22:16","nodeType":"EventDefinition","parameters":{"id":4083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4080,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"640:9:16","nodeType":"VariableDeclaration","scope":4084,"src":"632:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4079,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4082,"indexed":false,"mutability":"mutable","name":"finishTimestamp","nameLocation":"659:15:16","nodeType":"VariableDeclaration","scope":4084,"src":"651:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4081,"name":"uint256","nodeType":"ElementaryTypeName","src":"651:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:44:16"},"src":"603:73:16"},{"anonymous":false,"documentation":{"id":4085,"nodeType":"StructuredDocumentation","src":"680:112:16","text":"@notice Emitted when a process of ownership renounce cancelled\n @param timestamp The timestamp of event"},"eventSelector":"a2492902a0a1d28dc73e6ab22e473239ef077bb7bc8174dc7dab9fc0818e7135","id":4089,"name":"RenounceOwnershipStop","nameLocation":"801:21:16","nodeType":"EventDefinition","parameters":{"id":4088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4087,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"831:9:16","nodeType":"VariableDeclaration","scope":4089,"src":"823:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4086,"name":"uint256","nodeType":"ElementaryTypeName","src":"823:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"822:19:16"},"src":"795:47:16"},{"anonymous":false,"documentation":{"id":4090,"nodeType":"StructuredDocumentation","src":"846:128:16","text":"@notice Emitted when a process of ownership renounce finished\n @param timestamp The timestamp of ownership renouncement"},"eventSelector":"a24203c457ce43a097fa0c491fc9cf5e0a893af87a5e0a9785f29491deb11e23","id":4094,"name":"RenounceOwnershipFinish","nameLocation":"983:23:16","nodeType":"EventDefinition","parameters":{"id":4093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4092,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1015:9:16","nodeType":"VariableDeclaration","scope":4094,"src":"1007:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4091,"name":"uint256","nodeType":"ElementaryTypeName","src":"1007:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1006:19:16"},"src":"977:49:16"},{"anonymous":false,"documentation":{"id":4095,"nodeType":"StructuredDocumentation","src":"1030:233:16","text":"@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param pool The address of the created pool"},"eventSelector":"91ccaa7a278130b65168c3a0c8d3bcae84cf5e43704342bd3ec0b59e59c036db","id":4103,"name":"Pool","nameLocation":"1272:4:16","nodeType":"EventDefinition","parameters":{"id":4102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4097,"indexed":true,"mutability":"mutable","name":"token0","nameLocation":"1293:6:16","nodeType":"VariableDeclaration","scope":4103,"src":"1277:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4096,"name":"address","nodeType":"ElementaryTypeName","src":"1277:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4099,"indexed":true,"mutability":"mutable","name":"token1","nameLocation":"1317:6:16","nodeType":"VariableDeclaration","scope":4103,"src":"1301:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4098,"name":"address","nodeType":"ElementaryTypeName","src":"1301:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4101,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"1333:4:16","nodeType":"VariableDeclaration","scope":4103,"src":"1325:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4100,"name":"address","nodeType":"ElementaryTypeName","src":"1325:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1276:62:16"},"src":"1266:73:16"},{"anonymous":false,"documentation":{"id":4104,"nodeType":"StructuredDocumentation","src":"1343:298:16","text":"@notice Emitted when a pool is created\n @param deployer The corresponding custom deployer contract\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param pool The address of the created pool"},"eventSelector":"8a5f030f5fc13b04a1e4ef7c47177e3d76b0e80e1d9be9843db37caa5b7b9b8f","id":4114,"name":"CustomPool","nameLocation":"1650:10:16","nodeType":"EventDefinition","parameters":{"id":4113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4106,"indexed":true,"mutability":"mutable","name":"deployer","nameLocation":"1677:8:16","nodeType":"VariableDeclaration","scope":4114,"src":"1661:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4105,"name":"address","nodeType":"ElementaryTypeName","src":"1661:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4108,"indexed":true,"mutability":"mutable","name":"token0","nameLocation":"1703:6:16","nodeType":"VariableDeclaration","scope":4114,"src":"1687:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4107,"name":"address","nodeType":"ElementaryTypeName","src":"1687:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4110,"indexed":true,"mutability":"mutable","name":"token1","nameLocation":"1727:6:16","nodeType":"VariableDeclaration","scope":4114,"src":"1711:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4109,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4112,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"1743:4:16","nodeType":"VariableDeclaration","scope":4114,"src":"1735:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4111,"name":"address","nodeType":"ElementaryTypeName","src":"1735:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1660:88:16"},"src":"1644:105:16"},{"anonymous":false,"documentation":{"id":4115,"nodeType":"StructuredDocumentation","src":"1753:133:16","text":"@notice Emitted when the default community fee is changed\n @param newDefaultCommunityFee The new default community fee value"},"eventSelector":"6b5c342391f543846fce47a925e7eba910f7bec232b08633308ca93fdd0fdf0d","id":4119,"name":"DefaultCommunityFee","nameLocation":"1895:19:16","nodeType":"EventDefinition","parameters":{"id":4118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4117,"indexed":false,"mutability":"mutable","name":"newDefaultCommunityFee","nameLocation":"1922:22:16","nodeType":"VariableDeclaration","scope":4119,"src":"1915:29:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4116,"name":"uint16","nodeType":"ElementaryTypeName","src":"1915:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1914:31:16"},"src":"1889:57:16"},{"anonymous":false,"documentation":{"id":4120,"nodeType":"StructuredDocumentation","src":"1950:128:16","text":"@notice Emitted when the default tickspacing is changed\n @param newDefaultTickspacing The new default tickspacing value"},"eventSelector":"7d7979096f943139ebee59f01c077a0f0766d06c40c86d596f23ed2561547cce","id":4124,"name":"DefaultTickspacing","nameLocation":"2087:18:16","nodeType":"EventDefinition","parameters":{"id":4123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4122,"indexed":false,"mutability":"mutable","name":"newDefaultTickspacing","nameLocation":"2112:21:16","nodeType":"VariableDeclaration","scope":4124,"src":"2106:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4121,"name":"int24","nodeType":"ElementaryTypeName","src":"2106:5:16","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"2105:29:16"},"src":"2081:54:16"},{"anonymous":false,"documentation":{"id":4125,"nodeType":"StructuredDocumentation","src":"2139:104:16","text":"@notice Emitted when the default fee is changed\n @param newDefaultFee The new default fee value"},"eventSelector":"ddc0c6f0b581e0d51bfe90ff138e4a548f94515c4dbcb12f5e98fdf0f7503983","id":4129,"name":"DefaultFee","nameLocation":"2252:10:16","nodeType":"EventDefinition","parameters":{"id":4128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4127,"indexed":false,"mutability":"mutable","name":"newDefaultFee","nameLocation":"2270:13:16","nodeType":"VariableDeclaration","scope":4129,"src":"2263:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4126,"name":"uint16","nodeType":"ElementaryTypeName","src":"2263:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"2262:22:16"},"src":"2246:39:16"},{"anonymous":false,"documentation":{"id":4130,"nodeType":"StructuredDocumentation","src":"2289:146:16","text":"@notice Emitted when the defaultPluginFactory address is changed\n @param defaultPluginFactoryAddress The new defaultPluginFactory address"},"eventSelector":"5e38e259ec1f8a38b98fc65a27e266bb9cc87c76eb8c96c957450d1cff4591ef","id":4134,"name":"DefaultPluginFactory","nameLocation":"2444:20:16","nodeType":"EventDefinition","parameters":{"id":4133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4132,"indexed":false,"mutability":"mutable","name":"defaultPluginFactoryAddress","nameLocation":"2473:27:16","nodeType":"VariableDeclaration","scope":4134,"src":"2465:35:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4131,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:37:16"},"src":"2438:64:16"},{"anonymous":false,"documentation":{"id":4135,"nodeType":"StructuredDocumentation","src":"2506:118:16","text":"@notice Emitted when the vaultFactory address is changed\n @param newVaultFactory The new vaultFactory address"},"eventSelector":"a006ea05a14783821b0248e75d2342cd1681b07509e10a0f08487b080c29dea8","id":4139,"name":"VaultFactory","nameLocation":"2633:12:16","nodeType":"EventDefinition","parameters":{"id":4138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4137,"indexed":false,"mutability":"mutable","name":"newVaultFactory","nameLocation":"2654:15:16","nodeType":"VariableDeclaration","scope":4139,"src":"2646:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4136,"name":"address","nodeType":"ElementaryTypeName","src":"2646:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2645:25:16"},"src":"2627:44:16"},{"documentation":{"id":4140,"nodeType":"StructuredDocumentation","src":"2675:120:16","text":"@notice role that can change communityFee and tickspacing in pools\n @return The hash corresponding to this role"},"functionSelector":"b500a48b","id":4145,"implemented":false,"kind":"function","modifiers":[],"name":"POOLS_ADMINISTRATOR_ROLE","nameLocation":"2807:24:16","nodeType":"FunctionDefinition","parameters":{"id":4141,"nodeType":"ParameterList","parameters":[],"src":"2831:2:16"},"returnParameters":{"id":4144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4145,"src":"2857:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4142,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2857:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2856:9:16"},"scope":4338,"src":"2798:68:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4146,"nodeType":"StructuredDocumentation","src":"2870:108:16","text":"@notice role that can call `createCustomPool` function\n @return The hash corresponding to this role"},"functionSelector":"07810754","id":4151,"implemented":false,"kind":"function","modifiers":[],"name":"CUSTOM_POOL_DEPLOYER","nameLocation":"2990:20:16","nodeType":"FunctionDefinition","parameters":{"id":4147,"nodeType":"ParameterList","parameters":[],"src":"3010:2:16"},"returnParameters":{"id":4150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4151,"src":"3036:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3036:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3035:9:16"},"scope":4338,"src":"2981:64:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4152,"nodeType":"StructuredDocumentation","src":"3049:280:16","text":"@notice Returns `true` if `account` has been granted `role` or `account` is owner.\n @param role The hash corresponding to the role\n @param account The address for which the role is checked\n @return bool Whether the address has this role or the owner role or not"},"functionSelector":"e8ae2b69","id":4161,"implemented":false,"kind":"function","modifiers":[],"name":"hasRoleOrOwner","nameLocation":"3341:14:16","nodeType":"FunctionDefinition","parameters":{"id":4157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4154,"mutability":"mutable","name":"role","nameLocation":"3364:4:16","nodeType":"VariableDeclaration","scope":4161,"src":"3356:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3356:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4156,"mutability":"mutable","name":"account","nameLocation":"3378:7:16","nodeType":"VariableDeclaration","scope":4161,"src":"3370:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4155,"name":"address","nodeType":"ElementaryTypeName","src":"3370:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3355:31:16"},"returnParameters":{"id":4160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4161,"src":"3410:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4158,"name":"bool","nodeType":"ElementaryTypeName","src":"3410:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3409:6:16"},"scope":4338,"src":"3332:84:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4162,"nodeType":"StructuredDocumentation","src":"3420:186:16","text":"@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via transferOwnership(address newOwner)\n @return The address of the factory owner"},"functionSelector":"8da5cb5b","id":4167,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"3618:5:16","nodeType":"FunctionDefinition","parameters":{"id":4163,"nodeType":"ParameterList","parameters":[],"src":"3623:2:16"},"returnParameters":{"id":4166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4167,"src":"3649:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4164,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:9:16"},"scope":4338,"src":"3609:49:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4168,"nodeType":"StructuredDocumentation","src":"3662:97:16","text":"@notice Returns the current poolDeployerAddress\n @return The address of the poolDeployer"},"functionSelector":"3119049a","id":4173,"implemented":false,"kind":"function","modifiers":[],"name":"poolDeployer","nameLocation":"3771:12:16","nodeType":"FunctionDefinition","parameters":{"id":4169,"nodeType":"ParameterList","parameters":[],"src":"3783:2:16"},"returnParameters":{"id":4172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4173,"src":"3809:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4170,"name":"address","nodeType":"ElementaryTypeName","src":"3809:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3808:9:16"},"scope":4338,"src":"3762:56:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4174,"nodeType":"StructuredDocumentation","src":"3822:109:16","text":"@notice Returns the default community fee\n @return Fee which will be set at the creation of the pool"},"functionSelector":"2f8a39dd","id":4179,"implemented":false,"kind":"function","modifiers":[],"name":"defaultCommunityFee","nameLocation":"3943:19:16","nodeType":"FunctionDefinition","parameters":{"id":4175,"nodeType":"ParameterList","parameters":[],"src":"3962:2:16"},"returnParameters":{"id":4178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4179,"src":"3988:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4176,"name":"uint16","nodeType":"ElementaryTypeName","src":"3988:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3987:8:16"},"scope":4338,"src":"3934:62:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4180,"nodeType":"StructuredDocumentation","src":"4000:99:16","text":"@notice Returns the default fee\n @return Fee which will be set at the creation of the pool"},"functionSelector":"5a6c72d0","id":4185,"implemented":false,"kind":"function","modifiers":[],"name":"defaultFee","nameLocation":"4111:10:16","nodeType":"FunctionDefinition","parameters":{"id":4181,"nodeType":"ParameterList","parameters":[],"src":"4121:2:16"},"returnParameters":{"id":4184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4185,"src":"4147:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4182,"name":"uint16","nodeType":"ElementaryTypeName","src":"4147:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4146:8:16"},"scope":4338,"src":"4102:53:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4186,"nodeType":"StructuredDocumentation","src":"4159:115:16","text":"@notice Returns the default tickspacing\n @return Tickspacing which will be set at the creation of the pool"},"functionSelector":"29bc3446","id":4191,"implemented":false,"kind":"function","modifiers":[],"name":"defaultTickspacing","nameLocation":"4286:18:16","nodeType":"FunctionDefinition","parameters":{"id":4187,"nodeType":"ParameterList","parameters":[],"src":"4304:2:16"},"returnParameters":{"id":4190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4191,"src":"4330:5:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4188,"name":"int24","nodeType":"ElementaryTypeName","src":"4330:5:16","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"4329:7:16"},"scope":4338,"src":"4277:60:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4192,"nodeType":"StructuredDocumentation","src":"4341:183:16","text":"@notice Return the current pluginFactory address\n @dev This contract is used to automatically set a plugin address in new liquidity pools\n @return Algebra plugin factory"},"functionSelector":"d0ad2792","id":4198,"implemented":false,"kind":"function","modifiers":[],"name":"defaultPluginFactory","nameLocation":"4536:20:16","nodeType":"FunctionDefinition","parameters":{"id":4193,"nodeType":"ParameterList","parameters":[],"src":"4556:2:16"},"returnParameters":{"id":4197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4198,"src":"4582:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraPluginFactory_$4422","typeString":"contract IAlgebraPluginFactory"},"typeName":{"id":4195,"nodeType":"UserDefinedTypeName","pathNode":{"id":4194,"name":"IAlgebraPluginFactory","nameLocations":["4582:21:16"],"nodeType":"IdentifierPath","referencedDeclaration":4422,"src":"4582:21:16"},"referencedDeclaration":4422,"src":"4582:21:16","typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraPluginFactory_$4422","typeString":"contract IAlgebraPluginFactory"}},"visibility":"internal"}],"src":"4581:23:16"},"scope":4338,"src":"4527:78:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4199,"nodeType":"StructuredDocumentation","src":"4609:180:16","text":"@notice Return the current vaultFactory address\n @dev This contract is used to automatically set a vault address in new liquidity pools\n @return Algebra vault factory"},"functionSelector":"d8a06f73","id":4205,"implemented":false,"kind":"function","modifiers":[],"name":"vaultFactory","nameLocation":"4801:12:16","nodeType":"FunctionDefinition","parameters":{"id":4200,"nodeType":"ParameterList","parameters":[],"src":"4813:2:16"},"returnParameters":{"id":4204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4205,"src":"4839:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraVaultFactory_$5184","typeString":"contract IAlgebraVaultFactory"},"typeName":{"id":4202,"nodeType":"UserDefinedTypeName","pathNode":{"id":4201,"name":"IAlgebraVaultFactory","nameLocations":["4839:20:16"],"nodeType":"IdentifierPath","referencedDeclaration":5184,"src":"4839:20:16"},"referencedDeclaration":5184,"src":"4839:20:16","typeDescriptions":{"typeIdentifier":"t_contract$_IAlgebraVaultFactory_$5184","typeString":"contract IAlgebraVaultFactory"}},"visibility":"internal"}],"src":"4838:22:16"},"scope":4338,"src":"4792:69:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4206,"nodeType":"StructuredDocumentation","src":"4865:302:16","text":"@notice Returns the default communityFee, tickspacing, fee and communityFeeVault for pool\n @return communityFee which will be set at the creation of the pool\n @return tickSpacing which will be set at the creation of the pool\n @return fee which will be set at the creation of the pool"},"functionSelector":"25b355d6","id":4215,"implemented":false,"kind":"function","modifiers":[],"name":"defaultConfigurationForPool","nameLocation":"5179:27:16","nodeType":"FunctionDefinition","parameters":{"id":4207,"nodeType":"ParameterList","parameters":[],"src":"5206:2:16"},"returnParameters":{"id":4214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4209,"mutability":"mutable","name":"communityFee","nameLocation":"5239:12:16","nodeType":"VariableDeclaration","scope":4215,"src":"5232:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4208,"name":"uint16","nodeType":"ElementaryTypeName","src":"5232:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4211,"mutability":"mutable","name":"tickSpacing","nameLocation":"5259:11:16","nodeType":"VariableDeclaration","scope":4215,"src":"5253:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4210,"name":"int24","nodeType":"ElementaryTypeName","src":"5253:5:16","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4213,"mutability":"mutable","name":"fee","nameLocation":"5279:3:16","nodeType":"VariableDeclaration","scope":4215,"src":"5272:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4212,"name":"uint16","nodeType":"ElementaryTypeName","src":"5272:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5231:52:16"},"scope":4338,"src":"5170:114:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4216,"nodeType":"StructuredDocumentation","src":"5288:277:16","text":"@notice Deterministically computes the pool address given the token0 and token1\n @dev The method does not check if such a pool has been created\n @param token0 first token\n @param token1 second token\n @return pool The contract address of the Algebra pool"},"functionSelector":"d8ed2241","id":4225,"implemented":false,"kind":"function","modifiers":[],"name":"computePoolAddress","nameLocation":"5577:18:16","nodeType":"FunctionDefinition","parameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4218,"mutability":"mutable","name":"token0","nameLocation":"5604:6:16","nodeType":"VariableDeclaration","scope":4225,"src":"5596:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4217,"name":"address","nodeType":"ElementaryTypeName","src":"5596:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4220,"mutability":"mutable","name":"token1","nameLocation":"5620:6:16","nodeType":"VariableDeclaration","scope":4225,"src":"5612:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4219,"name":"address","nodeType":"ElementaryTypeName","src":"5612:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5595:32:16"},"returnParameters":{"id":4224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4223,"mutability":"mutable","name":"pool","nameLocation":"5659:4:16","nodeType":"VariableDeclaration","scope":4225,"src":"5651:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4222,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:14:16"},"scope":4338,"src":"5568:97:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4226,"nodeType":"StructuredDocumentation","src":"5669:372:16","text":"@notice Deterministically computes the custom pool address given the customDeployer, token0 and token1\n @dev The method does not check if such a pool has been created\n @param customDeployer the address of custom plugin deployer\n @param token0 first token\n @param token1 second token\n @return customPool The contract address of the Algebra pool"},"functionSelector":"1ba89df4","id":4237,"implemented":false,"kind":"function","modifiers":[],"name":"computeCustomPoolAddress","nameLocation":"6053:24:16","nodeType":"FunctionDefinition","parameters":{"id":4233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4228,"mutability":"mutable","name":"customDeployer","nameLocation":"6086:14:16","nodeType":"VariableDeclaration","scope":4237,"src":"6078:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4227,"name":"address","nodeType":"ElementaryTypeName","src":"6078:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4230,"mutability":"mutable","name":"token0","nameLocation":"6110:6:16","nodeType":"VariableDeclaration","scope":4237,"src":"6102:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4229,"name":"address","nodeType":"ElementaryTypeName","src":"6102:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4232,"mutability":"mutable","name":"token1","nameLocation":"6126:6:16","nodeType":"VariableDeclaration","scope":4237,"src":"6118:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4231,"name":"address","nodeType":"ElementaryTypeName","src":"6118:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6077:56:16"},"returnParameters":{"id":4236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4235,"mutability":"mutable","name":"customPool","nameLocation":"6165:10:16","nodeType":"VariableDeclaration","scope":4237,"src":"6157:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4234,"name":"address","nodeType":"ElementaryTypeName","src":"6157:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6156:20:16"},"scope":4338,"src":"6044:133:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4238,"nodeType":"StructuredDocumentation","src":"6181:352:16","text":"@notice Returns the pool address for a given pair of tokens, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @return pool The pool address"},"functionSelector":"d9a641e1","id":4247,"implemented":false,"kind":"function","modifiers":[],"name":"poolByPair","nameLocation":"6545:10:16","nodeType":"FunctionDefinition","parameters":{"id":4243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4240,"mutability":"mutable","name":"tokenA","nameLocation":"6564:6:16","nodeType":"VariableDeclaration","scope":4247,"src":"6556:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4239,"name":"address","nodeType":"ElementaryTypeName","src":"6556:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4242,"mutability":"mutable","name":"tokenB","nameLocation":"6580:6:16","nodeType":"VariableDeclaration","scope":4247,"src":"6572:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4241,"name":"address","nodeType":"ElementaryTypeName","src":"6572:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6555:32:16"},"returnParameters":{"id":4246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4245,"mutability":"mutable","name":"pool","nameLocation":"6619:4:16","nodeType":"VariableDeclaration","scope":4247,"src":"6611:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4244,"name":"address","nodeType":"ElementaryTypeName","src":"6611:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6610:14:16"},"scope":4338,"src":"6536:89:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4248,"nodeType":"StructuredDocumentation","src":"6629:452:16","text":"@notice Returns the custom pool address for a customDeployer and a given pair of tokens, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param customDeployer The address of custom plugin deployer\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @return customPool The pool address"},"functionSelector":"23da36cc","id":4259,"implemented":false,"kind":"function","modifiers":[],"name":"customPoolByPair","nameLocation":"7093:16:16","nodeType":"FunctionDefinition","parameters":{"id":4255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4250,"mutability":"mutable","name":"customDeployer","nameLocation":"7118:14:16","nodeType":"VariableDeclaration","scope":4259,"src":"7110:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4249,"name":"address","nodeType":"ElementaryTypeName","src":"7110:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4252,"mutability":"mutable","name":"tokenA","nameLocation":"7142:6:16","nodeType":"VariableDeclaration","scope":4259,"src":"7134:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4251,"name":"address","nodeType":"ElementaryTypeName","src":"7134:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4254,"mutability":"mutable","name":"tokenB","nameLocation":"7158:6:16","nodeType":"VariableDeclaration","scope":4259,"src":"7150:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4253,"name":"address","nodeType":"ElementaryTypeName","src":"7150:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7109:56:16"},"returnParameters":{"id":4258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4257,"mutability":"mutable","name":"customPool","nameLocation":"7197:10:16","nodeType":"VariableDeclaration","scope":4259,"src":"7189:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4256,"name":"address","nodeType":"ElementaryTypeName","src":"7189:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7188:20:16"},"scope":4338,"src":"7084:125:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4260,"nodeType":"StructuredDocumentation","src":"7213:197:16","text":"@notice returns keccak256 of AlgebraPool init bytecode.\n @dev the hash value changes with any change in the pool bytecode\n @return Keccak256 hash of AlgebraPool contract init bytecode"},"functionSelector":"dc6fd8ab","id":4265,"implemented":false,"kind":"function","modifiers":[],"name":"POOL_INIT_CODE_HASH","nameLocation":"7422:19:16","nodeType":"FunctionDefinition","parameters":{"id":4261,"nodeType":"ParameterList","parameters":[],"src":"7441:2:16"},"returnParameters":{"id":4264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4265,"src":"7467:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7467:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7466:9:16"},"scope":4338,"src":"7413:63:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4266,"nodeType":"StructuredDocumentation","src":"7480:85:16","text":"@return timestamp The timestamp of the beginning of the renounceOwnership process"},"functionSelector":"084bfff9","id":4271,"implemented":false,"kind":"function","modifiers":[],"name":"renounceOwnershipStartTimestamp","nameLocation":"7577:31:16","nodeType":"FunctionDefinition","parameters":{"id":4267,"nodeType":"ParameterList","parameters":[],"src":"7608:2:16"},"returnParameters":{"id":4270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4269,"mutability":"mutable","name":"timestamp","nameLocation":"7642:9:16","nodeType":"VariableDeclaration","scope":4271,"src":"7634:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4268,"name":"uint256","nodeType":"ElementaryTypeName","src":"7634:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7633:19:16"},"scope":4338,"src":"7568:85:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4272,"nodeType":"StructuredDocumentation","src":"7657:463:16","text":"@notice Creates a pool for the given two tokens\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param data Data for plugin creation\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0.\n The call will revert if the pool already exists or the token arguments are invalid.\n @return pool The address of the newly created pool"},"functionSelector":"321935c6","id":4283,"implemented":false,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"8132:10:16","nodeType":"FunctionDefinition","parameters":{"id":4279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4274,"mutability":"mutable","name":"tokenA","nameLocation":"8151:6:16","nodeType":"VariableDeclaration","scope":4283,"src":"8143:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4273,"name":"address","nodeType":"ElementaryTypeName","src":"8143:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4276,"mutability":"mutable","name":"tokenB","nameLocation":"8167:6:16","nodeType":"VariableDeclaration","scope":4283,"src":"8159:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4275,"name":"address","nodeType":"ElementaryTypeName","src":"8159:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4278,"mutability":"mutable","name":"data","nameLocation":"8190:4:16","nodeType":"VariableDeclaration","scope":4283,"src":"8175:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4277,"name":"bytes","nodeType":"ElementaryTypeName","src":"8175:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8142:53:16"},"returnParameters":{"id":4282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4281,"mutability":"mutable","name":"pool","nameLocation":"8222:4:16","nodeType":"VariableDeclaration","scope":4283,"src":"8214:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4280,"name":"address","nodeType":"ElementaryTypeName","src":"8214:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8213:14:16"},"scope":4338,"src":"8123:105:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4284,"nodeType":"StructuredDocumentation","src":"8232:669:16","text":"@notice Creates a custom pool for the given two tokens using `deployer` contract\n @param deployer The address of plugin deployer, also used for custom pool address calculation\n @param creator The initiator of custom pool creation\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param data The additional data bytes\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0.\n The call will revert if the pool already exists or the token arguments are invalid.\n @return customPool The address of the newly created custom pool"},"functionSelector":"dbbf3db4","id":4299,"implemented":false,"kind":"function","modifiers":[],"name":"createCustomPool","nameLocation":"8913:16:16","nodeType":"FunctionDefinition","parameters":{"id":4295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4286,"mutability":"mutable","name":"deployer","nameLocation":"8943:8:16","nodeType":"VariableDeclaration","scope":4299,"src":"8935:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4285,"name":"address","nodeType":"ElementaryTypeName","src":"8935:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4288,"mutability":"mutable","name":"creator","nameLocation":"8965:7:16","nodeType":"VariableDeclaration","scope":4299,"src":"8957:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4287,"name":"address","nodeType":"ElementaryTypeName","src":"8957:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4290,"mutability":"mutable","name":"tokenA","nameLocation":"8986:6:16","nodeType":"VariableDeclaration","scope":4299,"src":"8978:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4289,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4292,"mutability":"mutable","name":"tokenB","nameLocation":"9006:6:16","nodeType":"VariableDeclaration","scope":4299,"src":"8998:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4291,"name":"address","nodeType":"ElementaryTypeName","src":"8998:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4294,"mutability":"mutable","name":"data","nameLocation":"9033:4:16","nodeType":"VariableDeclaration","scope":4299,"src":"9018:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4293,"name":"bytes","nodeType":"ElementaryTypeName","src":"9018:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8929:112:16"},"returnParameters":{"id":4298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4297,"mutability":"mutable","name":"customPool","nameLocation":"9068:10:16","nodeType":"VariableDeclaration","scope":4299,"src":"9060:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4296,"name":"address","nodeType":"ElementaryTypeName","src":"9060:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9059:20:16"},"scope":4338,"src":"8904:176:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4300,"nodeType":"StructuredDocumentation","src":"9084:142:16","text":"@dev updates default community fee for new pools\n @param newDefaultCommunityFee The new community fee, _must_ be <= MAX_COMMUNITY_FEE"},"functionSelector":"8d5a8711","id":4305,"implemented":false,"kind":"function","modifiers":[],"name":"setDefaultCommunityFee","nameLocation":"9238:22:16","nodeType":"FunctionDefinition","parameters":{"id":4303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4302,"mutability":"mutable","name":"newDefaultCommunityFee","nameLocation":"9268:22:16","nodeType":"VariableDeclaration","scope":4305,"src":"9261:29:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4301,"name":"uint16","nodeType":"ElementaryTypeName","src":"9261:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"9260:31:16"},"returnParameters":{"id":4304,"nodeType":"ParameterList","parameters":[],"src":"9300:0:16"},"scope":4338,"src":"9229:72:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4306,"nodeType":"StructuredDocumentation","src":"9305:112:16","text":"@dev updates default fee for new pools\n @param newDefaultFee The new  fee, _must_ be <= MAX_DEFAULT_FEE"},"functionSelector":"77326584","id":4311,"implemented":false,"kind":"function","modifiers":[],"name":"setDefaultFee","nameLocation":"9429:13:16","nodeType":"FunctionDefinition","parameters":{"id":4309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4308,"mutability":"mutable","name":"newDefaultFee","nameLocation":"9450:13:16","nodeType":"VariableDeclaration","scope":4311,"src":"9443:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4307,"name":"uint16","nodeType":"ElementaryTypeName","src":"9443:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"9442:22:16"},"returnParameters":{"id":4310,"nodeType":"ParameterList","parameters":[],"src":"9473:0:16"},"scope":4338,"src":"9420:54:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4312,"nodeType":"StructuredDocumentation","src":"9478:160:16","text":"@dev updates default tickspacing for new pools\n @param newDefaultTickspacing The new tickspacing, _must_ be <= MAX_TICK_SPACING and >= MIN_TICK_SPACING"},"functionSelector":"f09489ac","id":4317,"implemented":false,"kind":"function","modifiers":[],"name":"setDefaultTickspacing","nameLocation":"9650:21:16","nodeType":"FunctionDefinition","parameters":{"id":4315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4314,"mutability":"mutable","name":"newDefaultTickspacing","nameLocation":"9678:21:16","nodeType":"VariableDeclaration","scope":4317,"src":"9672:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4313,"name":"int24","nodeType":"ElementaryTypeName","src":"9672:5:16","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"9671:29:16"},"returnParameters":{"id":4316,"nodeType":"ParameterList","parameters":[],"src":"9709:0:16"},"scope":4338,"src":"9641:69:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4318,"nodeType":"StructuredDocumentation","src":"9714:105:16","text":"@dev updates pluginFactory address\n @param newDefaultPluginFactory address of new plugin factory"},"functionSelector":"2939dd97","id":4323,"implemented":false,"kind":"function","modifiers":[],"name":"setDefaultPluginFactory","nameLocation":"9831:23:16","nodeType":"FunctionDefinition","parameters":{"id":4321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4320,"mutability":"mutable","name":"newDefaultPluginFactory","nameLocation":"9863:23:16","nodeType":"VariableDeclaration","scope":4323,"src":"9855:31:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4319,"name":"address","nodeType":"ElementaryTypeName","src":"9855:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9854:33:16"},"returnParameters":{"id":4322,"nodeType":"ParameterList","parameters":[],"src":"9896:0:16"},"scope":4338,"src":"9822:75:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4324,"nodeType":"StructuredDocumentation","src":"9901:95:16","text":"@dev updates vaultFactory address\n @param newVaultFactory address of new vault factory"},"functionSelector":"3ea7fbdb","id":4329,"implemented":false,"kind":"function","modifiers":[],"name":"setVaultFactory","nameLocation":"10008:15:16","nodeType":"FunctionDefinition","parameters":{"id":4327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4326,"mutability":"mutable","name":"newVaultFactory","nameLocation":"10032:15:16","nodeType":"VariableDeclaration","scope":4329,"src":"10024:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4325,"name":"address","nodeType":"ElementaryTypeName","src":"10024:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10023:25:16"},"returnParameters":{"id":4328,"nodeType":"ParameterList","parameters":[],"src":"10057:0:16"},"scope":4338,"src":"9999:59:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4330,"nodeType":"StructuredDocumentation","src":"10062:149:16","text":"@notice Starts process of renounceOwnership. After that, a certain period\n of time must pass before the ownership renounce can be completed."},"functionSelector":"469388c4","id":4333,"implemented":false,"kind":"function","modifiers":[],"name":"startRenounceOwnership","nameLocation":"10223:22:16","nodeType":"FunctionDefinition","parameters":{"id":4331,"nodeType":"ParameterList","parameters":[],"src":"10245:2:16"},"returnParameters":{"id":4332,"nodeType":"ParameterList","parameters":[],"src":"10256:0:16"},"scope":4338,"src":"10214:43:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4334,"nodeType":"StructuredDocumentation","src":"10261:65:16","text":"@notice Stops process of renounceOwnership and removes timer."},"functionSelector":"238a1d74","id":4337,"implemented":false,"kind":"function","modifiers":[],"name":"stopRenounceOwnership","nameLocation":"10338:21:16","nodeType":"FunctionDefinition","parameters":{"id":4335,"nodeType":"ParameterList","parameters":[],"src":"10359:2:16"},"returnParameters":{"id":4336,"nodeType":"ParameterList","parameters":[],"src":"10370:0:16"},"scope":4338,"src":"10329:42:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4339,"src":"363:10010:16","usedErrors":[],"usedEvents":[4084,4089,4094,4103,4114,4119,4124,4129,4134,4139]}],"src":"45:10329:16"},"id":16},"contracts/interfaces/IAlgebraPool.sol":{"ast":{"absolutePath":"contracts/interfaces/IAlgebraPool.sol","exportedSymbols":{"IAlgebraPool":[4360],"IAlgebraPoolActions":[4538],"IAlgebraPoolErrors":[4640],"IAlgebraPoolEvents":[4782],"IAlgebraPoolImmutables":[4810],"IAlgebraPoolPermissionedActions":[4858],"IAlgebraPoolState":[5042]},"id":4361,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4340,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:17"},{"absolutePath":"contracts/interfaces/pool/IAlgebraPoolImmutables.sol","file":"./pool/IAlgebraPoolImmutables.sol","id":4341,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4361,"sourceUnit":4811,"src":"71:43:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/pool/IAlgebraPoolState.sol","file":"./pool/IAlgebraPoolState.sol","id":4342,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4361,"sourceUnit":5043,"src":"115:38:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/pool/IAlgebraPoolActions.sol","file":"./pool/IAlgebraPoolActions.sol","id":4343,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4361,"sourceUnit":4539,"src":"154:40:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/pool/IAlgebraPoolPermissionedActions.sol","file":"./pool/IAlgebraPoolPermissionedActions.sol","id":4344,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4361,"sourceUnit":4859,"src":"195:52:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/pool/IAlgebraPoolEvents.sol","file":"./pool/IAlgebraPoolEvents.sol","id":4345,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4361,"sourceUnit":4783,"src":"248:39:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/pool/IAlgebraPoolErrors.sol","file":"./pool/IAlgebraPoolErrors.sol","id":4346,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4361,"sourceUnit":4641,"src":"288:39:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4348,"name":"IAlgebraPoolImmutables","nameLocations":["759:22:17"],"nodeType":"IdentifierPath","referencedDeclaration":4810,"src":"759:22:17"},"id":4349,"nodeType":"InheritanceSpecifier","src":"759:22:17"},{"baseName":{"id":4350,"name":"IAlgebraPoolState","nameLocations":["785:17:17"],"nodeType":"IdentifierPath","referencedDeclaration":5042,"src":"785:17:17"},"id":4351,"nodeType":"InheritanceSpecifier","src":"785:17:17"},{"baseName":{"id":4352,"name":"IAlgebraPoolActions","nameLocations":["806:19:17"],"nodeType":"IdentifierPath","referencedDeclaration":4538,"src":"806:19:17"},"id":4353,"nodeType":"InheritanceSpecifier","src":"806:19:17"},{"baseName":{"id":4354,"name":"IAlgebraPoolPermissionedActions","nameLocations":["829:31:17"],"nodeType":"IdentifierPath","referencedDeclaration":4858,"src":"829:31:17"},"id":4355,"nodeType":"InheritanceSpecifier","src":"829:31:17"},{"baseName":{"id":4356,"name":"IAlgebraPoolEvents","nameLocations":["864:18:17"],"nodeType":"IdentifierPath","referencedDeclaration":4782,"src":"864:18:17"},"id":4357,"nodeType":"InheritanceSpecifier","src":"864:18:17"},{"baseName":{"id":4358,"name":"IAlgebraPoolErrors","nameLocations":["886:18:17"],"nodeType":"IdentifierPath","referencedDeclaration":4640,"src":"886:18:17"},"id":4359,"nodeType":"InheritanceSpecifier","src":"886:18:17"}],"canonicalName":"IAlgebraPool","contractDependencies":[],"contractKind":"interface","documentation":{"id":4347,"nodeType":"StructuredDocumentation","src":"329:402:17","text":"@title The interface for a Algebra Pool\n @dev The pool interface is broken up into many smaller pieces.\n This interface includes custom error definitions and cannot be used in older versions of Solidity.\n For older versions of Solidity use #IAlgebraPoolLegacy\n Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"},"fullyImplemented":false,"id":4360,"linearizedBaseContracts":[4360,4640,4782,4858,4538,5042,4810],"name":"IAlgebraPool","nameLocation":"741:12:17","nodeType":"ContractDefinition","nodes":[],"scope":4361,"src":"731:217:17","usedErrors":[4544,4547,4550,4553,4556,4559,4562,4565,4568,4571,4574,4577,4580,4583,4586,4589,4592,4595,4598,4601,4606,4609,4612,4615,4618,4621,4624,4627,4630,4633,4636,4639],"usedEvents":[4650,4667,4682,4699,4720,4735,4742,4747,4752,4757,4762,4767,4772,4781]}],"src":"45:904:17"},"id":17},"contracts/interfaces/IAlgebraPoolDeployer.sol":{"ast":{"absolutePath":"contracts/interfaces/IAlgebraPoolDeployer.sol","exportedSymbols":{"IAlgebraPoolDeployer":[4390]},"id":4391,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4362,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IAlgebraPoolDeployer","contractDependencies":[],"contractKind":"interface","documentation":{"id":4363,"nodeType":"StructuredDocumentation","src":"71:530:18","text":"@title An interface for a contract that is capable of deploying Algebra Pools\n @notice A contract that constructs a pool must implement this to pass arguments to the pool\n @dev This is used to avoid having constructor arguments in the pool contract, which results in the init code hash\n of the pool being constant allowing the CREATE2 address of the pool to be cheaply computed on-chain.\n Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"},"fullyImplemented":false,"id":4390,"linearizedBaseContracts":[4390],"name":"IAlgebraPoolDeployer","nameLocation":"611:20:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4364,"nodeType":"StructuredDocumentation","src":"636:433:18","text":"@notice Get the parameters to be used in constructing the pool, set transiently during pool creation.\n @dev Called by the pool constructor to fetch the parameters of the pool\n @return plugin The pool associated plugin (if any)\n @return factory The Algebra Factory address\n @return token0 The first token of the pool by address sort order\n @return token1 The second token of the pool by address sort order"},"functionSelector":"04889e26","id":4375,"implemented":false,"kind":"function","modifiers":[],"name":"getDeployParameters","nameLocation":"1081:19:18","nodeType":"FunctionDefinition","parameters":{"id":4365,"nodeType":"ParameterList","parameters":[],"src":"1100:2:18"},"returnParameters":{"id":4374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4367,"mutability":"mutable","name":"plugin","nameLocation":"1134:6:18","nodeType":"VariableDeclaration","scope":4375,"src":"1126:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4366,"name":"address","nodeType":"ElementaryTypeName","src":"1126:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4369,"mutability":"mutable","name":"factory","nameLocation":"1150:7:18","nodeType":"VariableDeclaration","scope":4375,"src":"1142:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4368,"name":"address","nodeType":"ElementaryTypeName","src":"1142:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4371,"mutability":"mutable","name":"token0","nameLocation":"1167:6:18","nodeType":"VariableDeclaration","scope":4375,"src":"1159:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4370,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4373,"mutability":"mutable","name":"token1","nameLocation":"1183:6:18","nodeType":"VariableDeclaration","scope":4375,"src":"1175:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4372,"name":"address","nodeType":"ElementaryTypeName","src":"1175:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1125:65:18"},"scope":4390,"src":"1072:119:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4376,"nodeType":"StructuredDocumentation","src":"1195:341:18","text":"@dev Deploys a pool with the given parameters by transiently setting the parameters in cache.\n @param plugin The pool associated plugin (if any)\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @return pool The deployed pool's address"},"functionSelector":"fd82b73a","id":4389,"implemented":false,"kind":"function","modifiers":[],"name":"deploy","nameLocation":"1548:6:18","nodeType":"FunctionDefinition","parameters":{"id":4385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4378,"mutability":"mutable","name":"plugin","nameLocation":"1563:6:18","nodeType":"VariableDeclaration","scope":4389,"src":"1555:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4377,"name":"address","nodeType":"ElementaryTypeName","src":"1555:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4380,"mutability":"mutable","name":"token0","nameLocation":"1579:6:18","nodeType":"VariableDeclaration","scope":4389,"src":"1571:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4379,"name":"address","nodeType":"ElementaryTypeName","src":"1571:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4382,"mutability":"mutable","name":"token1","nameLocation":"1595:6:18","nodeType":"VariableDeclaration","scope":4389,"src":"1587:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4381,"name":"address","nodeType":"ElementaryTypeName","src":"1587:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4384,"mutability":"mutable","name":"deployer","nameLocation":"1611:8:18","nodeType":"VariableDeclaration","scope":4389,"src":"1603:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4383,"name":"address","nodeType":"ElementaryTypeName","src":"1603:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1554:66:18"},"returnParameters":{"id":4388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4387,"mutability":"mutable","name":"pool","nameLocation":"1647:4:18","nodeType":"VariableDeclaration","scope":4389,"src":"1639:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4386,"name":"address","nodeType":"ElementaryTypeName","src":"1639:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1638:14:18"},"scope":4390,"src":"1539:114:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4391,"src":"601:1054:18","usedErrors":[],"usedEvents":[]}],"src":"45:1611:18"},"id":18},"contracts/interfaces/plugin/IAlgebraPluginFactory.sol":{"ast":{"absolutePath":"contracts/interfaces/plugin/IAlgebraPluginFactory.sol","exportedSymbols":{"IAlgebraPluginFactory":[4422]},"id":4423,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4392,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IAlgebraPluginFactory","contractDependencies":[],"contractKind":"interface","documentation":{"id":4393,"nodeType":"StructuredDocumentation","src":"71:249:19","text":"@title An interface for a contract that is capable of deploying Algebra plugins\n @dev Such a factory can be used for automatic plugin creation for new pools.\n Also a factory be used as an entry point for custom (additional) pools creation"},"fullyImplemented":false,"id":4422,"linearizedBaseContracts":[4422],"name":"IAlgebraPluginFactory","nameLocation":"330:21:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4394,"nodeType":"StructuredDocumentation","src":"356:364:19","text":"@notice Deploys new plugin contract for pool\n @param pool The address of the new pool\n @param creator The address that initiated the pool creation\n @param deployer The address of new plugin deployer contract (0 if not used)\n @param token0 First token of the pool\n @param token1 Second token of the pool\n @return New plugin address"},"functionSelector":"1d0338d9","id":4411,"implemented":false,"kind":"function","modifiers":[],"name":"beforeCreatePoolHook","nameLocation":"732:20:19","nodeType":"FunctionDefinition","parameters":{"id":4407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4396,"mutability":"mutable","name":"pool","nameLocation":"766:4:19","nodeType":"VariableDeclaration","scope":4411,"src":"758:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4395,"name":"address","nodeType":"ElementaryTypeName","src":"758:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4398,"mutability":"mutable","name":"creator","nameLocation":"784:7:19","nodeType":"VariableDeclaration","scope":4411,"src":"776:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4397,"name":"address","nodeType":"ElementaryTypeName","src":"776:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4400,"mutability":"mutable","name":"deployer","nameLocation":"805:8:19","nodeType":"VariableDeclaration","scope":4411,"src":"797:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4399,"name":"address","nodeType":"ElementaryTypeName","src":"797:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4402,"mutability":"mutable","name":"token0","nameLocation":"827:6:19","nodeType":"VariableDeclaration","scope":4411,"src":"819:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4401,"name":"address","nodeType":"ElementaryTypeName","src":"819:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4404,"mutability":"mutable","name":"token1","nameLocation":"847:6:19","nodeType":"VariableDeclaration","scope":4411,"src":"839:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4403,"name":"address","nodeType":"ElementaryTypeName","src":"839:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4406,"mutability":"mutable","name":"data","nameLocation":"874:4:19","nodeType":"VariableDeclaration","scope":4411,"src":"859:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4405,"name":"bytes","nodeType":"ElementaryTypeName","src":"859:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"752:130:19"},"returnParameters":{"id":4410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4411,"src":"901:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4408,"name":"address","nodeType":"ElementaryTypeName","src":"901:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"900:9:19"},"scope":4422,"src":"723:187:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4412,"nodeType":"StructuredDocumentation","src":"914:211:19","text":"@notice Called after the pool is created\n @param plugin The plugin address\n @param pool The address of the new pool\n @param deployer The address of new plugin deployer contract (0 if not used)"},"functionSelector":"8d5ef8d1","id":4421,"implemented":false,"kind":"function","modifiers":[],"name":"afterCreatePoolHook","nameLocation":"1137:19:19","nodeType":"FunctionDefinition","parameters":{"id":4419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4414,"mutability":"mutable","name":"plugin","nameLocation":"1165:6:19","nodeType":"VariableDeclaration","scope":4421,"src":"1157:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4413,"name":"address","nodeType":"ElementaryTypeName","src":"1157:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4416,"mutability":"mutable","name":"pool","nameLocation":"1181:4:19","nodeType":"VariableDeclaration","scope":4421,"src":"1173:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4415,"name":"address","nodeType":"ElementaryTypeName","src":"1173:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4418,"mutability":"mutable","name":"deployer","nameLocation":"1195:8:19","nodeType":"VariableDeclaration","scope":4421,"src":"1187:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4417,"name":"address","nodeType":"ElementaryTypeName","src":"1187:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1156:48:19"},"returnParameters":{"id":4420,"nodeType":"ParameterList","parameters":[],"src":"1213:0:19"},"scope":4422,"src":"1128:86:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4423,"src":"320:896:19","usedErrors":[],"usedEvents":[]}],"src":"45:1172:19"},"id":19},"contracts/interfaces/pool/IAlgebraPoolActions.sol":{"ast":{"absolutePath":"contracts/interfaces/pool/IAlgebraPoolActions.sol","exportedSymbols":{"IAlgebraPoolActions":[4538]},"id":4539,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4424,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IAlgebraPoolActions","contractDependencies":[],"contractKind":"interface","documentation":{"id":4425,"nodeType":"StructuredDocumentation","src":"71:173:20","text":"@title Permissionless pool actions\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"},"fullyImplemented":false,"id":4538,"linearizedBaseContracts":[4538],"name":"IAlgebraPoolActions","nameLocation":"254:19:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4426,"nodeType":"StructuredDocumentation","src":"278:304:20","text":"@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @dev Initialization should be done in one transaction with pool creation to avoid front-running\n @param initialPrice The initial sqrt price of the pool as a Q64.96"},"functionSelector":"f637731d","id":4431,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"594:10:20","nodeType":"FunctionDefinition","parameters":{"id":4429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4428,"mutability":"mutable","name":"initialPrice","nameLocation":"613:12:20","nodeType":"VariableDeclaration","scope":4431,"src":"605:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4427,"name":"uint160","nodeType":"ElementaryTypeName","src":"605:7:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"604:22:20"},"returnParameters":{"id":4430,"nodeType":"ParameterList","parameters":[],"src":"635:0:20"},"scope":4538,"src":"585:51:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4432,"nodeType":"StructuredDocumentation","src":"640:1184:20","text":"@notice Adds liquidity for the given recipient/bottomTick/topTick position\n @dev The caller of this method receives a callback in the form of IAlgebraMintCallback#algebraMintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on bottomTick, topTick, the amount of liquidity, and the current price.\n @param leftoversRecipient The address which will receive potential surplus of paid tokens\n @param recipient The address for which the liquidity will be created\n @param bottomTick The lower tick of the position in which to add liquidity\n @param topTick The upper tick of the position in which to add liquidity\n @param liquidityDesired The desired amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return liquidityActual The actual minted amount of liquidity"},"functionSelector":"aafe29c0","id":4453,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1836:4:20","nodeType":"FunctionDefinition","parameters":{"id":4445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4434,"mutability":"mutable","name":"leftoversRecipient","nameLocation":"1854:18:20","nodeType":"VariableDeclaration","scope":4453,"src":"1846:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4433,"name":"address","nodeType":"ElementaryTypeName","src":"1846:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4436,"mutability":"mutable","name":"recipient","nameLocation":"1886:9:20","nodeType":"VariableDeclaration","scope":4453,"src":"1878:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4435,"name":"address","nodeType":"ElementaryTypeName","src":"1878:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4438,"mutability":"mutable","name":"bottomTick","nameLocation":"1907:10:20","nodeType":"VariableDeclaration","scope":4453,"src":"1901:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4437,"name":"int24","nodeType":"ElementaryTypeName","src":"1901:5:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4440,"mutability":"mutable","name":"topTick","nameLocation":"1929:7:20","nodeType":"VariableDeclaration","scope":4453,"src":"1923:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4439,"name":"int24","nodeType":"ElementaryTypeName","src":"1923:5:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4442,"mutability":"mutable","name":"liquidityDesired","nameLocation":"1950:16:20","nodeType":"VariableDeclaration","scope":4453,"src":"1942:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4441,"name":"uint128","nodeType":"ElementaryTypeName","src":"1942:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4444,"mutability":"mutable","name":"data","nameLocation":"1987:4:20","nodeType":"VariableDeclaration","scope":4453,"src":"1972:19:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4443,"name":"bytes","nodeType":"ElementaryTypeName","src":"1972:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1840:155:20"},"returnParameters":{"id":4452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4447,"mutability":"mutable","name":"amount0","nameLocation":"2022:7:20","nodeType":"VariableDeclaration","scope":4453,"src":"2014:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2014:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4449,"mutability":"mutable","name":"amount1","nameLocation":"2039:7:20","nodeType":"VariableDeclaration","scope":4453,"src":"2031:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4448,"name":"uint256","nodeType":"ElementaryTypeName","src":"2031:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4451,"mutability":"mutable","name":"liquidityActual","nameLocation":"2056:15:20","nodeType":"VariableDeclaration","scope":4453,"src":"2048:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4450,"name":"uint128","nodeType":"ElementaryTypeName","src":"2048:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2013:59:20"},"scope":4538,"src":"1827:246:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4454,"nodeType":"StructuredDocumentation","src":"2077:1030:20","text":"@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param bottomTick The lower tick of the position for which to collect fees\n @param topTick The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"},"functionSelector":"4f1eb3d8","id":4471,"implemented":false,"kind":"function","modifiers":[],"name":"collect","nameLocation":"3119:7:20","nodeType":"FunctionDefinition","parameters":{"id":4465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4456,"mutability":"mutable","name":"recipient","nameLocation":"3140:9:20","nodeType":"VariableDeclaration","scope":4471,"src":"3132:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4455,"name":"address","nodeType":"ElementaryTypeName","src":"3132:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4458,"mutability":"mutable","name":"bottomTick","nameLocation":"3161:10:20","nodeType":"VariableDeclaration","scope":4471,"src":"3155:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4457,"name":"int24","nodeType":"ElementaryTypeName","src":"3155:5:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4460,"mutability":"mutable","name":"topTick","nameLocation":"3183:7:20","nodeType":"VariableDeclaration","scope":4471,"src":"3177:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4459,"name":"int24","nodeType":"ElementaryTypeName","src":"3177:5:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4462,"mutability":"mutable","name":"amount0Requested","nameLocation":"3204:16:20","nodeType":"VariableDeclaration","scope":4471,"src":"3196:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4461,"name":"uint128","nodeType":"ElementaryTypeName","src":"3196:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4464,"mutability":"mutable","name":"amount1Requested","nameLocation":"3234:16:20","nodeType":"VariableDeclaration","scope":4471,"src":"3226:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4463,"name":"uint128","nodeType":"ElementaryTypeName","src":"3226:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"3126:128:20"},"returnParameters":{"id":4470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4467,"mutability":"mutable","name":"amount0","nameLocation":"3281:7:20","nodeType":"VariableDeclaration","scope":4471,"src":"3273:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4466,"name":"uint128","nodeType":"ElementaryTypeName","src":"3273:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4469,"mutability":"mutable","name":"amount1","nameLocation":"3298:7:20","nodeType":"VariableDeclaration","scope":4471,"src":"3290:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4468,"name":"uint128","nodeType":"ElementaryTypeName","src":"3290:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"3272:34:20"},"scope":4538,"src":"3110:197:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4472,"nodeType":"StructuredDocumentation","src":"3311:687:20","text":"@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param bottomTick The lower tick of the position for which to burn liquidity\n @param topTick The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @param data Any data that should be passed through to the plugin\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"},"functionSelector":"3b3bc70e","id":4487,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"4010:4:20","nodeType":"FunctionDefinition","parameters":{"id":4481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4474,"mutability":"mutable","name":"bottomTick","nameLocation":"4021:10:20","nodeType":"VariableDeclaration","scope":4487,"src":"4015:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4473,"name":"int24","nodeType":"ElementaryTypeName","src":"4015:5:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4476,"mutability":"mutable","name":"topTick","nameLocation":"4039:7:20","nodeType":"VariableDeclaration","scope":4487,"src":"4033:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4475,"name":"int24","nodeType":"ElementaryTypeName","src":"4033:5:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4478,"mutability":"mutable","name":"amount","nameLocation":"4056:6:20","nodeType":"VariableDeclaration","scope":4487,"src":"4048:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4477,"name":"uint128","nodeType":"ElementaryTypeName","src":"4048:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4480,"mutability":"mutable","name":"data","nameLocation":"4079:4:20","nodeType":"VariableDeclaration","scope":4487,"src":"4064:19:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4479,"name":"bytes","nodeType":"ElementaryTypeName","src":"4064:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4014:70:20"},"returnParameters":{"id":4486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4483,"mutability":"mutable","name":"amount0","nameLocation":"4111:7:20","nodeType":"VariableDeclaration","scope":4487,"src":"4103:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4482,"name":"uint256","nodeType":"ElementaryTypeName","src":"4103:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4485,"mutability":"mutable","name":"amount1","nameLocation":"4128:7:20","nodeType":"VariableDeclaration","scope":4487,"src":"4120:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4484,"name":"uint256","nodeType":"ElementaryTypeName","src":"4120:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4102:34:20"},"scope":4538,"src":"4001:136:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4488,"nodeType":"StructuredDocumentation","src":"4141:1055:20","text":"@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IAlgebraSwapCallback#algebraSwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroToOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountRequired The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param limitSqrtPrice The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback. If using the Router it should contain SwapRouter#SwapCallbackData\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"},"functionSelector":"128acb08","id":4505,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"5208:4:20","nodeType":"FunctionDefinition","parameters":{"id":4499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4490,"mutability":"mutable","name":"recipient","nameLocation":"5226:9:20","nodeType":"VariableDeclaration","scope":4505,"src":"5218:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4489,"name":"address","nodeType":"ElementaryTypeName","src":"5218:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4492,"mutability":"mutable","name":"zeroToOne","nameLocation":"5246:9:20","nodeType":"VariableDeclaration","scope":4505,"src":"5241:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4491,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4494,"mutability":"mutable","name":"amountRequired","nameLocation":"5268:14:20","nodeType":"VariableDeclaration","scope":4505,"src":"5261:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4493,"name":"int256","nodeType":"ElementaryTypeName","src":"5261:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4496,"mutability":"mutable","name":"limitSqrtPrice","nameLocation":"5296:14:20","nodeType":"VariableDeclaration","scope":4505,"src":"5288:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4495,"name":"uint160","nodeType":"ElementaryTypeName","src":"5288:7:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":4498,"mutability":"mutable","name":"data","nameLocation":"5331:4:20","nodeType":"VariableDeclaration","scope":4505,"src":"5316:19:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4497,"name":"bytes","nodeType":"ElementaryTypeName","src":"5316:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5212:127:20"},"returnParameters":{"id":4504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4501,"mutability":"mutable","name":"amount0","nameLocation":"5365:7:20","nodeType":"VariableDeclaration","scope":4505,"src":"5358:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4500,"name":"int256","nodeType":"ElementaryTypeName","src":"5358:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4503,"mutability":"mutable","name":"amount1","nameLocation":"5381:7:20","nodeType":"VariableDeclaration","scope":4505,"src":"5374:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4502,"name":"int256","nodeType":"ElementaryTypeName","src":"5374:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"5357:32:20"},"scope":4538,"src":"5199:191:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4506,"nodeType":"StructuredDocumentation","src":"5394:1257:20","text":"@notice Swap token0 for token1, or token1 for token0 with prepayment\n @dev The caller of this method receives a callback in the form of IAlgebraSwapCallback#algebraSwapCallback\n caller must send tokens in callback before swap calculation\n the actually sent amount of tokens is used for further calculations\n @param leftoversRecipient The address which will receive potential surplus of paid tokens\n @param recipient The address to receive the output of the swap\n @param zeroToOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountToSell The amount of the swap, only positive (exact input) amount allowed\n @param limitSqrtPrice The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback. If using the Router it should contain SwapRouter#SwapCallbackData\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"},"functionSelector":"9e4e0227","id":4525,"implemented":false,"kind":"function","modifiers":[],"name":"swapWithPaymentInAdvance","nameLocation":"6663:24:20","nodeType":"FunctionDefinition","parameters":{"id":4519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4508,"mutability":"mutable","name":"leftoversRecipient","nameLocation":"6701:18:20","nodeType":"VariableDeclaration","scope":4525,"src":"6693:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4507,"name":"address","nodeType":"ElementaryTypeName","src":"6693:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4510,"mutability":"mutable","name":"recipient","nameLocation":"6733:9:20","nodeType":"VariableDeclaration","scope":4525,"src":"6725:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4509,"name":"address","nodeType":"ElementaryTypeName","src":"6725:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4512,"mutability":"mutable","name":"zeroToOne","nameLocation":"6753:9:20","nodeType":"VariableDeclaration","scope":4525,"src":"6748:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4511,"name":"bool","nodeType":"ElementaryTypeName","src":"6748:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4514,"mutability":"mutable","name":"amountToSell","nameLocation":"6775:12:20","nodeType":"VariableDeclaration","scope":4525,"src":"6768:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4513,"name":"int256","nodeType":"ElementaryTypeName","src":"6768:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4516,"mutability":"mutable","name":"limitSqrtPrice","nameLocation":"6801:14:20","nodeType":"VariableDeclaration","scope":4525,"src":"6793:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4515,"name":"uint160","nodeType":"ElementaryTypeName","src":"6793:7:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":4518,"mutability":"mutable","name":"data","nameLocation":"6836:4:20","nodeType":"VariableDeclaration","scope":4525,"src":"6821:19:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4517,"name":"bytes","nodeType":"ElementaryTypeName","src":"6821:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6687:157:20"},"returnParameters":{"id":4524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4521,"mutability":"mutable","name":"amount0","nameLocation":"6870:7:20","nodeType":"VariableDeclaration","scope":4525,"src":"6863:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4520,"name":"int256","nodeType":"ElementaryTypeName","src":"6863:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4523,"mutability":"mutable","name":"amount1","nameLocation":"6886:7:20","nodeType":"VariableDeclaration","scope":4525,"src":"6879:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4522,"name":"int256","nodeType":"ElementaryTypeName","src":"6879:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"6862:32:20"},"scope":4538,"src":"6654:241:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4526,"nodeType":"StructuredDocumentation","src":"6899:701:20","text":"@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IAlgebraFlashCallback#algebraFlashCallback\n @dev All excess tokens paid in the callback are distributed to currently in-range liquidity providers as an additional fee.\n If there are no in-range liquidity providers, the fee will be transferred to the first active provider in the future\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"},"functionSelector":"490e6cbc","id":4537,"implemented":false,"kind":"function","modifiers":[],"name":"flash","nameLocation":"7612:5:20","nodeType":"FunctionDefinition","parameters":{"id":4535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4528,"mutability":"mutable","name":"recipient","nameLocation":"7626:9:20","nodeType":"VariableDeclaration","scope":4537,"src":"7618:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4527,"name":"address","nodeType":"ElementaryTypeName","src":"7618:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4530,"mutability":"mutable","name":"amount0","nameLocation":"7645:7:20","nodeType":"VariableDeclaration","scope":4537,"src":"7637:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4529,"name":"uint256","nodeType":"ElementaryTypeName","src":"7637:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4532,"mutability":"mutable","name":"amount1","nameLocation":"7662:7:20","nodeType":"VariableDeclaration","scope":4537,"src":"7654:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4531,"name":"uint256","nodeType":"ElementaryTypeName","src":"7654:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4534,"mutability":"mutable","name":"data","nameLocation":"7686:4:20","nodeType":"VariableDeclaration","scope":4537,"src":"7671:19:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4533,"name":"bytes","nodeType":"ElementaryTypeName","src":"7671:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7617:74:20"},"returnParameters":{"id":4536,"nodeType":"ParameterList","parameters":[],"src":"7700:0:20"},"scope":4538,"src":"7603:98:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4539,"src":"244:7459:20","usedErrors":[],"usedEvents":[]}],"src":"45:7659:20"},"id":20},"contracts/interfaces/pool/IAlgebraPoolErrors.sol":{"ast":{"absolutePath":"contracts/interfaces/pool/IAlgebraPoolErrors.sol","exportedSymbols":{"IAlgebraPoolErrors":[4640]},"id":4641,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4540,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IAlgebraPoolErrors","contractDependencies":[],"contractKind":"interface","documentation":{"id":4541,"nodeType":"StructuredDocumentation","src":"71:209:21","text":"@title Errors emitted by a pool\n @notice Contains custom errors emitted by the pool\n @dev Custom errors are separated from the common pool interface for compatibility with older versions of Solidity"},"fullyImplemented":true,"id":4640,"linearizedBaseContracts":[4640],"name":"IAlgebraPoolErrors","nameLocation":"290:18:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4542,"nodeType":"StructuredDocumentation","src":"343:43:21","text":"@notice Emitted by the reentrancy guard"},"errorSelector":"cf309012","id":4544,"name":"locked","nameLocation":"395:6:21","nodeType":"ErrorDefinition","parameters":{"id":4543,"nodeType":"ParameterList","parameters":[],"src":"401:2:21"},"src":"389:15:21"},{"documentation":{"id":4545,"nodeType":"StructuredDocumentation","src":"408:48:21","text":"@notice Emitted if arithmetic error occurred"},"errorSelector":"8995290f","id":4547,"name":"arithmeticError","nameLocation":"465:15:21","nodeType":"ErrorDefinition","parameters":{"id":4546,"nodeType":"ParameterList","parameters":[],"src":"480:2:21"},"src":"459:24:21"},{"documentation":{"id":4548,"nodeType":"StructuredDocumentation","src":"487:70:21","text":"@notice Emitted if an attempt is made to initialize the pool twice"},"errorSelector":"52669adc","id":4550,"name":"alreadyInitialized","nameLocation":"566:18:21","nodeType":"ErrorDefinition","parameters":{"id":4549,"nodeType":"ParameterList","parameters":[],"src":"584:2:21"},"src":"560:27:21"},{"documentation":{"id":4551,"nodeType":"StructuredDocumentation","src":"591:79:21","text":"@notice Emitted if an attempt is made to mint or swap in uninitialized pool"},"errorSelector":"812eb655","id":4553,"name":"notInitialized","nameLocation":"679:14:21","nodeType":"ErrorDefinition","parameters":{"id":4552,"nodeType":"ParameterList","parameters":[],"src":"693:2:21"},"src":"673:23:21"},{"documentation":{"id":4554,"nodeType":"StructuredDocumentation","src":"700:69:21","text":"@notice Emitted if 0 is passed as amountRequired to swap function"},"errorSelector":"79db9840","id":4556,"name":"zeroAmountRequired","nameLocation":"778:18:21","nodeType":"ErrorDefinition","parameters":{"id":4555,"nodeType":"ParameterList","parameters":[],"src":"796:2:21"},"src":"772:27:21"},{"documentation":{"id":4557,"nodeType":"StructuredDocumentation","src":"803:82:21","text":"@notice Emitted if invalid amount is passed as amountRequired to swap function"},"errorSelector":"69967402","id":4559,"name":"invalidAmountRequired","nameLocation":"894:21:21","nodeType":"ErrorDefinition","parameters":{"id":4558,"nodeType":"ParameterList","parameters":[],"src":"915:2:21"},"src":"888:30:21"},{"documentation":{"id":4560,"nodeType":"StructuredDocumentation","src":"922:69:21","text":"@notice Emitted if plugin fee param greater than fee/override fee"},"errorSelector":"15b2afa9","id":4562,"name":"incorrectPluginFee","nameLocation":"1000:18:21","nodeType":"ErrorDefinition","parameters":{"id":4561,"nodeType":"ParameterList","parameters":[],"src":"1018:2:21"},"src":"994:27:21"},{"documentation":{"id":4563,"nodeType":"StructuredDocumentation","src":"1025:73:21","text":"@notice Emitted if the pool received fewer tokens than it should have"},"errorSelector":"fb5b5414","id":4565,"name":"insufficientInputAmount","nameLocation":"1107:23:21","nodeType":"ErrorDefinition","parameters":{"id":4564,"nodeType":"ParameterList","parameters":[],"src":"1130:2:21"},"src":"1101:32:21"},{"documentation":{"id":4566,"nodeType":"StructuredDocumentation","src":"1137:66:21","text":"@notice Emitted if there was an attempt to mint zero liquidity"},"errorSelector":"e6ace6df","id":4568,"name":"zeroLiquidityDesired","nameLocation":"1212:20:21","nodeType":"ErrorDefinition","parameters":{"id":4567,"nodeType":"ParameterList","parameters":[],"src":"1232:2:21"},"src":"1206:29:21"},{"documentation":{"id":4569,"nodeType":"StructuredDocumentation","src":"1238:105:21","text":"@notice Emitted if actual amount of liquidity is zero (due to insufficient amount of tokens received)"},"errorSelector":"beba2a6c","id":4571,"name":"zeroLiquidityActual","nameLocation":"1352:19:21","nodeType":"ErrorDefinition","parameters":{"id":4570,"nodeType":"ParameterList","parameters":[],"src":"1371:2:21"},"src":"1346:28:21"},{"documentation":{"id":4572,"nodeType":"StructuredDocumentation","src":"1378:86:21","text":"@notice Emitted if the pool received fewer tokens0 after flash than it should have"},"errorSelector":"6dbca1fe","id":4574,"name":"flashInsufficientPaid0","nameLocation":"1473:22:21","nodeType":"ErrorDefinition","parameters":{"id":4573,"nodeType":"ParameterList","parameters":[],"src":"1495:2:21"},"src":"1467:31:21"},{"documentation":{"id":4575,"nodeType":"StructuredDocumentation","src":"1501:86:21","text":"@notice Emitted if the pool received fewer tokens1 after flash than it should have"},"errorSelector":"c998149f","id":4577,"name":"flashInsufficientPaid1","nameLocation":"1596:22:21","nodeType":"ErrorDefinition","parameters":{"id":4576,"nodeType":"ParameterList","parameters":[],"src":"1618:2:21"},"src":"1590:31:21"},{"documentation":{"id":4578,"nodeType":"StructuredDocumentation","src":"1625:56:21","text":"@notice Emitted if limitSqrtPrice param is incorrect"},"errorSelector":"16626723","id":4580,"name":"invalidLimitSqrtPrice","nameLocation":"1690:21:21","nodeType":"ErrorDefinition","parameters":{"id":4579,"nodeType":"ParameterList","parameters":[],"src":"1711:2:21"},"src":"1684:30:21"},{"documentation":{"id":4581,"nodeType":"StructuredDocumentation","src":"1718:49:21","text":"@notice Tick must be divisible by tickspacing"},"errorSelector":"5f6e14f3","id":4583,"name":"tickIsNotSpaced","nameLocation":"1776:15:21","nodeType":"ErrorDefinition","parameters":{"id":4582,"nodeType":"ParameterList","parameters":[],"src":"1791:2:21"},"src":"1770:24:21"},{"documentation":{"id":4584,"nodeType":"StructuredDocumentation","src":"1798:104:21","text":"@notice Emitted if a method is called that is accessible only to the factory owner or dedicated role"},"errorSelector":"932984d2","id":4586,"name":"notAllowed","nameLocation":"1911:10:21","nodeType":"ErrorDefinition","parameters":{"id":4585,"nodeType":"ParameterList","parameters":[],"src":"1921:2:21"},"src":"1905:19:21"},{"documentation":{"id":4587,"nodeType":"StructuredDocumentation","src":"1928:65:21","text":"@notice Emitted if new tick spacing exceeds max allowed value"},"errorSelector":"afe09f44","id":4589,"name":"invalidNewTickSpacing","nameLocation":"2002:21:21","nodeType":"ErrorDefinition","parameters":{"id":4588,"nodeType":"ParameterList","parameters":[],"src":"2023:2:21"},"src":"1996:30:21"},{"documentation":{"id":4590,"nodeType":"StructuredDocumentation","src":"2029:66:21","text":"@notice Emitted if new community fee exceeds max allowed value"},"errorSelector":"a709b9af","id":4592,"name":"invalidNewCommunityFee","nameLocation":"2104:22:21","nodeType":"ErrorDefinition","parameters":{"id":4591,"nodeType":"ParameterList","parameters":[],"src":"2126:2:21"},"src":"2098:31:21"},{"documentation":{"id":4593,"nodeType":"StructuredDocumentation","src":"2133:102:21","text":"@notice Emitted if an attempt is made to manually change the fee value, but dynamic fee is enabled"},"errorSelector":"d39b8e0e","id":4595,"name":"dynamicFeeActive","nameLocation":"2244:16:21","nodeType":"ErrorDefinition","parameters":{"id":4594,"nodeType":"ParameterList","parameters":[],"src":"2260:2:21"},"src":"2238:25:21"},{"documentation":{"id":4596,"nodeType":"StructuredDocumentation","src":"2266:104:21","text":"@notice Emitted if an attempt is made by plugin to change the fee value, but dynamic fee is disabled"},"errorSelector":"3a4528ef","id":4598,"name":"dynamicFeeDisabled","nameLocation":"2379:18:21","nodeType":"ErrorDefinition","parameters":{"id":4597,"nodeType":"ParameterList","parameters":[],"src":"2397:2:21"},"src":"2373:27:21"},{"documentation":{"id":4599,"nodeType":"StructuredDocumentation","src":"2403:109:21","text":"@notice Emitted if an attempt is made to change the plugin configuration, but the plugin is not connected"},"errorSelector":"9e727ce3","id":4601,"name":"pluginIsNotConnected","nameLocation":"2521:20:21","nodeType":"ErrorDefinition","parameters":{"id":4600,"nodeType":"ParameterList","parameters":[],"src":"2541:2:21"},"src":"2515:29:21"},{"documentation":{"id":4602,"nodeType":"StructuredDocumentation","src":"2547:124:21","text":"@notice Emitted if a plugin returns invalid selector after hook call\n @param expectedSelector The expected selector"},"errorSelector":"d3f5153b","id":4606,"name":"invalidHookResponse","nameLocation":"2680:19:21","nodeType":"ErrorDefinition","parameters":{"id":4605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4604,"mutability":"mutable","name":"expectedSelector","nameLocation":"2707:16:21","nodeType":"VariableDeclaration","scope":4606,"src":"2700:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4603,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2700:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2699:25:21"},"src":"2674:51:21"},{"documentation":{"id":4607,"nodeType":"StructuredDocumentation","src":"2768:43:21","text":"@notice Emitted if liquidity underflows"},"errorSelector":"1301f748","id":4609,"name":"liquiditySub","nameLocation":"2820:12:21","nodeType":"ErrorDefinition","parameters":{"id":4608,"nodeType":"ParameterList","parameters":[],"src":"2832:2:21"},"src":"2814:21:21"},{"documentation":{"id":4610,"nodeType":"StructuredDocumentation","src":"2838:42:21","text":"@notice Emitted if liquidity overflows"},"errorSelector":"997402f2","id":4612,"name":"liquidityAdd","nameLocation":"2889:12:21","nodeType":"ErrorDefinition","parameters":{"id":4611,"nodeType":"ParameterList","parameters":[],"src":"2901:2:21"},"src":"2883:21:21"},{"documentation":{"id":4613,"nodeType":"StructuredDocumentation","src":"2948:78:21","text":"@notice Emitted if the topTick param not greater then the bottomTick param"},"errorSelector":"d9a841a7","id":4615,"name":"topTickLowerOrEqBottomTick","nameLocation":"3035:26:21","nodeType":"ErrorDefinition","parameters":{"id":4614,"nodeType":"ParameterList","parameters":[],"src":"3061:2:21"},"src":"3029:35:21"},{"documentation":{"id":4616,"nodeType":"StructuredDocumentation","src":"3067:75:21","text":"@notice Emitted if the bottomTick param is lower than min allowed value"},"errorSelector":"746b1fc4","id":4618,"name":"bottomTickLowerThanMIN","nameLocation":"3151:22:21","nodeType":"ErrorDefinition","parameters":{"id":4617,"nodeType":"ParameterList","parameters":[],"src":"3173:2:21"},"src":"3145:31:21"},{"documentation":{"id":4619,"nodeType":"StructuredDocumentation","src":"3179:74:21","text":"@notice Emitted if the topTick param is greater than max allowed value"},"errorSelector":"1445443d","id":4621,"name":"topTickAboveMAX","nameLocation":"3262:15:21","nodeType":"ErrorDefinition","parameters":{"id":4620,"nodeType":"ParameterList","parameters":[],"src":"3277:2:21"},"src":"3256:24:21"},{"documentation":{"id":4622,"nodeType":"StructuredDocumentation","src":"3283:98:21","text":"@notice Emitted if the liquidity value associated with the tick exceeds MAX_LIQUIDITY_PER_TICK"},"errorSelector":"25b8364a","id":4624,"name":"liquidityOverflow","nameLocation":"3390:17:21","nodeType":"ErrorDefinition","parameters":{"id":4623,"nodeType":"ParameterList","parameters":[],"src":"3407:2:21"},"src":"3384:26:21"},{"documentation":{"id":4625,"nodeType":"StructuredDocumentation","src":"3413:80:21","text":"@notice Emitted if an attempt is made to interact with an uninitialized tick"},"errorSelector":"0d6e0949","id":4627,"name":"tickIsNotInitialized","nameLocation":"3502:20:21","nodeType":"ErrorDefinition","parameters":{"id":4626,"nodeType":"ParameterList","parameters":[],"src":"3522:2:21"},"src":"3496:29:21"},{"documentation":{"id":4628,"nodeType":"StructuredDocumentation","src":"3528:140:21","text":"@notice Emitted if there is an attempt to insert a new tick into the list of ticks with incorrect indexes of the previous and next ticks"},"errorSelector":"e45ac17d","id":4630,"name":"tickInvalidLinks","nameLocation":"3677:16:21","nodeType":"ErrorDefinition","parameters":{"id":4629,"nodeType":"ParameterList","parameters":[],"src":"3693:2:21"},"src":"3671:25:21"},{"documentation":{"id":4631,"nodeType":"StructuredDocumentation","src":"3738:55:21","text":"@notice Emitted if token transfer failed internally"},"errorSelector":"e465903e","id":4633,"name":"transferFailed","nameLocation":"3802:14:21","nodeType":"ErrorDefinition","parameters":{"id":4632,"nodeType":"ParameterList","parameters":[],"src":"3816:2:21"},"src":"3796:23:21"},{"documentation":{"id":4634,"nodeType":"StructuredDocumentation","src":"3857:94:21","text":"@notice Emitted if tick is greater than the maximum or less than the minimum allowed value"},"errorSelector":"3c10250f","id":4636,"name":"tickOutOfRange","nameLocation":"3960:14:21","nodeType":"ErrorDefinition","parameters":{"id":4635,"nodeType":"ParameterList","parameters":[],"src":"3974:2:21"},"src":"3954:23:21"},{"documentation":{"id":4637,"nodeType":"StructuredDocumentation","src":"3980:95:21","text":"@notice Emitted if price is greater than the maximum or less than the minimum allowed value"},"errorSelector":"55cf1e23","id":4639,"name":"priceOutOfRange","nameLocation":"4084:15:21","nodeType":"ErrorDefinition","parameters":{"id":4638,"nodeType":"ParameterList","parameters":[],"src":"4099:2:21"},"src":"4078:24:21"}],"scope":4641,"src":"280:3824:21","usedErrors":[4544,4547,4550,4553,4556,4559,4562,4565,4568,4571,4574,4577,4580,4583,4586,4589,4592,4595,4598,4601,4606,4609,4612,4615,4618,4621,4624,4627,4630,4633,4636,4639],"usedEvents":[]}],"src":"45:4060:21"},"id":21},"contracts/interfaces/pool/IAlgebraPoolEvents.sol":{"ast":{"absolutePath":"contracts/interfaces/pool/IAlgebraPoolEvents.sol","exportedSymbols":{"IAlgebraPoolEvents":[4782]},"id":4783,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4642,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IAlgebraPoolEvents","contractDependencies":[],"contractKind":"interface","documentation":{"id":4643,"nodeType":"StructuredDocumentation","src":"71:170:22","text":"@title Events emitted by a pool\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"},"fullyImplemented":true,"id":4782,"linearizedBaseContracts":[4782],"name":"IAlgebraPoolEvents","nameLocation":"251:18:22","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":4644,"nodeType":"StructuredDocumentation","src":"274:332:22","text":"@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swaps cannot be emitted by the pool before Initialize\n @param price The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"},"eventSelector":"98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95","id":4650,"name":"Initialize","nameLocation":"615:10:22","nodeType":"EventDefinition","parameters":{"id":4649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4646,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"634:5:22","nodeType":"VariableDeclaration","scope":4650,"src":"626:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4645,"name":"uint160","nodeType":"ElementaryTypeName","src":"626:7:22","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":4648,"indexed":false,"mutability":"mutable","name":"tick","nameLocation":"647:4:22","nodeType":"VariableDeclaration","scope":4650,"src":"641:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4647,"name":"int24","nodeType":"ElementaryTypeName","src":"641:5:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"625:27:22"},"src":"609:44:22"},{"anonymous":false,"documentation":{"id":4651,"nodeType":"StructuredDocumentation","src":"657:545:22","text":"@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param bottomTick The lower tick of the position\n @param topTick The upper tick of the position\n @param liquidityAmount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"},"eventSelector":"7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde","id":4667,"name":"Mint","nameLocation":"1211:4:22","nodeType":"EventDefinition","parameters":{"id":4666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4653,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"1229:6:22","nodeType":"VariableDeclaration","scope":4667,"src":"1221:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4652,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4655,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1257:5:22","nodeType":"VariableDeclaration","scope":4667,"src":"1241:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4654,"name":"address","nodeType":"ElementaryTypeName","src":"1241:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4657,"indexed":true,"mutability":"mutable","name":"bottomTick","nameLocation":"1282:10:22","nodeType":"VariableDeclaration","scope":4667,"src":"1268:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4656,"name":"int24","nodeType":"ElementaryTypeName","src":"1268:5:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4659,"indexed":true,"mutability":"mutable","name":"topTick","nameLocation":"1312:7:22","nodeType":"VariableDeclaration","scope":4667,"src":"1298:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4658,"name":"int24","nodeType":"ElementaryTypeName","src":"1298:5:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4661,"indexed":false,"mutability":"mutable","name":"liquidityAmount","nameLocation":"1333:15:22","nodeType":"VariableDeclaration","scope":4667,"src":"1325:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4660,"name":"uint128","nodeType":"ElementaryTypeName","src":"1325:7:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4663,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"1362:7:22","nodeType":"VariableDeclaration","scope":4667,"src":"1354:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4662,"name":"uint256","nodeType":"ElementaryTypeName","src":"1354:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4665,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"1383:7:22","nodeType":"VariableDeclaration","scope":4667,"src":"1375:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4664,"name":"uint256","nodeType":"ElementaryTypeName","src":"1375:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1215:179:22"},"src":"1205:190:22"},{"anonymous":false,"documentation":{"id":4668,"nodeType":"StructuredDocumentation","src":"1399:419:22","text":"@notice Emitted when fees are collected by the owner of a position\n @param owner The owner of the position for which fees are collected\n @param recipient The address that received fees\n @param bottomTick The lower tick of the position\n @param topTick The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"},"eventSelector":"70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0","id":4682,"name":"Collect","nameLocation":"1827:7:22","nodeType":"EventDefinition","parameters":{"id":4681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4670,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1851:5:22","nodeType":"VariableDeclaration","scope":4682,"src":"1835:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4669,"name":"address","nodeType":"ElementaryTypeName","src":"1835:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4672,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"1866:9:22","nodeType":"VariableDeclaration","scope":4682,"src":"1858:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4671,"name":"address","nodeType":"ElementaryTypeName","src":"1858:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4674,"indexed":true,"mutability":"mutable","name":"bottomTick","nameLocation":"1891:10:22","nodeType":"VariableDeclaration","scope":4682,"src":"1877:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4673,"name":"int24","nodeType":"ElementaryTypeName","src":"1877:5:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4676,"indexed":true,"mutability":"mutable","name":"topTick","nameLocation":"1917:7:22","nodeType":"VariableDeclaration","scope":4682,"src":"1903:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4675,"name":"int24","nodeType":"ElementaryTypeName","src":"1903:5:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4678,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"1934:7:22","nodeType":"VariableDeclaration","scope":4682,"src":"1926:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4677,"name":"uint128","nodeType":"ElementaryTypeName","src":"1926:7:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4680,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"1951:7:22","nodeType":"VariableDeclaration","scope":4682,"src":"1943:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4679,"name":"uint128","nodeType":"ElementaryTypeName","src":"1943:7:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1834:125:22"},"src":"1821:139:22"},{"anonymous":false,"documentation":{"id":4683,"nodeType":"StructuredDocumentation","src":"1964:573:22","text":"@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param bottomTick The lower tick of the position\n @param topTick The upper tick of the position\n @param liquidityAmount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn\n @param pluginFee The fee to be sent to the plugin"},"eventSelector":"932214d4a69c27c086643126ed97c32681da179064c678836c173f99bd13ca01","id":4699,"name":"Burn","nameLocation":"2546:4:22","nodeType":"EventDefinition","parameters":{"id":4698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4685,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2572:5:22","nodeType":"VariableDeclaration","scope":4699,"src":"2556:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4684,"name":"address","nodeType":"ElementaryTypeName","src":"2556:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4687,"indexed":true,"mutability":"mutable","name":"bottomTick","nameLocation":"2597:10:22","nodeType":"VariableDeclaration","scope":4699,"src":"2583:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4686,"name":"int24","nodeType":"ElementaryTypeName","src":"2583:5:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4689,"indexed":true,"mutability":"mutable","name":"topTick","nameLocation":"2627:7:22","nodeType":"VariableDeclaration","scope":4699,"src":"2613:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4688,"name":"int24","nodeType":"ElementaryTypeName","src":"2613:5:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4691,"indexed":false,"mutability":"mutable","name":"liquidityAmount","nameLocation":"2648:15:22","nodeType":"VariableDeclaration","scope":4699,"src":"2640:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4690,"name":"uint128","nodeType":"ElementaryTypeName","src":"2640:7:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4693,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"2677:7:22","nodeType":"VariableDeclaration","scope":4699,"src":"2669:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4692,"name":"uint256","nodeType":"ElementaryTypeName","src":"2669:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4695,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"2698:7:22","nodeType":"VariableDeclaration","scope":4699,"src":"2690:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4694,"name":"uint256","nodeType":"ElementaryTypeName","src":"2690:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4697,"indexed":false,"mutability":"mutable","name":"pluginFee","nameLocation":"2718:9:22","nodeType":"VariableDeclaration","scope":4699,"src":"2711:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4696,"name":"uint24","nodeType":"ElementaryTypeName","src":"2711:6:22","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2550:181:22"},"src":"2540:192:22"},{"anonymous":false,"documentation":{"id":4700,"nodeType":"StructuredDocumentation","src":"2736:695:22","text":"@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param price The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap\n @param overrideFee The fee to be applied to the trade\n @param pluginFee The fee to be sent to the plugin"},"eventSelector":"121cb44ee54098b1a04743c487e7460d8dd429b27f88b1f4d4767396e1a59f79","id":4720,"name":"Swap","nameLocation":"3440:4:22","nodeType":"EventDefinition","parameters":{"id":4719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4702,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3466:6:22","nodeType":"VariableDeclaration","scope":4720,"src":"3450:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4701,"name":"address","nodeType":"ElementaryTypeName","src":"3450:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4704,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"3494:9:22","nodeType":"VariableDeclaration","scope":4720,"src":"3478:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4703,"name":"address","nodeType":"ElementaryTypeName","src":"3478:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4706,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"3516:7:22","nodeType":"VariableDeclaration","scope":4720,"src":"3509:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4705,"name":"int256","nodeType":"ElementaryTypeName","src":"3509:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4708,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"3536:7:22","nodeType":"VariableDeclaration","scope":4720,"src":"3529:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4707,"name":"int256","nodeType":"ElementaryTypeName","src":"3529:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4710,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"3557:5:22","nodeType":"VariableDeclaration","scope":4720,"src":"3549:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4709,"name":"uint160","nodeType":"ElementaryTypeName","src":"3549:7:22","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":4712,"indexed":false,"mutability":"mutable","name":"liquidity","nameLocation":"3576:9:22","nodeType":"VariableDeclaration","scope":4720,"src":"3568:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4711,"name":"uint128","nodeType":"ElementaryTypeName","src":"3568:7:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4714,"indexed":false,"mutability":"mutable","name":"tick","nameLocation":"3597:4:22","nodeType":"VariableDeclaration","scope":4720,"src":"3591:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4713,"name":"int24","nodeType":"ElementaryTypeName","src":"3591:5:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4716,"indexed":false,"mutability":"mutable","name":"overrideFee","nameLocation":"3614:11:22","nodeType":"VariableDeclaration","scope":4720,"src":"3607:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4715,"name":"uint24","nodeType":"ElementaryTypeName","src":"3607:6:22","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":4718,"indexed":false,"mutability":"mutable","name":"pluginFee","nameLocation":"3638:9:22","nodeType":"VariableDeclaration","scope":4720,"src":"3631:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4717,"name":"uint24","nodeType":"ElementaryTypeName","src":"3631:6:22","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3444:207:22"},"src":"3434:218:22"},{"anonymous":false,"documentation":{"id":4721,"nodeType":"StructuredDocumentation","src":"3656:550:22","text":"@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"},"eventSelector":"bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633","id":4735,"name":"Flash","nameLocation":"4215:5:22","nodeType":"EventDefinition","parameters":{"id":4734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4723,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"4237:6:22","nodeType":"VariableDeclaration","scope":4735,"src":"4221:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4722,"name":"address","nodeType":"ElementaryTypeName","src":"4221:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4725,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"4261:9:22","nodeType":"VariableDeclaration","scope":4735,"src":"4245:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4724,"name":"address","nodeType":"ElementaryTypeName","src":"4245:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4727,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"4280:7:22","nodeType":"VariableDeclaration","scope":4735,"src":"4272:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4726,"name":"uint256","nodeType":"ElementaryTypeName","src":"4272:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4729,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"4297:7:22","nodeType":"VariableDeclaration","scope":4735,"src":"4289:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4728,"name":"uint256","nodeType":"ElementaryTypeName","src":"4289:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4731,"indexed":false,"mutability":"mutable","name":"paid0","nameLocation":"4314:5:22","nodeType":"VariableDeclaration","scope":4735,"src":"4306:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4730,"name":"uint256","nodeType":"ElementaryTypeName","src":"4306:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4733,"indexed":false,"mutability":"mutable","name":"paid1","nameLocation":"4329:5:22","nodeType":"VariableDeclaration","scope":4735,"src":"4321:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4732,"name":"uint256","nodeType":"ElementaryTypeName","src":"4321:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4220:115:22"},"src":"4209:127:22"},{"anonymous":false,"documentation":{"id":4736,"nodeType":"StructuredDocumentation","src":"4340:319:22","text":"@notice Emitted when the pool has higher balances than expected.\n Any excess of tokens will be distributed between liquidity providers as fee.\n @dev Fees after flash also will trigger this event due to mechanics of flash.\n @param amount0 The excess of token0\n @param amount1 The excess of token1"},"eventSelector":"ef10ebb00f0dbc72ad4602e94abbbda6f3d40632714f70e9c8fa30d5d44289c9","id":4742,"name":"ExcessTokens","nameLocation":"4668:12:22","nodeType":"EventDefinition","parameters":{"id":4741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4738,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"4689:7:22","nodeType":"VariableDeclaration","scope":4742,"src":"4681:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4737,"name":"uint256","nodeType":"ElementaryTypeName","src":"4681:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4740,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"4706:7:22","nodeType":"VariableDeclaration","scope":4742,"src":"4698:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4739,"name":"uint256","nodeType":"ElementaryTypeName","src":"4698:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4680:34:22"},"src":"4662:53:22"},{"anonymous":false,"documentation":{"id":4743,"nodeType":"StructuredDocumentation","src":"4719:155:22","text":"@notice Emitted when the community fee is changed by the pool\n @param communityFeeNew The updated value of the community fee in thousandths (1e-3)"},"eventSelector":"3647dccc990d4941b0b05b32527ef493a98d6187b20639ca2f9743f3b55ca5e1","id":4747,"name":"CommunityFee","nameLocation":"4883:12:22","nodeType":"EventDefinition","parameters":{"id":4746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4745,"indexed":false,"mutability":"mutable","name":"communityFeeNew","nameLocation":"4903:15:22","nodeType":"VariableDeclaration","scope":4747,"src":"4896:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4744,"name":"uint16","nodeType":"ElementaryTypeName","src":"4896:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4895:24:22"},"src":"4877:43:22"},{"anonymous":false,"documentation":{"id":4748,"nodeType":"StructuredDocumentation","src":"4924:119:22","text":"@notice Emitted when the tick spacing changes\n @param newTickSpacing The updated value of the new tick spacing"},"eventSelector":"01413b1d5d4c359e9a0daa7909ecda165f6e8c51fe2ff529d74b22a5a7c02645","id":4752,"name":"TickSpacing","nameLocation":"5052:11:22","nodeType":"EventDefinition","parameters":{"id":4751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4750,"indexed":false,"mutability":"mutable","name":"newTickSpacing","nameLocation":"5070:14:22","nodeType":"VariableDeclaration","scope":4752,"src":"5064:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4749,"name":"int24","nodeType":"ElementaryTypeName","src":"5064:5:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"5063:22:22"},"src":"5046:40:22"},{"anonymous":false,"documentation":{"id":4753,"nodeType":"StructuredDocumentation","src":"5090:100:22","text":"@notice Emitted when the plugin address changes\n @param newPluginAddress New plugin address"},"eventSelector":"27a3944eff2135a57675f17e72501038982b73620d01f794c72e93d61a3932a2","id":4757,"name":"Plugin","nameLocation":"5199:6:22","nodeType":"EventDefinition","parameters":{"id":4756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4755,"indexed":false,"mutability":"mutable","name":"newPluginAddress","nameLocation":"5214:16:22","nodeType":"VariableDeclaration","scope":4757,"src":"5206:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4754,"name":"address","nodeType":"ElementaryTypeName","src":"5206:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5205:26:22"},"src":"5193:39:22"},{"anonymous":false,"documentation":{"id":4758,"nodeType":"StructuredDocumentation","src":"5236:97:22","text":"@notice Emitted when the plugin config changes\n @param newPluginConfig New plugin config"},"eventSelector":"3a6271b36c1b44bd6a0a0d56230602dc6919b7c17af57254306fadf5fee69dc3","id":4762,"name":"PluginConfig","nameLocation":"5342:12:22","nodeType":"EventDefinition","parameters":{"id":4761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4760,"indexed":false,"mutability":"mutable","name":"newPluginConfig","nameLocation":"5361:15:22","nodeType":"VariableDeclaration","scope":4762,"src":"5355:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4759,"name":"uint8","nodeType":"ElementaryTypeName","src":"5355:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"5354:23:22"},"src":"5336:42:22"},{"anonymous":false,"documentation":{"id":4763,"nodeType":"StructuredDocumentation","src":"5382:123:22","text":"@notice Emitted when the fee changes inside the pool\n @param fee The current fee in hundredths of a bip, i.e. 1e-6"},"eventSelector":"598b9f043c813aa6be3426ca60d1c65d17256312890be5118dab55b0775ebe2a","id":4767,"name":"Fee","nameLocation":"5514:3:22","nodeType":"EventDefinition","parameters":{"id":4766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4765,"indexed":false,"mutability":"mutable","name":"fee","nameLocation":"5525:3:22","nodeType":"VariableDeclaration","scope":4767,"src":"5518:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4764,"name":"uint16","nodeType":"ElementaryTypeName","src":"5518:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5517:12:22"},"src":"5508:22:22"},{"anonymous":false,"documentation":{"id":4768,"nodeType":"StructuredDocumentation","src":"5534:111:22","text":"@notice Emitted when the community vault address changes\n @param newCommunityVault New community vault"},"eventSelector":"b0b573c1f636e1f8bd9b415ba6c04d6dd49100bc25493fc6305b65ec0e581df3","id":4772,"name":"CommunityVault","nameLocation":"5654:14:22","nodeType":"EventDefinition","parameters":{"id":4771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4770,"indexed":false,"mutability":"mutable","name":"newCommunityVault","nameLocation":"5677:17:22","nodeType":"VariableDeclaration","scope":4772,"src":"5669:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4769,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5668:27:22"},"src":"5648:48:22"},{"anonymous":false,"documentation":{"id":4773,"nodeType":"StructuredDocumentation","src":"5700:198:22","text":"@notice Emitted when the plugin does skim the excess of tokens\n @param to THe receiver of tokens (plugin)\n @param amount0 The amount of token0\n @param amount1 The amount of token1"},"eventSelector":"b94331e4420f16b156f53c397a8adcd09481283ee7830f7b688b22858e9db80b","id":4781,"name":"Skim","nameLocation":"5907:4:22","nodeType":"EventDefinition","parameters":{"id":4780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4775,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"5928:2:22","nodeType":"VariableDeclaration","scope":4781,"src":"5912:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4774,"name":"address","nodeType":"ElementaryTypeName","src":"5912:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4777,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"5940:7:22","nodeType":"VariableDeclaration","scope":4781,"src":"5932:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4776,"name":"uint256","nodeType":"ElementaryTypeName","src":"5932:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4779,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"5957:7:22","nodeType":"VariableDeclaration","scope":4781,"src":"5949:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4778,"name":"uint256","nodeType":"ElementaryTypeName","src":"5949:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5911:54:22"},"src":"5901:65:22"}],"scope":4783,"src":"241:5727:22","usedErrors":[],"usedEvents":[4650,4667,4682,4699,4720,4735,4742,4747,4752,4757,4762,4767,4772,4781]}],"src":"45:5924:22"},"id":22},"contracts/interfaces/pool/IAlgebraPoolImmutables.sol":{"ast":{"absolutePath":"contracts/interfaces/pool/IAlgebraPoolImmutables.sol","exportedSymbols":{"IAlgebraPoolImmutables":[4810]},"id":4811,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4784,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"IAlgebraPoolImmutables","contractDependencies":[],"contractKind":"interface","documentation":{"id":4785,"nodeType":"StructuredDocumentation","src":"71:175:23","text":"@title Pool state that never changes\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"},"fullyImplemented":false,"id":4810,"linearizedBaseContracts":[4810],"name":"IAlgebraPoolImmutables","nameLocation":"256:22:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4786,"nodeType":"StructuredDocumentation","src":"283:127:23","text":"@notice The Algebra factory contract, which must adhere to the IAlgebraFactory interface\n @return The contract address"},"functionSelector":"c45a0155","id":4791,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"422:7:23","nodeType":"FunctionDefinition","parameters":{"id":4787,"nodeType":"ParameterList","parameters":[],"src":"429:2:23"},"returnParameters":{"id":4790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4791,"src":"455:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4788,"name":"address","nodeType":"ElementaryTypeName","src":"455:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"454:9:23"},"scope":4810,"src":"413:51:23","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4792,"nodeType":"StructuredDocumentation","src":"468:111:23","text":"@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"},"functionSelector":"0dfe1681","id":4797,"implemented":false,"kind":"function","modifiers":[],"name":"token0","nameLocation":"591:6:23","nodeType":"FunctionDefinition","parameters":{"id":4793,"nodeType":"ParameterList","parameters":[],"src":"597:2:23"},"returnParameters":{"id":4796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4797,"src":"623:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4794,"name":"address","nodeType":"ElementaryTypeName","src":"623:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"622:9:23"},"scope":4810,"src":"582:50:23","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4798,"nodeType":"StructuredDocumentation","src":"636:112:23","text":"@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"},"functionSelector":"d21220a7","id":4803,"implemented":false,"kind":"function","modifiers":[],"name":"token1","nameLocation":"760:6:23","nodeType":"FunctionDefinition","parameters":{"id":4799,"nodeType":"ParameterList","parameters":[],"src":"766:2:23"},"returnParameters":{"id":4802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4803,"src":"792:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4800,"name":"address","nodeType":"ElementaryTypeName","src":"792:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"791:9:23"},"scope":4810,"src":"751:50:23","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4804,"nodeType":"StructuredDocumentation","src":"805:357:23","text":"@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"},"functionSelector":"70cf754a","id":4809,"implemented":false,"kind":"function","modifiers":[],"name":"maxLiquidityPerTick","nameLocation":"1174:19:23","nodeType":"FunctionDefinition","parameters":{"id":4805,"nodeType":"ParameterList","parameters":[],"src":"1193:2:23"},"returnParameters":{"id":4808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4809,"src":"1219:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4806,"name":"uint128","nodeType":"ElementaryTypeName","src":"1219:7:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1218:9:23"},"scope":4810,"src":"1165:63:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4811,"src":"246:984:23","usedErrors":[],"usedEvents":[]}],"src":"45:1186:23"},"id":23},"contracts/interfaces/pool/IAlgebraPoolPermissionedActions.sol":{"ast":{"absolutePath":"contracts/interfaces/pool/IAlgebraPoolPermissionedActions.sol","exportedSymbols":{"IAlgebraPoolPermissionedActions":[4858]},"id":4859,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4812,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"IAlgebraPoolPermissionedActions","contractDependencies":[],"contractKind":"interface","documentation":{"id":4813,"nodeType":"StructuredDocumentation","src":"71:255:24","text":"@title Permissioned pool actions\n @notice Contains pool methods that may only be called by permissioned addresses\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"},"fullyImplemented":false,"id":4858,"linearizedBaseContracts":[4858],"name":"IAlgebraPoolPermissionedActions","nameLocation":"336:31:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4814,"nodeType":"StructuredDocumentation","src":"372:185:24","text":"@notice Set the community's % share of the fees. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\n @param newCommunityFee The new community fee percent in thousandths (1e-3)"},"functionSelector":"240a875a","id":4819,"implemented":false,"kind":"function","modifiers":[],"name":"setCommunityFee","nameLocation":"569:15:24","nodeType":"FunctionDefinition","parameters":{"id":4817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4816,"mutability":"mutable","name":"newCommunityFee","nameLocation":"592:15:24","nodeType":"VariableDeclaration","scope":4819,"src":"585:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4815,"name":"uint16","nodeType":"ElementaryTypeName","src":"585:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"584:24:24"},"returnParameters":{"id":4818,"nodeType":"ParameterList","parameters":[],"src":"617:0:24"},"scope":4858,"src":"560:58:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4820,"nodeType":"StructuredDocumentation","src":"622:151:24","text":"@notice Set the new tick spacing values. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\n @param newTickSpacing The new tick spacing value"},"functionSelector":"f085a610","id":4825,"implemented":false,"kind":"function","modifiers":[],"name":"setTickSpacing","nameLocation":"785:14:24","nodeType":"FunctionDefinition","parameters":{"id":4823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4822,"mutability":"mutable","name":"newTickSpacing","nameLocation":"806:14:24","nodeType":"VariableDeclaration","scope":4825,"src":"800:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4821,"name":"int24","nodeType":"ElementaryTypeName","src":"800:5:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"799:22:24"},"returnParameters":{"id":4824,"nodeType":"ParameterList","parameters":[],"src":"830:0:24"},"scope":4858,"src":"776:55:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4826,"nodeType":"StructuredDocumentation","src":"835:144:24","text":"@notice Set the new plugin address. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\n @param newPluginAddress The new plugin address"},"functionSelector":"cc1f97cf","id":4831,"implemented":false,"kind":"function","modifiers":[],"name":"setPlugin","nameLocation":"991:9:24","nodeType":"FunctionDefinition","parameters":{"id":4829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4828,"mutability":"mutable","name":"newPluginAddress","nameLocation":"1009:16:24","nodeType":"VariableDeclaration","scope":4831,"src":"1001:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4827,"name":"address","nodeType":"ElementaryTypeName","src":"1001:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1000:26:24"},"returnParameters":{"id":4830,"nodeType":"ParameterList","parameters":[],"src":"1035:0:24"},"scope":4858,"src":"982:54:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4832,"nodeType":"StructuredDocumentation","src":"1040:211:24","text":"@notice Set new plugin config. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\n @param newConfig In the new configuration of the plugin,\n each bit of which is responsible for a particular hook."},"functionSelector":"bca57f81","id":4837,"implemented":false,"kind":"function","modifiers":[],"name":"setPluginConfig","nameLocation":"1263:15:24","nodeType":"FunctionDefinition","parameters":{"id":4835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4834,"mutability":"mutable","name":"newConfig","nameLocation":"1285:9:24","nodeType":"VariableDeclaration","scope":4837,"src":"1279:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4833,"name":"uint8","nodeType":"ElementaryTypeName","src":"1279:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1278:17:24"},"returnParameters":{"id":4836,"nodeType":"ParameterList","parameters":[],"src":"1304:0:24"},"scope":4858,"src":"1254:51:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4838,"nodeType":"StructuredDocumentation","src":"1309:356:24","text":"@notice Set new community fee vault address. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\n @dev Community fee vault receives collected community fees.\n **accumulated but not yet sent to the vault community fees once will be sent to the `newCommunityVault` address**\n @param newCommunityVault The address of new community fee vault"},"functionSelector":"d8544cf3","id":4843,"implemented":false,"kind":"function","modifiers":[],"name":"setCommunityVault","nameLocation":"1677:17:24","nodeType":"FunctionDefinition","parameters":{"id":4841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4840,"mutability":"mutable","name":"newCommunityVault","nameLocation":"1703:17:24","nodeType":"VariableDeclaration","scope":4843,"src":"1695:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4839,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1694:27:24"},"returnParameters":{"id":4842,"nodeType":"ParameterList","parameters":[],"src":"1730:0:24"},"scope":4858,"src":"1668:63:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4844,"nodeType":"StructuredDocumentation","src":"1735:171:24","text":"@notice Set new pool fee. Can be called by owner if dynamic fee is disabled.\n Called by the plugin if dynamic fee is enabled\n @param newFee The new fee value"},"functionSelector":"8e005553","id":4849,"implemented":false,"kind":"function","modifiers":[],"name":"setFee","nameLocation":"1918:6:24","nodeType":"FunctionDefinition","parameters":{"id":4847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4846,"mutability":"mutable","name":"newFee","nameLocation":"1932:6:24","nodeType":"VariableDeclaration","scope":4849,"src":"1925:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4845,"name":"uint16","nodeType":"ElementaryTypeName","src":"1925:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1924:15:24"},"returnParameters":{"id":4848,"nodeType":"ParameterList","parameters":[],"src":"1948:0:24"},"scope":4858,"src":"1909:40:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4850,"nodeType":"StructuredDocumentation","src":"1953:148:24","text":"@notice Forces balances to match reserves. Excessive tokens will be distributed between active LPs\n @dev Only plugin can call this function"},"functionSelector":"fff6cae9","id":4853,"implemented":false,"kind":"function","modifiers":[],"name":"sync","nameLocation":"2113:4:24","nodeType":"FunctionDefinition","parameters":{"id":4851,"nodeType":"ParameterList","parameters":[],"src":"2117:2:24"},"returnParameters":{"id":4852,"nodeType":"ParameterList","parameters":[],"src":"2128:0:24"},"scope":4858,"src":"2104:25:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4854,"nodeType":"StructuredDocumentation","src":"2133:136:24","text":"@notice Forces balances to match reserves. Excessive tokens will be sent to msg.sender\n @dev Only plugin can call this function"},"functionSelector":"1dd19cb4","id":4857,"implemented":false,"kind":"function","modifiers":[],"name":"skim","nameLocation":"2281:4:24","nodeType":"FunctionDefinition","parameters":{"id":4855,"nodeType":"ParameterList","parameters":[],"src":"2285:2:24"},"returnParameters":{"id":4856,"nodeType":"ParameterList","parameters":[],"src":"2296:0:24"},"scope":4858,"src":"2272:25:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4859,"src":"326:1973:24","usedErrors":[],"usedEvents":[]}],"src":"45:2255:24"},"id":24},"contracts/interfaces/pool/IAlgebraPoolState.sol":{"ast":{"absolutePath":"contracts/interfaces/pool/IAlgebraPoolState.sol","exportedSymbols":{"IAlgebraPoolState":[5042]},"id":5043,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4860,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"IAlgebraPoolState","contractDependencies":[],"contractKind":"interface","documentation":{"id":4861,"nodeType":"StructuredDocumentation","src":"71:404:25","text":"@title Pool state that can change\n @dev Important security note: when using this data by external contracts, it is necessary to take into account the possibility\n of manipulation (including read-only reentrancy).\n This interface is based on the UniswapV3 interface, credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"},"fullyImplemented":false,"id":5042,"linearizedBaseContracts":[5042],"name":"IAlgebraPoolState","nameLocation":"485:17:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4862,"nodeType":"StructuredDocumentation","src":"507:1108:25","text":"@notice Safely get most important state values of Algebra Integral AMM\n @dev Several values exposed as a single method to save gas when accessed externally.\n **Important security note: this method checks reentrancy lock and should be preferred in most cases**.\n @return sqrtPrice The current price of the pool as a sqrt(dToken1/dToken0) Q64.96 value\n @return tick The current global tick of the pool. May not always be equal to SqrtTickMath.getTickAtSqrtRatio(price) if the price is on a tick boundary\n @return lastFee The current (last known) pool fee value in hundredths of a bip, i.e. 1e-6 (so '100' is '0.01%'). May be obsolete if using dynamic fee plugin\n @return pluginConfig The current plugin config as bitmap. Each bit is responsible for enabling/disabling the hooks, the last bit turns on/off dynamic fees logic\n @return activeLiquidity  The currently in-range liquidity available to the pool\n @return nextTick The next initialized tick after current global tick\n @return previousTick The previous initialized tick before (or at) current global tick"},"functionSelector":"97ce1c51","id":4879,"implemented":false,"kind":"function","modifiers":[],"name":"safelyGetStateOfAMM","nameLocation":"1627:19:25","nodeType":"FunctionDefinition","parameters":{"id":4863,"nodeType":"ParameterList","parameters":[],"src":"1646:2:25"},"returnParameters":{"id":4878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4865,"mutability":"mutable","name":"sqrtPrice","nameLocation":"1692:9:25","nodeType":"VariableDeclaration","scope":4879,"src":"1684:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4864,"name":"uint160","nodeType":"ElementaryTypeName","src":"1684:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":4867,"mutability":"mutable","name":"tick","nameLocation":"1709:4:25","nodeType":"VariableDeclaration","scope":4879,"src":"1703:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4866,"name":"int24","nodeType":"ElementaryTypeName","src":"1703:5:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4869,"mutability":"mutable","name":"lastFee","nameLocation":"1722:7:25","nodeType":"VariableDeclaration","scope":4879,"src":"1715:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4868,"name":"uint16","nodeType":"ElementaryTypeName","src":"1715:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4871,"mutability":"mutable","name":"pluginConfig","nameLocation":"1737:12:25","nodeType":"VariableDeclaration","scope":4879,"src":"1731:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4870,"name":"uint8","nodeType":"ElementaryTypeName","src":"1731:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4873,"mutability":"mutable","name":"activeLiquidity","nameLocation":"1759:15:25","nodeType":"VariableDeclaration","scope":4879,"src":"1751:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4872,"name":"uint128","nodeType":"ElementaryTypeName","src":"1751:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4875,"mutability":"mutable","name":"nextTick","nameLocation":"1782:8:25","nodeType":"VariableDeclaration","scope":4879,"src":"1776:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4874,"name":"int24","nodeType":"ElementaryTypeName","src":"1776:5:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4877,"mutability":"mutable","name":"previousTick","nameLocation":"1798:12:25","nodeType":"VariableDeclaration","scope":4879,"src":"1792:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4876,"name":"int24","nodeType":"ElementaryTypeName","src":"1792:5:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1683:128:25"},"scope":5042,"src":"1618:194:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4880,"nodeType":"StructuredDocumentation","src":"1816:282:25","text":"@notice Allows to easily get current reentrancy lock status\n @dev can be used to prevent read-only reentrancy.\n This method just returns `globalState.unlocked` value\n @return unlocked Reentrancy lock flag, true if the pool currently is unlocked, otherwise - false"},"functionSelector":"8380edb7","id":4885,"implemented":false,"kind":"function","modifiers":[],"name":"isUnlocked","nameLocation":"2110:10:25","nodeType":"FunctionDefinition","parameters":{"id":4881,"nodeType":"ParameterList","parameters":[],"src":"2120:2:25"},"returnParameters":{"id":4884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4883,"mutability":"mutable","name":"unlocked","nameLocation":"2151:8:25","nodeType":"VariableDeclaration","scope":4885,"src":"2146:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4882,"name":"bool","nodeType":"ElementaryTypeName","src":"2146:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2145:15:25"},"scope":5042,"src":"2101:60:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4886,"nodeType":"StructuredDocumentation","src":"2303:1160:25","text":"@notice The globalState structure in the pool stores many values but requires only one slot\n and is exposed as a single method to save gas when accessed externally.\n @dev **important security note: caller should check `unlocked` flag to prevent read-only reentrancy**\n @return price The current price of the pool as a sqrt(dToken1/dToken0) Q64.96 value\n @return tick The current tick of the pool, i.e. according to the last tick transition that was run\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(price) if the price is on a tick boundary\n @return lastFee The current (last known) pool fee value in hundredths of a bip, i.e. 1e-6 (so '100' is '0.01%'). May be obsolete if using dynamic fee plugin\n @return pluginConfig The current plugin config as bitmap. Each bit is responsible for enabling/disabling the hooks, the last bit turns on/off dynamic fees logic\n @return communityFee The community fee represented as a percent of all collected fee in thousandths, i.e. 1e-3 (so 100 is 10%)\n @return unlocked Reentrancy lock flag, true if the pool currently is unlocked, otherwise - false"},"functionSelector":"e76c01e4","id":4901,"implemented":false,"kind":"function","modifiers":[],"name":"globalState","nameLocation":"3475:11:25","nodeType":"FunctionDefinition","parameters":{"id":4887,"nodeType":"ParameterList","parameters":[],"src":"3486:2:25"},"returnParameters":{"id":4900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4889,"mutability":"mutable","name":"price","nameLocation":"3520:5:25","nodeType":"VariableDeclaration","scope":4901,"src":"3512:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4888,"name":"uint160","nodeType":"ElementaryTypeName","src":"3512:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":4891,"mutability":"mutable","name":"tick","nameLocation":"3533:4:25","nodeType":"VariableDeclaration","scope":4901,"src":"3527:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4890,"name":"int24","nodeType":"ElementaryTypeName","src":"3527:5:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4893,"mutability":"mutable","name":"lastFee","nameLocation":"3546:7:25","nodeType":"VariableDeclaration","scope":4901,"src":"3539:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4892,"name":"uint16","nodeType":"ElementaryTypeName","src":"3539:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4895,"mutability":"mutable","name":"pluginConfig","nameLocation":"3561:12:25","nodeType":"VariableDeclaration","scope":4901,"src":"3555:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4894,"name":"uint8","nodeType":"ElementaryTypeName","src":"3555:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4897,"mutability":"mutable","name":"communityFee","nameLocation":"3582:12:25","nodeType":"VariableDeclaration","scope":4901,"src":"3575:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4896,"name":"uint16","nodeType":"ElementaryTypeName","src":"3575:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4899,"mutability":"mutable","name":"unlocked","nameLocation":"3601:8:25","nodeType":"VariableDeclaration","scope":4901,"src":"3596:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4898,"name":"bool","nodeType":"ElementaryTypeName","src":"3596:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3511:99:25"},"scope":5042,"src":"3466:145:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4902,"nodeType":"StructuredDocumentation","src":"3615:893:25","text":"@notice Look up information about a specific tick in the pool\n @dev **important security note: caller should check reentrancy lock to prevent read-only reentrancy**\n @param tick The tick to look up\n @return liquidityTotal The total amount of position liquidity that uses the pool either as tick lower or tick upper\n @return liquidityDelta How much liquidity changes when the pool price crosses the tick\n @return prevTick The previous tick in tick list\n @return nextTick The next tick in tick list\n @return outerFeeGrowth0Token The fee growth on the other side of the tick from the current tick in token0\n @return outerFeeGrowth1Token The fee growth on the other side of the tick from the current tick in token1\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."},"functionSelector":"f30dba93","id":4919,"implemented":false,"kind":"function","modifiers":[],"name":"ticks","nameLocation":"4520:5:25","nodeType":"FunctionDefinition","parameters":{"id":4905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4904,"mutability":"mutable","name":"tick","nameLocation":"4537:4:25","nodeType":"VariableDeclaration","scope":4919,"src":"4531:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4903,"name":"int24","nodeType":"ElementaryTypeName","src":"4531:5:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"4525:20:25"},"returnParameters":{"id":4918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4907,"mutability":"mutable","name":"liquidityTotal","nameLocation":"4596:14:25","nodeType":"VariableDeclaration","scope":4919,"src":"4588:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4906,"name":"uint256","nodeType":"ElementaryTypeName","src":"4588:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4909,"mutability":"mutable","name":"liquidityDelta","nameLocation":"4625:14:25","nodeType":"VariableDeclaration","scope":4919,"src":"4618:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":4908,"name":"int128","nodeType":"ElementaryTypeName","src":"4618:6:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":4911,"mutability":"mutable","name":"prevTick","nameLocation":"4653:8:25","nodeType":"VariableDeclaration","scope":4919,"src":"4647:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4910,"name":"int24","nodeType":"ElementaryTypeName","src":"4647:5:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4913,"mutability":"mutable","name":"nextTick","nameLocation":"4675:8:25","nodeType":"VariableDeclaration","scope":4919,"src":"4669:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4912,"name":"int24","nodeType":"ElementaryTypeName","src":"4669:5:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4915,"mutability":"mutable","name":"outerFeeGrowth0Token","nameLocation":"4699:20:25","nodeType":"VariableDeclaration","scope":4919,"src":"4691:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4914,"name":"uint256","nodeType":"ElementaryTypeName","src":"4691:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4917,"mutability":"mutable","name":"outerFeeGrowth1Token","nameLocation":"4735:20:25","nodeType":"VariableDeclaration","scope":4919,"src":"4727:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4916,"name":"uint256","nodeType":"ElementaryTypeName","src":"4727:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4580:181:25"},"scope":5042,"src":"4511:251:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4920,"nodeType":"StructuredDocumentation","src":"4766:120:25","text":"@notice The timestamp of the last sending of tokens to vault/plugin\n @return The timestamp truncated to 32 bits"},"functionSelector":"77f8c3a9","id":4925,"implemented":false,"kind":"function","modifiers":[],"name":"lastFeeTransferTimestamp","nameLocation":"4898:24:25","nodeType":"FunctionDefinition","parameters":{"id":4921,"nodeType":"ParameterList","parameters":[],"src":"4922:2:25"},"returnParameters":{"id":4924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4925,"src":"4948:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4922,"name":"uint32","nodeType":"ElementaryTypeName","src":"4948:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4947:8:25"},"scope":5042,"src":"4889:67:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4926,"nodeType":"StructuredDocumentation","src":"4960:328:25","text":"@notice The amounts of token0 and token1 that will be sent to the vault\n @dev Will be sent FEE_TRANSFER_FREQUENCY after communityFeeLastTimestamp\n @return communityFeePending0 The amount of token0 that will be sent to the vault\n @return communityFeePending1 The amount of token1 that will be sent to the vault"},"functionSelector":"7bd78025","id":4933,"implemented":false,"kind":"function","modifiers":[],"name":"getCommunityFeePending","nameLocation":"5300:22:25","nodeType":"FunctionDefinition","parameters":{"id":4927,"nodeType":"ParameterList","parameters":[],"src":"5322:2:25"},"returnParameters":{"id":4932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4929,"mutability":"mutable","name":"communityFeePending0","nameLocation":"5356:20:25","nodeType":"VariableDeclaration","scope":4933,"src":"5348:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4928,"name":"uint128","nodeType":"ElementaryTypeName","src":"5348:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4931,"mutability":"mutable","name":"communityFeePending1","nameLocation":"5386:20:25","nodeType":"VariableDeclaration","scope":4933,"src":"5378:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4930,"name":"uint128","nodeType":"ElementaryTypeName","src":"5378:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"5347:60:25"},"scope":5042,"src":"5291:117:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4934,"nodeType":"StructuredDocumentation","src":"5412:324:25","text":"@notice The amounts of token0 and token1 that will be sent to the plugin\n @dev Will be sent FEE_TRANSFER_FREQUENCY after feeLastTransferTimestamp\n @return pluginFeePending0 The amount of token0 that will be sent to the plugin\n @return pluginFeePending1 The amount of token1 that will be sent to the plugin"},"functionSelector":"a1eded87","id":4941,"implemented":false,"kind":"function","modifiers":[],"name":"getPluginFeePending","nameLocation":"5748:19:25","nodeType":"FunctionDefinition","parameters":{"id":4935,"nodeType":"ParameterList","parameters":[],"src":"5767:2:25"},"returnParameters":{"id":4940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4937,"mutability":"mutable","name":"pluginFeePending0","nameLocation":"5801:17:25","nodeType":"VariableDeclaration","scope":4941,"src":"5793:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4936,"name":"uint128","nodeType":"ElementaryTypeName","src":"5793:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4939,"mutability":"mutable","name":"pluginFeePending1","nameLocation":"5828:17:25","nodeType":"VariableDeclaration","scope":4941,"src":"5820:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4938,"name":"uint128","nodeType":"ElementaryTypeName","src":"5820:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"5792:54:25"},"scope":5042,"src":"5739:108:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4942,"nodeType":"StructuredDocumentation","src":"5851:164:25","text":"@notice Returns the address of currently used plugin\n @dev The plugin is subject to change\n @return pluginAddress The address of currently used plugin"},"functionSelector":"ef01df4f","id":4947,"implemented":false,"kind":"function","modifiers":[],"name":"plugin","nameLocation":"6027:6:25","nodeType":"FunctionDefinition","parameters":{"id":4943,"nodeType":"ParameterList","parameters":[],"src":"6033:2:25"},"returnParameters":{"id":4946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"mutability":"mutable","name":"pluginAddress","nameLocation":"6067:13:25","nodeType":"VariableDeclaration","scope":4947,"src":"6059:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4944,"name":"address","nodeType":"ElementaryTypeName","src":"6059:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6058:23:25"},"scope":5042,"src":"6018:64:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4948,"nodeType":"StructuredDocumentation","src":"6086:127:25","text":"@notice The contract to which community fees are transferred\n @return communityVaultAddress The communityVault address"},"functionSelector":"53e97868","id":4953,"implemented":false,"kind":"function","modifiers":[],"name":"communityVault","nameLocation":"6225:14:25","nodeType":"FunctionDefinition","parameters":{"id":4949,"nodeType":"ParameterList","parameters":[],"src":"6239:2:25"},"returnParameters":{"id":4952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4951,"mutability":"mutable","name":"communityVaultAddress","nameLocation":"6273:21:25","nodeType":"VariableDeclaration","scope":4953,"src":"6265:29:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4950,"name":"address","nodeType":"ElementaryTypeName","src":"6265:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6264:31:25"},"scope":5042,"src":"6216:80:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4954,"nodeType":"StructuredDocumentation","src":"6300:212:25","text":"@notice Returns 256 packed tick initialized boolean values. See TickTree for more information\n @param wordPosition Index of 256-bits word with ticks\n @return The 256-bits word with packed ticks info"},"functionSelector":"c677e3e0","id":4961,"implemented":false,"kind":"function","modifiers":[],"name":"tickTable","nameLocation":"6524:9:25","nodeType":"FunctionDefinition","parameters":{"id":4957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4956,"mutability":"mutable","name":"wordPosition","nameLocation":"6540:12:25","nodeType":"VariableDeclaration","scope":4961,"src":"6534:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":4955,"name":"int16","nodeType":"ElementaryTypeName","src":"6534:5:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"6533:20:25"},"returnParameters":{"id":4960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4961,"src":"6577:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4958,"name":"uint256","nodeType":"ElementaryTypeName","src":"6577:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6576:9:25"},"scope":5042,"src":"6515:71:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4962,"nodeType":"StructuredDocumentation","src":"6590:218:25","text":"@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256\n @return The fee growth accumulator for token0"},"functionSelector":"6378ae44","id":4967,"implemented":false,"kind":"function","modifiers":[],"name":"totalFeeGrowth0Token","nameLocation":"6820:20:25","nodeType":"FunctionDefinition","parameters":{"id":4963,"nodeType":"ParameterList","parameters":[],"src":"6840:2:25"},"returnParameters":{"id":4966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4967,"src":"6866:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4964,"name":"uint256","nodeType":"ElementaryTypeName","src":"6866:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6865:9:25"},"scope":5042,"src":"6811:64:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4968,"nodeType":"StructuredDocumentation","src":"6879:218:25","text":"@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256\n @return The fee growth accumulator for token1"},"functionSelector":"ecdecf42","id":4973,"implemented":false,"kind":"function","modifiers":[],"name":"totalFeeGrowth1Token","nameLocation":"7109:20:25","nodeType":"FunctionDefinition","parameters":{"id":4969,"nodeType":"ParameterList","parameters":[],"src":"7129:2:25"},"returnParameters":{"id":4972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4973,"src":"7155:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4970,"name":"uint256","nodeType":"ElementaryTypeName","src":"7155:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7154:9:25"},"scope":5042,"src":"7100:64:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4974,"nodeType":"StructuredDocumentation","src":"7168:524:25","text":"@notice The current pool fee value\n @dev In case dynamic fee is enabled in the pool, this method will call the plugin to get the current fee.\n If the plugin implements complex fee logic, this method may return an incorrect value or revert.\n In this case, see the plugin implementation and related documentation.\n @dev **important security note: caller should check reentrancy lock to prevent read-only reentrancy**\n @return currentFee The current pool fee value in hundredths of a bip, i.e. 1e-6"},"functionSelector":"ddca3f43","id":4979,"implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"7704:3:25","nodeType":"FunctionDefinition","parameters":{"id":4975,"nodeType":"ParameterList","parameters":[],"src":"7707:2:25"},"returnParameters":{"id":4978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4977,"mutability":"mutable","name":"currentFee","nameLocation":"7740:10:25","nodeType":"VariableDeclaration","scope":4979,"src":"7733:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4976,"name":"uint16","nodeType":"ElementaryTypeName","src":"7733:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"7732:19:25"},"scope":5042,"src":"7695:57:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4980,"nodeType":"StructuredDocumentation","src":"7756:382:25","text":"@notice The tracked token0 and token1 reserves of pool\n @dev If at any time the real balance is larger, the excess will be transferred to liquidity providers as additional fee.\n If the balance exceeds uint128, the excess will be sent to the communityVault.\n @return reserve0 The last known reserve of token0\n @return reserve1 The last known reserve of token1"},"functionSelector":"0902f1ac","id":4987,"implemented":false,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"8150:11:25","nodeType":"FunctionDefinition","parameters":{"id":4981,"nodeType":"ParameterList","parameters":[],"src":"8161:2:25"},"returnParameters":{"id":4986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4983,"mutability":"mutable","name":"reserve0","nameLocation":"8195:8:25","nodeType":"VariableDeclaration","scope":4987,"src":"8187:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4982,"name":"uint128","nodeType":"ElementaryTypeName","src":"8187:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4985,"mutability":"mutable","name":"reserve1","nameLocation":"8213:8:25","nodeType":"VariableDeclaration","scope":4987,"src":"8205:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4984,"name":"uint128","nodeType":"ElementaryTypeName","src":"8205:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8186:36:25"},"scope":5042,"src":"8141:82:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4988,"nodeType":"StructuredDocumentation","src":"8227:779:25","text":"@notice Returns the information about a position by the position's key\n @dev **important security note: caller should check reentrancy lock to prevent read-only reentrancy**\n @param key The position's key is a packed concatenation of the owner address, bottomTick and topTick indexes\n @return liquidity The amount of liquidity in the position\n @return innerFeeGrowth0Token Fee growth of token0 inside the tick range as of the last mint/burn/poke\n @return innerFeeGrowth1Token Fee growth of token1 inside the tick range as of the last mint/burn/poke\n @return fees0 The computed amount of token0 owed to the position as of the last mint/burn/poke\n @return fees1 The computed amount of token1 owed to the position as of the last mint/burn/poke"},"functionSelector":"514ea4bf","id":5003,"implemented":false,"kind":"function","modifiers":[],"name":"positions","nameLocation":"9018:9:25","nodeType":"FunctionDefinition","parameters":{"id":4991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4990,"mutability":"mutable","name":"key","nameLocation":"9041:3:25","nodeType":"VariableDeclaration","scope":5003,"src":"9033:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9033:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9027:21:25"},"returnParameters":{"id":5002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4993,"mutability":"mutable","name":"liquidity","nameLocation":"9080:9:25","nodeType":"VariableDeclaration","scope":5003,"src":"9072:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4992,"name":"uint256","nodeType":"ElementaryTypeName","src":"9072:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4995,"mutability":"mutable","name":"innerFeeGrowth0Token","nameLocation":"9099:20:25","nodeType":"VariableDeclaration","scope":5003,"src":"9091:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4994,"name":"uint256","nodeType":"ElementaryTypeName","src":"9091:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4997,"mutability":"mutable","name":"innerFeeGrowth1Token","nameLocation":"9129:20:25","nodeType":"VariableDeclaration","scope":5003,"src":"9121:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4996,"name":"uint256","nodeType":"ElementaryTypeName","src":"9121:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4999,"mutability":"mutable","name":"fees0","nameLocation":"9159:5:25","nodeType":"VariableDeclaration","scope":5003,"src":"9151:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4998,"name":"uint128","nodeType":"ElementaryTypeName","src":"9151:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":5001,"mutability":"mutable","name":"fees1","nameLocation":"9174:5:25","nodeType":"VariableDeclaration","scope":5003,"src":"9166:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5000,"name":"uint128","nodeType":"ElementaryTypeName","src":"9166:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9071:109:25"},"scope":5042,"src":"9009:172:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5004,"nodeType":"StructuredDocumentation","src":"9185:355:25","text":"@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks.\n Returned value cannot exceed type(uint128).max\n @dev **important security note: caller should check reentrancy lock to prevent read-only reentrancy**\n @return The current in range liquidity"},"functionSelector":"1a686502","id":5009,"implemented":false,"kind":"function","modifiers":[],"name":"liquidity","nameLocation":"9552:9:25","nodeType":"FunctionDefinition","parameters":{"id":5005,"nodeType":"ParameterList","parameters":[],"src":"9561:2:25"},"returnParameters":{"id":5008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5009,"src":"9587:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5006,"name":"uint128","nodeType":"ElementaryTypeName","src":"9587:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9586:9:25"},"scope":5042,"src":"9543:53:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5010,"nodeType":"StructuredDocumentation","src":"9600:436:25","text":"@notice The current tick spacing\n @dev Ticks can only be initialized by new mints at multiples of this value\n e.g.: a tickSpacing of 60 means ticks can be initialized every 60th tick, i.e., ..., -120, -60, 0, 60, 120, ...\n However, tickspacing can be changed after the ticks have been initialized.\n This value is an int24 to avoid casting even though it is always positive.\n @return The current tick spacing"},"functionSelector":"d0c93a7c","id":5015,"implemented":false,"kind":"function","modifiers":[],"name":"tickSpacing","nameLocation":"10048:11:25","nodeType":"FunctionDefinition","parameters":{"id":5011,"nodeType":"ParameterList","parameters":[],"src":"10059:2:25"},"returnParameters":{"id":5014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5015,"src":"10085:5:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5012,"name":"int24","nodeType":"ElementaryTypeName","src":"10085:5:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"10084:7:25"},"scope":5042,"src":"10039:53:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5016,"nodeType":"StructuredDocumentation","src":"10096:228:25","text":"@notice The previous initialized tick before (or at) current global tick\n @dev **important security note: caller should check reentrancy lock to prevent read-only reentrancy**\n @return The previous initialized tick"},"functionSelector":"050a4d21","id":5021,"implemented":false,"kind":"function","modifiers":[],"name":"prevTickGlobal","nameLocation":"10336:14:25","nodeType":"FunctionDefinition","parameters":{"id":5017,"nodeType":"ParameterList","parameters":[],"src":"10350:2:25"},"returnParameters":{"id":5020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5021,"src":"10376:5:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5018,"name":"int24","nodeType":"ElementaryTypeName","src":"10376:5:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"10375:7:25"},"scope":5042,"src":"10327:56:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5022,"nodeType":"StructuredDocumentation","src":"10387:211:25","text":"@notice The next initialized tick after current global tick\n @dev **important security note: caller should check reentrancy lock to prevent read-only reentrancy**\n @return The next initialized tick"},"functionSelector":"d5c35a7e","id":5027,"implemented":false,"kind":"function","modifiers":[],"name":"nextTickGlobal","nameLocation":"10610:14:25","nodeType":"FunctionDefinition","parameters":{"id":5023,"nodeType":"ParameterList","parameters":[],"src":"10624:2:25"},"returnParameters":{"id":5026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5027,"src":"10650:5:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5024,"name":"int24","nodeType":"ElementaryTypeName","src":"10650:5:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"10649:7:25"},"scope":5042,"src":"10601:56:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5028,"nodeType":"StructuredDocumentation","src":"10661:315:25","text":"@notice The root of tick search tree\n @dev Each bit corresponds to one node in the second layer of tick tree: '1' if node has at least one active bit.\n **important security note: caller should check reentrancy lock to prevent read-only reentrancy**\n @return The root of tick search tree as bitmap"},"functionSelector":"578b9a36","id":5033,"implemented":false,"kind":"function","modifiers":[],"name":"tickTreeRoot","nameLocation":"10988:12:25","nodeType":"FunctionDefinition","parameters":{"id":5029,"nodeType":"ParameterList","parameters":[],"src":"11000:2:25"},"returnParameters":{"id":5032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5033,"src":"11026:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5030,"name":"uint32","nodeType":"ElementaryTypeName","src":"11026:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"11025:8:25"},"scope":5042,"src":"10979:55:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5034,"nodeType":"StructuredDocumentation","src":"11038:347:25","text":"@notice The second layer of tick search tree\n @dev Each bit in node corresponds to one node in the leafs layer (`tickTable`) of tick tree: '1' if leaf has at least one active bit.\n **important security note: caller should check reentrancy lock to prevent read-only reentrancy**\n @return The node of tick search tree second layer"},"functionSelector":"d8619037","id":5041,"implemented":false,"kind":"function","modifiers":[],"name":"tickTreeSecondLayer","nameLocation":"11397:19:25","nodeType":"FunctionDefinition","parameters":{"id":5037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5041,"src":"11417:5:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":5035,"name":"int16","nodeType":"ElementaryTypeName","src":"11417:5:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"11416:7:25"},"returnParameters":{"id":5040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5041,"src":"11447:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5038,"name":"uint256","nodeType":"ElementaryTypeName","src":"11447:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11446:9:25"},"scope":5042,"src":"11388:68:25","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5043,"src":"475:10983:25","usedErrors":[],"usedEvents":[]}],"src":"45:11414:25"},"id":25},"contracts/interfaces/vault/IAlgebraCommunityVault.sol":{"ast":{"absolutePath":"contracts/interfaces/vault/IAlgebraCommunityVault.sol","exportedSymbols":{"IAlgebraCommunityVault":[5156]},"id":5157,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5044,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:26"},{"abstract":false,"baseContracts":[],"canonicalName":"IAlgebraCommunityVault","contractDependencies":[],"contractKind":"interface","documentation":{"id":5045,"nodeType":"StructuredDocumentation","src":"71:164:26","text":"@title The interface for the Algebra community fee vault\n @notice Community fee from pools is sent here, if it is enabled\n @dev Version: Algebra Integral"},"fullyImplemented":false,"id":5156,"linearizedBaseContracts":[5156],"name":"IAlgebraCommunityVault","nameLocation":"245:22:26","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":5046,"nodeType":"StructuredDocumentation","src":"272:239:26","text":"@notice Event emitted when a fees has been claimed\n @param token The address of token fee\n @param to The address where claimed rewards were sent to\n @param amount The amount of fees tokens claimed by communityFeeReceiver"},"eventSelector":"7a629b77ef27ad337abe438773206187960a90abfb43607826bef77d650e84b9","id":5054,"name":"TokensWithdrawal","nameLocation":"520:16:26","nodeType":"EventDefinition","parameters":{"id":5053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5048,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"553:5:26","nodeType":"VariableDeclaration","scope":5054,"src":"537:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5047,"name":"address","nodeType":"ElementaryTypeName","src":"537:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5050,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"576:2:26","nodeType":"VariableDeclaration","scope":5054,"src":"560:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5049,"name":"address","nodeType":"ElementaryTypeName","src":"560:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5052,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"588:6:26","nodeType":"VariableDeclaration","scope":5054,"src":"580:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5051,"name":"uint256","nodeType":"ElementaryTypeName","src":"580:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"536:59:26"},"src":"514:82:26"},{"anonymous":false,"documentation":{"id":5055,"nodeType":"StructuredDocumentation","src":"600:226:26","text":"@notice Event emitted when a fees has been claimed\n @param token The address of token fee\n @param to The address where claimed rewards were sent to\n @param amount The amount of fees tokens claimed by Algebra"},"eventSelector":"b7ee7fc9dacb957cfa93faeb8ca1826292de295e18e287a347dddfde7ab48b40","id":5063,"name":"AlgebraTokensWithdrawal","nameLocation":"835:23:26","nodeType":"EventDefinition","parameters":{"id":5062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5057,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"875:5:26","nodeType":"VariableDeclaration","scope":5063,"src":"859:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5056,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5059,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"898:2:26","nodeType":"VariableDeclaration","scope":5063,"src":"882:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5058,"name":"address","nodeType":"ElementaryTypeName","src":"882:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5061,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"910:6:26","nodeType":"VariableDeclaration","scope":5063,"src":"902:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5060,"name":"uint256","nodeType":"ElementaryTypeName","src":"902:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"858:59:26"},"src":"829:89:26"},{"anonymous":false,"documentation":{"id":5064,"nodeType":"StructuredDocumentation","src":"922:129:26","text":"@notice Emitted when a AlgebraFeeReceiver address changed\n @param newAlgebraFeeReceiver New Algebra fee receiver address"},"eventSelector":"34d1b5ef1c1c2c03a5000b91bef5c465790244c6751c794e5b45bed7657c38fd","id":5068,"name":"AlgebraFeeReceiver","nameLocation":"1060:18:26","nodeType":"EventDefinition","parameters":{"id":5067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5066,"indexed":false,"mutability":"mutable","name":"newAlgebraFeeReceiver","nameLocation":"1087:21:26","nodeType":"VariableDeclaration","scope":5068,"src":"1079:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5065,"name":"address","nodeType":"ElementaryTypeName","src":"1079:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1078:31:26"},"src":"1054:56:26"},{"anonymous":false,"documentation":{"id":5069,"nodeType":"StructuredDocumentation","src":"1114:146:26","text":"@notice Emitted when a AlgebraFeeManager address change proposed\n @param pendingAlgebraFeeManager New pending Algebra fee manager address"},"eventSelector":"ab6918ba7303f2f81e46e324b5f34af4bda562577c1da710e2034980fee1e82a","id":5073,"name":"PendingAlgebraFeeManager","nameLocation":"1269:24:26","nodeType":"EventDefinition","parameters":{"id":5072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5071,"indexed":false,"mutability":"mutable","name":"pendingAlgebraFeeManager","nameLocation":"1302:24:26","nodeType":"VariableDeclaration","scope":5073,"src":"1294:32:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5070,"name":"address","nodeType":"ElementaryTypeName","src":"1294:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1293:34:26"},"src":"1263:65:26"},{"anonymous":false,"documentation":{"id":5074,"nodeType":"StructuredDocumentation","src":"1332:127:26","text":"@notice Emitted when a new Algebra fee value proposed\n @param proposedNewAlgebraFee The new proposed Algebra fee value"},"eventSelector":"2d6ac59d6da98f80c7ea481d17c670ea310b000fff5cf1732d94d93652dd25b7","id":5078,"name":"AlgebraFeeProposal","nameLocation":"1468:18:26","nodeType":"EventDefinition","parameters":{"id":5077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5076,"indexed":false,"mutability":"mutable","name":"proposedNewAlgebraFee","nameLocation":"1494:21:26","nodeType":"VariableDeclaration","scope":5078,"src":"1487:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5075,"name":"uint16","nodeType":"ElementaryTypeName","src":"1487:6:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1486:30:26"},"src":"1462:55:26"},{"anonymous":false,"documentation":{"id":5079,"nodeType":"StructuredDocumentation","src":"1521:56:26","text":"@notice Emitted when a Algebra fee proposal canceled"},"eventSelector":"9f4bbade0736edbd2ec12c598bdac4573af13a3b57820ae4c7da5c61703eaaff","id":5081,"name":"CancelAlgebraFeeProposal","nameLocation":"1586:24:26","nodeType":"EventDefinition","parameters":{"id":5080,"nodeType":"ParameterList","parameters":[],"src":"1610:2:26"},"src":"1580:33:26"},{"anonymous":false,"documentation":{"id":5082,"nodeType":"StructuredDocumentation","src":"1617:126:26","text":"@notice Emitted when a AlgebraFeeManager address changed\n @param newAlgebraFeeManager New Algebra fee manager address"},"eventSelector":"ecf97a11fb2f2bcc38d1b6881865ecc04405af2d8b953004c79b3ab398732d02","id":5086,"name":"AlgebraFeeManager","nameLocation":"1752:17:26","nodeType":"EventDefinition","parameters":{"id":5085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5084,"indexed":false,"mutability":"mutable","name":"newAlgebraFeeManager","nameLocation":"1778:20:26","nodeType":"VariableDeclaration","scope":5086,"src":"1770:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5083,"name":"address","nodeType":"ElementaryTypeName","src":"1770:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1769:30:26"},"src":"1746:54:26"},{"anonymous":false,"documentation":{"id":5087,"nodeType":"StructuredDocumentation","src":"1804:104:26","text":"@notice Emitted when the Algebra fee is changed\n @param newAlgebraFee The new Algebra fee value"},"eventSelector":"da1e1a9a6410acc0398b3b64e0c0110b8df57e29bfe69a419cdd9ae12718c307","id":5091,"name":"AlgebraFee","nameLocation":"1917:10:26","nodeType":"EventDefinition","parameters":{"id":5090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5089,"indexed":false,"mutability":"mutable","name":"newAlgebraFee","nameLocation":"1935:13:26","nodeType":"VariableDeclaration","scope":5091,"src":"1928:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5088,"name":"uint16","nodeType":"ElementaryTypeName","src":"1928:6:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1927:22:26"},"src":"1911:39:26"},{"anonymous":false,"documentation":{"id":5092,"nodeType":"StructuredDocumentation","src":"1954:125:26","text":"@notice Emitted when a CommunityFeeReceiver address changed\n @param newCommunityFeeReceiver New fee receiver address"},"eventSelector":"2f4db788b994a5908051d68a2340153f49870447185a244d2326861e60cc4186","id":5096,"name":"CommunityFeeReceiver","nameLocation":"2088:20:26","nodeType":"EventDefinition","parameters":{"id":5095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5094,"indexed":false,"mutability":"mutable","name":"newCommunityFeeReceiver","nameLocation":"2117:23:26","nodeType":"VariableDeclaration","scope":5096,"src":"2109:31:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5093,"name":"address","nodeType":"ElementaryTypeName","src":"2109:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2108:33:26"},"src":"2082:60:26"},{"documentation":{"id":5097,"nodeType":"StructuredDocumentation","src":"2146:197:26","text":"@notice Withdraw protocol fees from vault\n @dev Can only be called by algebraFeeManager or communityFeeReceiver\n @param token The token address\n @param amount The amount of token"},"functionSelector":"f3fef3a3","id":5104,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"2355:8:26","nodeType":"FunctionDefinition","parameters":{"id":5102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5099,"mutability":"mutable","name":"token","nameLocation":"2372:5:26","nodeType":"VariableDeclaration","scope":5104,"src":"2364:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5098,"name":"address","nodeType":"ElementaryTypeName","src":"2364:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5101,"mutability":"mutable","name":"amount","nameLocation":"2387:6:26","nodeType":"VariableDeclaration","scope":5104,"src":"2379:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5100,"name":"uint256","nodeType":"ElementaryTypeName","src":"2379:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2363:31:26"},"returnParameters":{"id":5103,"nodeType":"ParameterList","parameters":[],"src":"2403:0:26"},"scope":5156,"src":"2346:58:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IAlgebraCommunityVault.WithdrawTokensParams","id":5109,"members":[{"constant":false,"id":5106,"mutability":"mutable","name":"token","nameLocation":"2450:5:26","nodeType":"VariableDeclaration","scope":5109,"src":"2442:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5105,"name":"address","nodeType":"ElementaryTypeName","src":"2442:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5108,"mutability":"mutable","name":"amount","nameLocation":"2469:6:26","nodeType":"VariableDeclaration","scope":5109,"src":"2461:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5107,"name":"uint256","nodeType":"ElementaryTypeName","src":"2461:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"WithdrawTokensParams","nameLocation":"2415:20:26","nodeType":"StructDefinition","scope":5156,"src":"2408:72:26","visibility":"public"},{"documentation":{"id":5110,"nodeType":"StructuredDocumentation","src":"2484:264:26","text":"@notice Withdraw protocol fees from vault. Used to claim fees for multiple tokens\n @dev Can be called by algebraFeeManager or communityFeeReceiver\n @param params Array of WithdrawTokensParams objects containing token addresses and amounts to withdraw"},"functionSelector":"dfadc794","id":5117,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTokens","nameLocation":"2760:14:26","nodeType":"FunctionDefinition","parameters":{"id":5115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5114,"mutability":"mutable","name":"params","nameLocation":"2807:6:26","nodeType":"VariableDeclaration","scope":5117,"src":"2775:38:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WithdrawTokensParams_$5109_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IAlgebraCommunityVault.WithdrawTokensParams[]"},"typeName":{"baseType":{"id":5112,"nodeType":"UserDefinedTypeName","pathNode":{"id":5111,"name":"WithdrawTokensParams","nameLocations":["2775:20:26"],"nodeType":"IdentifierPath","referencedDeclaration":5109,"src":"2775:20:26"},"referencedDeclaration":5109,"src":"2775:20:26","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawTokensParams_$5109_storage_ptr","typeString":"struct IAlgebraCommunityVault.WithdrawTokensParams"}},"id":5113,"nodeType":"ArrayTypeName","src":"2775:22:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WithdrawTokensParams_$5109_storage_$dyn_storage_ptr","typeString":"struct IAlgebraCommunityVault.WithdrawTokensParams[]"}},"visibility":"internal"}],"src":"2774:40:26"},"returnParameters":{"id":5116,"nodeType":"ParameterList","parameters":[],"src":"2823:0:26"},"scope":5156,"src":"2751:73:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5118,"nodeType":"StructuredDocumentation","src":"2885:254:26","text":"@notice Accepts the proposed new Algebra fee\n @dev Can only be called by the factory owner.\n The new value will also be used for previously accumulated tokens that have not yet been withdrawn\n @param newAlgebraFee New Algebra fee value"},"functionSelector":"ff3c43e1","id":5123,"implemented":false,"kind":"function","modifiers":[],"name":"acceptAlgebraFeeChangeProposal","nameLocation":"3151:30:26","nodeType":"FunctionDefinition","parameters":{"id":5121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5120,"mutability":"mutable","name":"newAlgebraFee","nameLocation":"3189:13:26","nodeType":"VariableDeclaration","scope":5123,"src":"3182:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5119,"name":"uint16","nodeType":"ElementaryTypeName","src":"3182:6:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3181:22:26"},"returnParameters":{"id":5122,"nodeType":"ParameterList","parameters":[],"src":"3212:0:26"},"scope":5156,"src":"3142:71:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5124,"nodeType":"StructuredDocumentation","src":"3217:172:26","text":"@notice Change community fee receiver address\n @dev Can only be called by the factory owner\n @param newCommunityFeeReceiver New community fee receiver address"},"functionSelector":"b5f680ae","id":5129,"implemented":false,"kind":"function","modifiers":[],"name":"changeCommunityFeeReceiver","nameLocation":"3401:26:26","nodeType":"FunctionDefinition","parameters":{"id":5127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5126,"mutability":"mutable","name":"newCommunityFeeReceiver","nameLocation":"3436:23:26","nodeType":"VariableDeclaration","scope":5129,"src":"3428:31:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5125,"name":"address","nodeType":"ElementaryTypeName","src":"3428:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3427:33:26"},"returnParameters":{"id":5128,"nodeType":"ParameterList","parameters":[],"src":"3469:0:26"},"scope":5156,"src":"3392:78:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5130,"nodeType":"StructuredDocumentation","src":"3529:113:26","text":"@notice Transfers Algebra fee manager role\n @param _newAlgebraFeeManager new Algebra fee manager address"},"functionSelector":"50eea0c8","id":5135,"implemented":false,"kind":"function","modifiers":[],"name":"transferAlgebraFeeManagerRole","nameLocation":"3654:29:26","nodeType":"FunctionDefinition","parameters":{"id":5133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5132,"mutability":"mutable","name":"_newAlgebraFeeManager","nameLocation":"3692:21:26","nodeType":"VariableDeclaration","scope":5135,"src":"3684:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5131,"name":"address","nodeType":"ElementaryTypeName","src":"3684:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3683:31:26"},"returnParameters":{"id":5134,"nodeType":"ParameterList","parameters":[],"src":"3723:0:26"},"scope":5156,"src":"3645:79:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5136,"nodeType":"StructuredDocumentation","src":"3728:42:26","text":"@notice accept Algebra FeeManager role"},"functionSelector":"ad6129ac","id":5139,"implemented":false,"kind":"function","modifiers":[],"name":"acceptAlgebraFeeManagerRole","nameLocation":"3782:27:26","nodeType":"FunctionDefinition","parameters":{"id":5137,"nodeType":"ParameterList","parameters":[],"src":"3809:2:26"},"returnParameters":{"id":5138,"nodeType":"ParameterList","parameters":[],"src":"3820:0:26"},"scope":5156,"src":"3773:48:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5140,"nodeType":"StructuredDocumentation","src":"3825:214:26","text":"@notice Proposes new Algebra fee value for protocol\n @dev the new value will also be used for previously accumulated tokens that have not yet been withdrawn\n @param newAlgebraFee new Algebra fee value"},"functionSelector":"d9fb4353","id":5145,"implemented":false,"kind":"function","modifiers":[],"name":"proposeAlgebraFeeChange","nameLocation":"4051:23:26","nodeType":"FunctionDefinition","parameters":{"id":5143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5142,"mutability":"mutable","name":"newAlgebraFee","nameLocation":"4082:13:26","nodeType":"VariableDeclaration","scope":5145,"src":"4075:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5141,"name":"uint16","nodeType":"ElementaryTypeName","src":"4075:6:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4074:22:26"},"returnParameters":{"id":5144,"nodeType":"ParameterList","parameters":[],"src":"4105:0:26"},"scope":5156,"src":"4042:64:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5146,"nodeType":"StructuredDocumentation","src":"4110:47:26","text":"@notice Cancels Algebra fee change proposal"},"functionSelector":"d17bc783","id":5149,"implemented":false,"kind":"function","modifiers":[],"name":"cancelAlgebraFeeChangeProposal","nameLocation":"4169:30:26","nodeType":"FunctionDefinition","parameters":{"id":5147,"nodeType":"ParameterList","parameters":[],"src":"4199:2:26"},"returnParameters":{"id":5148,"nodeType":"ParameterList","parameters":[],"src":"4210:0:26"},"scope":5156,"src":"4160:51:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5150,"nodeType":"StructuredDocumentation","src":"4215:129:26","text":"@notice Change Algebra community fee part receiver\n @param newAlgebraFeeReceiver The address of new Algebra fee receiver"},"functionSelector":"48a50fcf","id":5155,"implemented":false,"kind":"function","modifiers":[],"name":"changeAlgebraFeeReceiver","nameLocation":"4356:24:26","nodeType":"FunctionDefinition","parameters":{"id":5153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5152,"mutability":"mutable","name":"newAlgebraFeeReceiver","nameLocation":"4389:21:26","nodeType":"VariableDeclaration","scope":5155,"src":"4381:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5151,"name":"address","nodeType":"ElementaryTypeName","src":"4381:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4380:31:26"},"returnParameters":{"id":5154,"nodeType":"ParameterList","parameters":[],"src":"4420:0:26"},"scope":5156,"src":"4347:74:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5157,"src":"235:4188:26","usedErrors":[],"usedEvents":[5054,5063,5068,5073,5078,5081,5086,5091,5096]}],"src":"45:4379:26"},"id":26},"contracts/interfaces/vault/IAlgebraVaultFactory.sol":{"ast":{"absolutePath":"contracts/interfaces/vault/IAlgebraVaultFactory.sol","exportedSymbols":{"IAlgebraVaultFactory":[5184]},"id":5185,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5158,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"IAlgebraVaultFactory","contractDependencies":[],"contractKind":"interface","documentation":{"id":5159,"nodeType":"StructuredDocumentation","src":"71:158:27","text":"@title The interface for the Algebra Vault Factory\n @notice This contract can be used for automatic vaults creation\n @dev Version: Algebra Integral"},"fullyImplemented":false,"id":5184,"linearizedBaseContracts":[5184],"name":"IAlgebraVaultFactory","nameLocation":"239:20:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5160,"nodeType":"StructuredDocumentation","src":"264:189:27","text":"@notice returns address of the community fee vault for the pool\n @param pool the address of Algebra Integral pool\n @return communityFeeVault the address of community fee vault"},"functionSelector":"7570e389","id":5167,"implemented":false,"kind":"function","modifiers":[],"name":"getVaultForPool","nameLocation":"465:15:27","nodeType":"FunctionDefinition","parameters":{"id":5163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5162,"mutability":"mutable","name":"pool","nameLocation":"489:4:27","nodeType":"VariableDeclaration","scope":5167,"src":"481:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5161,"name":"address","nodeType":"ElementaryTypeName","src":"481:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"480:14:27"},"returnParameters":{"id":5166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5165,"mutability":"mutable","name":"communityFeeVault","nameLocation":"526:17:27","nodeType":"VariableDeclaration","scope":5167,"src":"518:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5164,"name":"address","nodeType":"ElementaryTypeName","src":"518:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"517:27:27"},"scope":5184,"src":"456:89:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5168,"nodeType":"StructuredDocumentation","src":"549:188:27","text":"@notice creates the community fee vault for the pool if needed\n @param pool the address of Algebra Integral pool\n @return communityFeeVault the address of community fee vault"},"functionSelector":"b8a1d3c6","id":5183,"implemented":false,"kind":"function","modifiers":[],"name":"createVaultForPool","nameLocation":"749:18:27","nodeType":"FunctionDefinition","parameters":{"id":5179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5170,"mutability":"mutable","name":"pool","nameLocation":"781:4:27","nodeType":"VariableDeclaration","scope":5183,"src":"773:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5169,"name":"address","nodeType":"ElementaryTypeName","src":"773:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5172,"mutability":"mutable","name":"creator","nameLocation":"799:7:27","nodeType":"VariableDeclaration","scope":5183,"src":"791:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5171,"name":"address","nodeType":"ElementaryTypeName","src":"791:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5174,"mutability":"mutable","name":"deployer","nameLocation":"820:8:27","nodeType":"VariableDeclaration","scope":5183,"src":"812:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5173,"name":"address","nodeType":"ElementaryTypeName","src":"812:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5176,"mutability":"mutable","name":"token0","nameLocation":"842:6:27","nodeType":"VariableDeclaration","scope":5183,"src":"834:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5175,"name":"address","nodeType":"ElementaryTypeName","src":"834:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5178,"mutability":"mutable","name":"token1","nameLocation":"862:6:27","nodeType":"VariableDeclaration","scope":5183,"src":"854:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5177,"name":"address","nodeType":"ElementaryTypeName","src":"854:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"767:105:27"},"returnParameters":{"id":5182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5181,"mutability":"mutable","name":"communityFeeVault","nameLocation":"899:17:27","nodeType":"VariableDeclaration","scope":5183,"src":"891:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5180,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:27:27"},"scope":5184,"src":"740:178:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5185,"src":"229:691:27","usedErrors":[],"usedEvents":[]}],"src":"45:876:27"},"id":27},"contracts/libraries/Constants.sol":{"ast":{"absolutePath":"contracts/libraries/Constants.sol","exportedSymbols":{"Constants":[5239]},"id":5240,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5186,"literals":["solidity",">=","0.5",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"45:31:28"},{"abstract":false,"baseContracts":[],"canonicalName":"Constants","contractDependencies":[],"contractKind":"library","documentation":{"id":5187,"nodeType":"StructuredDocumentation","src":"78:166:28","text":"@title Contains common constants for Algebra contracts\n @dev Constants moved to the library, not the base contract, to further emphasize their constant nature"},"fullyImplemented":true,"id":5239,"linearizedBaseContracts":[5239],"name":"Constants","nameLocation":"252:9:28","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5190,"mutability":"constant","name":"RESOLUTION","nameLocation":"290:10:28","nodeType":"VariableDeclaration","scope":5239,"src":"266:39:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5188,"name":"uint8","nodeType":"ElementaryTypeName","src":"266:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3936","id":5189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"303:2:28","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"visibility":"internal"},{"constant":true,"id":5195,"mutability":"constant","name":"Q96","nameLocation":"335:3:28","nodeType":"VariableDeclaration","scope":5239,"src":"309:39:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5191,"name":"uint256","nodeType":"ElementaryTypeName","src":"309:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_79228162514264337593543950336_by_1","typeString":"int_const 79228162514264337593543950336"},"id":5194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"341:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3936","id":5193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"346:2:28","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"341:7:28","typeDescriptions":{"typeIdentifier":"t_rational_79228162514264337593543950336_by_1","typeString":"int_const 79228162514264337593543950336"}},"visibility":"internal"},{"constant":true,"id":5200,"mutability":"constant","name":"Q128","nameLocation":"378:4:28","nodeType":"VariableDeclaration","scope":5239,"src":"352:41:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5196,"name":"uint256","nodeType":"ElementaryTypeName","src":"352:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"385:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"390:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"385:8:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"visibility":"internal"},{"constant":true,"id":5203,"mutability":"constant","name":"FEE_DENOMINATOR","nameLocation":"423:15:28","nodeType":"VariableDeclaration","scope":5239,"src":"398:46:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5201,"name":"uint24","nodeType":"ElementaryTypeName","src":"398:6:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"value":{"hexValue":"316536","id":5202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"441:3:28","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1e6"},"visibility":"internal"},{"constant":true,"id":5206,"mutability":"constant","name":"FLASH_FEE","nameLocation":"473:9:28","nodeType":"VariableDeclaration","scope":5239,"src":"448:43:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5204,"name":"uint16","nodeType":"ElementaryTypeName","src":"448:6:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"302e30316534","id":5205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"485:6:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"0.01e4"},"visibility":"internal"},{"constant":true,"id":5209,"mutability":"constant","name":"INIT_DEFAULT_FEE","nameLocation":"573:16:28","nodeType":"VariableDeclaration","scope":5239,"src":"548:50:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5207,"name":"uint16","nodeType":"ElementaryTypeName","src":"548:6:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"302e30356534","id":5208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"592:6:28","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"0.05e4"},"visibility":"internal"},{"constant":true,"id":5212,"mutability":"constant","name":"MAX_DEFAULT_FEE","nameLocation":"684:15:28","nodeType":"VariableDeclaration","scope":5239,"src":"659:46:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5210,"name":"uint16","nodeType":"ElementaryTypeName","src":"659:6:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"356534","id":5211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"702:3:28","typeDescriptions":{"typeIdentifier":"t_rational_50000_by_1","typeString":"int_const 50000"},"value":"5e4"},"visibility":"internal"},{"constant":true,"id":5215,"mutability":"constant","name":"INIT_DEFAULT_TICK_SPACING","nameLocation":"787:25:28","nodeType":"VariableDeclaration","scope":5239,"src":"763:54:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5213,"name":"int24","nodeType":"ElementaryTypeName","src":"763:5:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"value":{"hexValue":"3630","id":5214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"815:2:28","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"visibility":"internal"},{"constant":true,"id":5218,"mutability":"constant","name":"MAX_TICK_SPACING","nameLocation":"845:16:28","nodeType":"VariableDeclaration","scope":5239,"src":"821:46:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5216,"name":"int24","nodeType":"ElementaryTypeName","src":"821:5:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"value":{"hexValue":"353030","id":5217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"864:3:28","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"visibility":"internal"},{"constant":true,"id":5221,"mutability":"constant","name":"MIN_TICK_SPACING","nameLocation":"895:16:28","nodeType":"VariableDeclaration","scope":5239,"src":"871:44:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5219,"name":"int24","nodeType":"ElementaryTypeName","src":"871:5:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"value":{"hexValue":"31","id":5220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"914:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":5224,"mutability":"constant","name":"FEE_TRANSFER_FREQUENCY","nameLocation":"1028:22:28","nodeType":"VariableDeclaration","scope":5239,"src":"1003:57:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5222,"name":"uint32","nodeType":"ElementaryTypeName","src":"1003:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"38","id":5223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1053:7:28","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_28800_by_1","typeString":"int_const 28800"},"value":"8"},"visibility":"internal"},{"constant":true,"id":5227,"mutability":"constant","name":"MAX_LIQUIDITY_PER_TICK","nameLocation":"1133:22:28","nodeType":"VariableDeclaration","scope":5239,"src":"1107:84:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5225,"name":"uint128","nodeType":"ElementaryTypeName","src":"1107:7:28","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"value":{"hexValue":"313931373537363338353337353237363438343930373532383936313938353533","id":5226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1158:33:28","typeDescriptions":{"typeIdentifier":"t_rational_191757638537527648490752896198553_by_1","typeString":"int_const 1917...(25 digits omitted)...8553"},"value":"191757638537527648490752896198553"},"visibility":"internal"},{"constant":true,"id":5230,"mutability":"constant","name":"MAX_COMMUNITY_FEE","nameLocation":"1221:17:28","nodeType":"VariableDeclaration","scope":5239,"src":"1196:48:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5228,"name":"uint16","nodeType":"ElementaryTypeName","src":"1196:6:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"316533","id":5229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1241:3:28","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1e3"},"visibility":"internal"},{"constant":true,"id":5233,"mutability":"constant","name":"COMMUNITY_FEE_DENOMINATOR","nameLocation":"1282:25:28","nodeType":"VariableDeclaration","scope":5239,"src":"1256:57:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5231,"name":"uint256","nodeType":"ElementaryTypeName","src":"1256:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"316533","id":5232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1310:3:28","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1e3"},"visibility":"internal"},{"constant":true,"id":5238,"mutability":"constant","name":"POOLS_ADMINISTRATOR_ROLE","nameLocation":"1387:24:28","nodeType":"VariableDeclaration","scope":5239,"src":"1361:85:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1361:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"504f4f4c535f41444d494e4953545241544f52","id":5236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1424:21:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_b73ce166ead2f8e9add217713a7989e4edfba9625f71dfd2516204bb67ad3442","typeString":"literal_string \"POOLS_ADMINISTRATOR\""},"value":"POOLS_ADMINISTRATOR"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_b73ce166ead2f8e9add217713a7989e4edfba9625f71dfd2516204bb67ad3442","typeString":"literal_string \"POOLS_ADMINISTRATOR\""}],"id":5235,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1414:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"scope":5240,"src":"244:1205:28","usedErrors":[],"usedEvents":[]}],"src":"45:1405:28"},"id":28},"contracts/libraries/FullMath.sol":{"ast":{"absolutePath":"contracts/libraries/FullMath.sol","exportedSymbols":{"FullMath":[5446]},"id":5447,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5241,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:29"},{"abstract":false,"baseContracts":[],"canonicalName":"FullMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5242,"nodeType":"StructuredDocumentation","src":"57:297:29","text":"@title Contains 512-bit math functions\n @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits"},"fullyImplemented":true,"id":5446,"linearizedBaseContracts":[5446],"name":"FullMath","nameLocation":"362:8:29","nodeType":"ContractDefinition","nodes":[{"body":{"id":5363,"nodeType":"Block","src":"825:3390:29","statements":[{"id":5362,"nodeType":"UncheckedBlock","src":"831:3380:29","statements":[{"assignments":[5255],"declarations":[{"constant":false,"id":5255,"mutability":"mutable","name":"prod0","nameLocation":"1150:5:29","nodeType":"VariableDeclaration","scope":5362,"src":"1142:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5254,"name":"uint256","nodeType":"ElementaryTypeName","src":"1142:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5259,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5256,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"1158:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5257,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"1162:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1158:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1142:21:29"},{"assignments":[5261],"declarations":[{"constant":false,"id":5261,"mutability":"mutable","name":"prod1","nameLocation":"1224:5:29","nodeType":"VariableDeclaration","scope":5362,"src":"1216:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5260,"name":"uint256","nodeType":"ElementaryTypeName","src":"1216:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5262,"nodeType":"VariableDeclarationStatement","src":"1216:13:29"},{"AST":{"nodeType":"YulBlock","src":"1290:100:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1300:30:29","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1317:1:29"},{"name":"b","nodeType":"YulIdentifier","src":"1320:1:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1327:1:29","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1323:3:29"},"nodeType":"YulFunctionCall","src":"1323:6:29"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1310:6:29"},"nodeType":"YulFunctionCall","src":"1310:20:29"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1304:2:29","type":""}]},{"nodeType":"YulAssignment","src":"1339:43:29","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1356:2:29"},{"name":"prod0","nodeType":"YulIdentifier","src":"1360:5:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1352:3:29"},"nodeType":"YulFunctionCall","src":"1352:14:29"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1371:2:29"},{"name":"prod0","nodeType":"YulIdentifier","src":"1375:5:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1368:2:29"},"nodeType":"YulFunctionCall","src":"1368:13:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1348:3:29"},"nodeType":"YulFunctionCall","src":"1348:34:29"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"1339:5:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5245,"isOffset":false,"isSlot":false,"src":"1317:1:29","valueSize":1},{"declaration":5247,"isOffset":false,"isSlot":false,"src":"1320:1:29","valueSize":1},{"declaration":5255,"isOffset":false,"isSlot":false,"src":"1360:5:29","valueSize":1},{"declaration":5255,"isOffset":false,"isSlot":false,"src":"1375:5:29","valueSize":1},{"declaration":5261,"isOffset":false,"isSlot":false,"src":"1339:5:29","valueSize":1}],"id":5263,"nodeType":"InlineAssembly","src":"1281:109:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5265,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"1497:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5266,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"1511:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1497:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5264,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1489:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1489:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5269,"nodeType":"ExpressionStatement","src":"1489:28:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5270,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"1586:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1595:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1586:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5277,"nodeType":"IfStatement","src":"1582:121:29","trueBody":{"id":5276,"nodeType":"Block","src":"1598:105:29","statements":[{"AST":{"nodeType":"YulBlock","src":"1617:55:29","statements":[{"nodeType":"YulAssignment","src":"1629:33:29","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"1643:5:29"},{"name":"denominator","nodeType":"YulIdentifier","src":"1650:11:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1639:3:29"},"nodeType":"YulFunctionCall","src":"1639:23:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1629:6:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5249,"isOffset":false,"isSlot":false,"src":"1650:11:29","valueSize":1},{"declaration":5255,"isOffset":false,"isSlot":false,"src":"1643:5:29","valueSize":1},{"declaration":5252,"isOffset":false,"isSlot":false,"src":"1629:6:29","valueSize":1}],"id":5273,"nodeType":"InlineAssembly","src":"1608:64:29"},{"expression":{"id":5274,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"1688:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5253,"id":5275,"nodeType":"Return","src":"1681:13:29"}]}},{"AST":{"nodeType":"YulBlock","src":"2032:149:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2042:42:29","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2066:1:29"},{"name":"b","nodeType":"YulIdentifier","src":"2069:1:29"},{"name":"denominator","nodeType":"YulIdentifier","src":"2072:11:29"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2059:6:29"},"nodeType":"YulFunctionCall","src":"2059:25:29"},"variables":[{"name":"remainder","nodeType":"YulTypedName","src":"2046:9:29","type":""}]},{"nodeType":"YulAssignment","src":"2093:41:29","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"2106:5:29"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"2116:9:29"},{"name":"prod0","nodeType":"YulIdentifier","src":"2127:5:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2113:2:29"},"nodeType":"YulFunctionCall","src":"2113:20:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2102:3:29"},"nodeType":"YulFunctionCall","src":"2102:32:29"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2093:5:29"}]},{"nodeType":"YulAssignment","src":"2143:30:29","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"2156:5:29"},{"name":"remainder","nodeType":"YulIdentifier","src":"2163:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2152:3:29"},"nodeType":"YulFunctionCall","src":"2152:21:29"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2143:5:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5245,"isOffset":false,"isSlot":false,"src":"2066:1:29","valueSize":1},{"declaration":5247,"isOffset":false,"isSlot":false,"src":"2069:1:29","valueSize":1},{"declaration":5249,"isOffset":false,"isSlot":false,"src":"2072:11:29","valueSize":1},{"declaration":5255,"isOffset":false,"isSlot":false,"src":"2127:5:29","valueSize":1},{"declaration":5255,"isOffset":false,"isSlot":false,"src":"2143:5:29","valueSize":1},{"declaration":5255,"isOffset":false,"isSlot":false,"src":"2156:5:29","valueSize":1},{"declaration":5261,"isOffset":false,"isSlot":false,"src":"2093:5:29","valueSize":1},{"declaration":5261,"isOffset":false,"isSlot":false,"src":"2106:5:29","valueSize":1}],"id":5278,"nodeType":"InlineAssembly","src":"2023:158:29"},{"assignments":[5280],"declarations":[{"constant":false,"id":5280,"mutability":"mutable","name":"twos","nameLocation":"2330:4:29","nodeType":"VariableDeclaration","scope":5362,"src":"2322:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5279,"name":"uint256","nodeType":"ElementaryTypeName","src":"2322:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5287,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":5281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2338:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5282,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"2342:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2338:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2337:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5285,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"2357:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2337:31:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2322:46:29"},{"AST":{"nodeType":"YulBlock","src":"2429:55:29","statements":[{"nodeType":"YulAssignment","src":"2439:37:29","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"2458:11:29"},{"name":"twos","nodeType":"YulIdentifier","src":"2471:4:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2454:3:29"},"nodeType":"YulFunctionCall","src":"2454:22:29"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"2439:11:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5249,"isOffset":false,"isSlot":false,"src":"2439:11:29","valueSize":1},{"declaration":5249,"isOffset":false,"isSlot":false,"src":"2458:11:29","valueSize":1},{"declaration":5280,"isOffset":false,"isSlot":false,"src":"2471:4:29","valueSize":1}],"id":5288,"nodeType":"InlineAssembly","src":"2420:64:29"},{"AST":{"nodeType":"YulBlock","src":"2553:43:29","statements":[{"nodeType":"YulAssignment","src":"2563:25:29","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"2576:5:29"},{"name":"twos","nodeType":"YulIdentifier","src":"2583:4:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2572:3:29"},"nodeType":"YulFunctionCall","src":"2572:16:29"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2563:5:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5255,"isOffset":false,"isSlot":false,"src":"2563:5:29","valueSize":1},{"declaration":5255,"isOffset":false,"isSlot":false,"src":"2576:5:29","valueSize":1},{"declaration":5280,"isOffset":false,"isSlot":false,"src":"2583:4:29","valueSize":1}],"id":5289,"nodeType":"InlineAssembly","src":"2544:52:29"},{"AST":{"nodeType":"YulBlock","src":"2776:57:29","statements":[{"nodeType":"YulAssignment","src":"2786:39:29","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2806:1:29","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"2809:4:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2802:3:29"},"nodeType":"YulFunctionCall","src":"2802:12:29"},{"name":"twos","nodeType":"YulIdentifier","src":"2816:4:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2798:3:29"},"nodeType":"YulFunctionCall","src":"2798:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2823:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2794:3:29"},"nodeType":"YulFunctionCall","src":"2794:31:29"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"2786:4:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5280,"isOffset":false,"isSlot":false,"src":"2786:4:29","valueSize":1},{"declaration":5280,"isOffset":false,"isSlot":false,"src":"2809:4:29","valueSize":1},{"declaration":5280,"isOffset":false,"isSlot":false,"src":"2816:4:29","valueSize":1}],"id":5290,"nodeType":"InlineAssembly","src":"2767:66:29"},{"expression":{"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5291,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"2840:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5292,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"2849:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5293,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"2857:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2849:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2840:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5296,"nodeType":"ExpressionStatement","src":"2840:21:29"},{"assignments":[5298],"declarations":[{"constant":false,"id":5298,"mutability":"mutable","name":"inv","nameLocation":"3191:3:29","nodeType":"VariableDeclaration","scope":5362,"src":"3183:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5297,"name":"uint256","nodeType":"ElementaryTypeName","src":"3183:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5305,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3198:1:29","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5300,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"3202:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3198:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3197:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":5303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3217:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3197:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3183:35:29"},{"expression":{"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5306,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"3425:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3432:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5308,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"3436:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5309,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"3450:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3436:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3432:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3425:28:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5313,"nodeType":"ExpressionStatement","src":"3425:28:29"},{"expression":{"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5314,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"3481:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3488:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5316,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"3492:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5317,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"3506:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3492:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3488:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3481:28:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5321,"nodeType":"ExpressionStatement","src":"3481:28:29"},{"expression":{"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5322,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"3538:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3545:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5324,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"3549:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5325,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"3563:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3545:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3538:28:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5329,"nodeType":"ExpressionStatement","src":"3538:28:29"},{"expression":{"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5330,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"3595:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3602:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5332,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"3606:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5333,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"3620:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3606:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3602:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3595:28:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5337,"nodeType":"ExpressionStatement","src":"3595:28:29"},{"expression":{"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5338,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"3652:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3659:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5340,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"3663:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5341,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"3677:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3663:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3659:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3652:28:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5345,"nodeType":"ExpressionStatement","src":"3652:28:29"},{"expression":{"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5346,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"3710:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3717:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5348,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"3721:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5349,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"3735:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3717:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3710:28:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5353,"nodeType":"ExpressionStatement","src":"3710:28:29"},{"expression":{"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5354,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"4163:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5355,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"4172:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5356,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"4180:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4172:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4163:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5359,"nodeType":"ExpressionStatement","src":"4163:20:29"},{"expression":{"id":5360,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"4198:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5253,"id":5361,"nodeType":"Return","src":"4191:13:29"}]}]},"documentation":{"id":5243,"nodeType":"StructuredDocumentation","src":"375:349:29","text":"@notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv"},"id":5364,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"736:6:29","nodeType":"FunctionDefinition","parameters":{"id":5250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5245,"mutability":"mutable","name":"a","nameLocation":"751:1:29","nodeType":"VariableDeclaration","scope":5364,"src":"743:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5244,"name":"uint256","nodeType":"ElementaryTypeName","src":"743:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5247,"mutability":"mutable","name":"b","nameLocation":"762:1:29","nodeType":"VariableDeclaration","scope":5364,"src":"754:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5246,"name":"uint256","nodeType":"ElementaryTypeName","src":"754:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5249,"mutability":"mutable","name":"denominator","nameLocation":"773:11:29","nodeType":"VariableDeclaration","scope":5364,"src":"765:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5248,"name":"uint256","nodeType":"ElementaryTypeName","src":"765:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"742:43:29"},"returnParameters":{"id":5253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5252,"mutability":"mutable","name":"result","nameLocation":"817:6:29","nodeType":"VariableDeclaration","scope":5364,"src":"809:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5251,"name":"uint256","nodeType":"ElementaryTypeName","src":"809:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"808:16:29"},"scope":5446,"src":"727:3488:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5432,"nodeType":"Block","src":"4593:413:29","statements":[{"id":5431,"nodeType":"UncheckedBlock","src":"4599:403:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5376,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5367,"src":"4621:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4626:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4621:6:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5379,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"4633:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5380,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5367,"src":"4642:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5381,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"4646:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4642:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4633:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5384,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4632:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5385,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5367,"src":"4651:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4632:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5387,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"4656:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4632:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5389,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4631:27:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4621:37:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5429,"nodeType":"Block","src":"4821:175:29","statements":[{"expression":{"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5399,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"4831:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5401,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5367,"src":"4847:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5402,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"4850:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5403,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"4853:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5400,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"4840:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4840:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4831:34:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5406,"nodeType":"ExpressionStatement","src":"4831:34:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5408,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5367,"src":"4886:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5409,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"4889:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5410,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"4892:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5407,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"4879:6:29","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4879:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4907:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4879:29:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5428,"nodeType":"IfStatement","src":"4875:113:29","trueBody":{"id":5427,"nodeType":"Block","src":"4910:78:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5415,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"4930:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":5418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4944:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5417,"name":"uint256","nodeType":"ElementaryTypeName","src":"4944:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5416,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4939:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4939:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4953:3:29","memberName":"max","nodeType":"MemberAccess","src":"4939:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4930:26:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5414,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4922:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4922:35:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5423,"nodeType":"ExpressionStatement","src":"4922:35:29"},{"expression":{"id":5425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4969:8:29","subExpression":{"id":5424,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"4969:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5426,"nodeType":"ExpressionStatement","src":"4969:8:29"}]}}]},"id":5430,"nodeType":"IfStatement","src":"4617:379:29","trueBody":{"id":5398,"nodeType":"Block","src":"4660:155:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5392,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"4678:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4692:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4678:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5391,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4670:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4670:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5396,"nodeType":"ExpressionStatement","src":"4670:24:29"},{"AST":{"nodeType":"YulBlock","src":"4713:94:29","statements":[{"nodeType":"YulAssignment","src":"4725:72:29","value":{"arguments":[{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"4743:6:29"},{"name":"denominator","nodeType":"YulIdentifier","src":"4751:11:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4739:3:29"},"nodeType":"YulFunctionCall","src":"4739:24:29"},{"arguments":[{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"4772:6:29"},{"name":"denominator","nodeType":"YulIdentifier","src":"4780:11:29"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"4768:3:29"},"nodeType":"YulFunctionCall","src":"4768:24:29"},{"kind":"number","nodeType":"YulLiteral","src":"4794:1:29","type":"","value":"0"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4765:2:29"},"nodeType":"YulFunctionCall","src":"4765:31:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4735:3:29"},"nodeType":"YulFunctionCall","src":"4735:62:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4725:6:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5371,"isOffset":false,"isSlot":false,"src":"4751:11:29","valueSize":1},{"declaration":5371,"isOffset":false,"isSlot":false,"src":"4780:11:29","valueSize":1},{"declaration":5374,"isOffset":false,"isSlot":false,"src":"4725:6:29","valueSize":1},{"declaration":5374,"isOffset":false,"isSlot":false,"src":"4743:6:29","valueSize":1},{"declaration":5374,"isOffset":false,"isSlot":false,"src":"4772:6:29","valueSize":1}],"id":5397,"nodeType":"InlineAssembly","src":"4704:103:29"}]}}]}]},"documentation":{"id":5365,"nodeType":"StructuredDocumentation","src":"4219:263:29","text":"@notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result"},"id":5433,"implemented":true,"kind":"function","modifiers":[],"name":"mulDivRoundingUp","nameLocation":"4494:16:29","nodeType":"FunctionDefinition","parameters":{"id":5372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5367,"mutability":"mutable","name":"a","nameLocation":"4519:1:29","nodeType":"VariableDeclaration","scope":5433,"src":"4511:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5366,"name":"uint256","nodeType":"ElementaryTypeName","src":"4511:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5369,"mutability":"mutable","name":"b","nameLocation":"4530:1:29","nodeType":"VariableDeclaration","scope":5433,"src":"4522:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5368,"name":"uint256","nodeType":"ElementaryTypeName","src":"4522:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5371,"mutability":"mutable","name":"denominator","nameLocation":"4541:11:29","nodeType":"VariableDeclaration","scope":5433,"src":"4533:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5370,"name":"uint256","nodeType":"ElementaryTypeName","src":"4533:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4510:43:29"},"returnParameters":{"id":5375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5374,"mutability":"mutable","name":"result","nameLocation":"4585:6:29","nodeType":"VariableDeclaration","scope":5433,"src":"4577:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5373,"name":"uint256","nodeType":"ElementaryTypeName","src":"4577:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4576:16:29"},"scope":5446,"src":"4485:521:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5444,"nodeType":"Block","src":"5308:70:29","statements":[{"AST":{"nodeType":"YulBlock","src":"5323:51:29","statements":[{"nodeType":"YulAssignment","src":"5331:37:29","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5344:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"5347:1:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5340:3:29"},"nodeType":"YulFunctionCall","src":"5340:9:29"},{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5358:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"5361:1:29"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"5354:3:29"},"nodeType":"YulFunctionCall","src":"5354:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5365:1:29","type":"","value":"0"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5351:2:29"},"nodeType":"YulFunctionCall","src":"5351:16:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5336:3:29"},"nodeType":"YulFunctionCall","src":"5336:32:29"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"5331:1:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5436,"isOffset":false,"isSlot":false,"src":"5344:1:29","valueSize":1},{"declaration":5436,"isOffset":false,"isSlot":false,"src":"5358:1:29","valueSize":1},{"declaration":5438,"isOffset":false,"isSlot":false,"src":"5347:1:29","valueSize":1},{"declaration":5438,"isOffset":false,"isSlot":false,"src":"5361:1:29","valueSize":1},{"declaration":5441,"isOffset":false,"isSlot":false,"src":"5331:1:29","valueSize":1}],"id":5443,"nodeType":"InlineAssembly","src":"5314:60:29"}]},"documentation":{"id":5434,"nodeType":"StructuredDocumentation","src":"5010:210:29","text":"@notice Returns ceil(x / y)\n @dev division by 0 has unspecified behavior, and must be checked externally\n @param x The dividend\n @param y The divisor\n @return z The quotient, ceil(x / y)"},"id":5445,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeDivRoundingUp","nameLocation":"5232:19:29","nodeType":"FunctionDefinition","parameters":{"id":5439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5436,"mutability":"mutable","name":"x","nameLocation":"5260:1:29","nodeType":"VariableDeclaration","scope":5445,"src":"5252:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5435,"name":"uint256","nodeType":"ElementaryTypeName","src":"5252:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5438,"mutability":"mutable","name":"y","nameLocation":"5271:1:29","nodeType":"VariableDeclaration","scope":5445,"src":"5263:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5437,"name":"uint256","nodeType":"ElementaryTypeName","src":"5263:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5251:22:29"},"returnParameters":{"id":5442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5441,"mutability":"mutable","name":"z","nameLocation":"5305:1:29","nodeType":"VariableDeclaration","scope":5445,"src":"5297:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5440,"name":"uint256","nodeType":"ElementaryTypeName","src":"5297:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5296:11:29"},"scope":5446,"src":"5223:155:29","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5447,"src":"354:5026:29","usedErrors":[],"usedEvents":[]}],"src":"32:5349:29"},"id":29},"contracts/libraries/SafeTransfer.sol":{"ast":{"absolutePath":"contracts/libraries/SafeTransfer.sol","exportedSymbols":{"IAlgebraPoolErrors":[4640],"SafeTransfer":[5474]},"id":5475,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5448,"literals":["solidity",">=","0.8",".4","<","0.9",".0"],"nodeType":"PragmaDirective","src":"32:31:30"},{"absolutePath":"contracts/interfaces/pool/IAlgebraPoolErrors.sol","file":"../interfaces/pool/IAlgebraPoolErrors.sol","id":5449,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5475,"sourceUnit":4641,"src":"65:51:30","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeTransfer","contractDependencies":[],"contractKind":"library","documentation":{"id":5450,"nodeType":"StructuredDocumentation","src":"118:403:30","text":"@title SafeTransfer\n @notice Safe ERC20 transfer library that gracefully handles missing return values.\n @dev Credit to Solmate under MIT license: https://github.com/transmissions11/solmate/blob/ed67feda67b24fdeff8ad1032360f0ee6047ba0a/src/utils/SafeTransferLib.sol\n @dev Please note that this library does not check if the token has a code! That responsibility is delegated to the caller."},"fullyImplemented":true,"id":5474,"linearizedBaseContracts":[5474],"name":"SafeTransfer","nameLocation":"529:12:30","nodeType":"ContractDefinition","nodes":[{"body":{"id":5472,"nodeType":"Block","src":"939:893:30","statements":[{"assignments":[5461],"declarations":[{"constant":false,"id":5461,"mutability":"mutable","name":"success","nameLocation":"950:7:30","nodeType":"VariableDeclaration","scope":5472,"src":"945:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5460,"name":"bool","nodeType":"ElementaryTypeName","src":"945:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5462,"nodeType":"VariableDeclarationStatement","src":"945:12:30"},{"AST":{"nodeType":"YulBlock","src":"972:793:30","statements":[{"nodeType":"YulVariableDeclaration","src":"980:36:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1011:4:30","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1005:5:30"},"nodeType":"YulFunctionCall","src":"1005:11:30"},"variables":[{"name":"freeMemoryPointer","nodeType":"YulTypedName","src":"984:17:30","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1067:4:30","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1073:66:30","type":"","value":"0xa9059cbb00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1060:6:30"},"nodeType":"YulFunctionCall","src":"1060:80:30"},"nodeType":"YulExpressionStatement","src":"1060:80:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1194:4:30","type":"","value":"0x04"},{"arguments":[{"name":"to","nodeType":"YulIdentifier","src":"1204:2:30"},{"kind":"number","nodeType":"YulLiteral","src":"1208:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1200:3:30"},"nodeType":"YulFunctionCall","src":"1200:51:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1187:6:30"},"nodeType":"YulFunctionCall","src":"1187:65:30"},"nodeType":"YulExpressionStatement","src":"1187:65:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1297:4:30","type":"","value":"0x24"},{"name":"amount","nodeType":"YulIdentifier","src":"1303:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1290:6:30"},"nodeType":"YulFunctionCall","src":"1290:20:30"},"nodeType":"YulExpressionStatement","src":"1290:20:30"},{"nodeType":"YulAssignment","src":"1388:50:30","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"1404:3:30"},"nodeType":"YulFunctionCall","src":"1404:5:30"},{"name":"token","nodeType":"YulIdentifier","src":"1411:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"1418:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1421:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1424:4:30","type":"","value":"0x44"},{"kind":"number","nodeType":"YulLiteral","src":"1430:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1433:4:30","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"1399:4:30"},"nodeType":"YulFunctionCall","src":"1399:39:30"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"1388:7:30"}]},{"nodeType":"YulAssignment","src":"1445:243:30","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1603:1:30","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1597:5:30"},"nodeType":"YulFunctionCall","src":"1597:8:30"},{"kind":"number","nodeType":"YulLiteral","src":"1607:1:30","type":"","value":"1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1594:2:30"},"nodeType":"YulFunctionCall","src":"1594:15:30"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1614:14:30"},"nodeType":"YulFunctionCall","src":"1614:16:30"},{"kind":"number","nodeType":"YulLiteral","src":"1632:2:30","type":"","value":"32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1611:2:30"},"nodeType":"YulFunctionCall","src":"1611:24:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1590:3:30"},"nodeType":"YulFunctionCall","src":"1590:46:30"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1645:14:30"},"nodeType":"YulFunctionCall","src":"1645:16:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1638:6:30"},"nodeType":"YulFunctionCall","src":"1638:24:30"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1587:2:30"},"nodeType":"YulFunctionCall","src":"1587:76:30"},{"name":"success","nodeType":"YulIdentifier","src":"1673:7:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1456:3:30"},"nodeType":"YulFunctionCall","src":"1456:232:30"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"1445:7:30"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1702:4:30","type":"","value":"0x40"},{"name":"freeMemoryPointer","nodeType":"YulIdentifier","src":"1708:17:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1695:6:30"},"nodeType":"YulFunctionCall","src":"1695:31:30"},"nodeType":"YulExpressionStatement","src":"1695:31:30"}]},"evmVersion":"paris","externalReferences":[{"declaration":5457,"isOffset":false,"isSlot":false,"src":"1303:6:30","valueSize":1},{"declaration":5461,"isOffset":false,"isSlot":false,"src":"1388:7:30","valueSize":1},{"declaration":5461,"isOffset":false,"isSlot":false,"src":"1445:7:30","valueSize":1},{"declaration":5461,"isOffset":false,"isSlot":false,"src":"1673:7:30","valueSize":1},{"declaration":5455,"isOffset":false,"isSlot":false,"src":"1204:2:30","valueSize":1},{"declaration":5453,"isOffset":false,"isSlot":false,"src":"1411:5:30","valueSize":1}],"id":5463,"nodeType":"InlineAssembly","src":"963:802:30"},{"condition":{"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1775:8:30","subExpression":{"id":5464,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"1776:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5471,"nodeType":"IfStatement","src":"1771:56:30","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5466,"name":"IAlgebraPoolErrors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"1792:18:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAlgebraPoolErrors_$4640_$","typeString":"type(contract IAlgebraPoolErrors)"}},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1811:14:30","memberName":"transferFailed","nodeType":"MemberAccess","referencedDeclaration":4633,"src":"1792:33:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1792:35:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5470,"nodeType":"RevertStatement","src":"1785:42:30"}}]},"documentation":{"id":5451,"nodeType":"StructuredDocumentation","src":"546:316:30","text":"@notice Transfers tokens to a recipient\n @dev Calls transfer on token contract, errors with transferFailed() if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param amount The amount of the token to transfer"},"id":5473,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"874:12:30","nodeType":"FunctionDefinition","parameters":{"id":5458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5453,"mutability":"mutable","name":"token","nameLocation":"895:5:30","nodeType":"VariableDeclaration","scope":5473,"src":"887:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5452,"name":"address","nodeType":"ElementaryTypeName","src":"887:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5455,"mutability":"mutable","name":"to","nameLocation":"910:2:30","nodeType":"VariableDeclaration","scope":5473,"src":"902:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5454,"name":"address","nodeType":"ElementaryTypeName","src":"902:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5457,"mutability":"mutable","name":"amount","nameLocation":"922:6:30","nodeType":"VariableDeclaration","scope":5473,"src":"914:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5456,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"886:43:30"},"returnParameters":{"id":5459,"nodeType":"ParameterList","parameters":[],"src":"939:0:30"},"scope":5474,"src":"865:967:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":5475,"src":"521:1313:30","usedErrors":[],"usedEvents":[]}],"src":"32:1803:30"},"id":30}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"AccessControlEnumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"IAccessControlEnumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable2Step.sol":{"Ownable2Step":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).\",\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable2Step.sol\":\"Ownable2Step\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xde231558366826d7cb61725af8147965a61c53b77a352cc8c9af38fc5a92ac3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd55624076bf61d44af5ff351919e32dda748567acfbdd6ba3d6c7be61c758e\",\"dweb:/ipfs/QmSki4dTrf4GPm7MTpG3fk8mC7rnjwd2zMomLp6jLuF63Q\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x2D PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"220:2559:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;220:2559:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000814000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"220:2559:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x2D PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"202:12582:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12582:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000814000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"202:12582:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x2D PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"215:1047:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1047:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000814000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"215:1047:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x2D PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"1329:11630:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1329:11630:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000814000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"1329:11630:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"contracts/AlgebraCommunityVault.sol":{"AlgebraCommunityVault":{"abi":[{"inputs":[{"internalType":"address","name":"_factory","type":"address"},{"internalType":"address","name":"_algebraFeeManager","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"transferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"newAlgebraFee","type":"uint16"}],"name":"AlgebraFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newAlgebraFeeManager","type":"address"}],"name":"AlgebraFeeManager","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"proposedNewAlgebraFee","type":"uint16"}],"name":"AlgebraFeeProposal","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newAlgebraFeeReceiver","type":"address"}],"name":"AlgebraFeeReceiver","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"AlgebraTokensWithdrawal","type":"event"},{"anonymous":false,"inputs":[],"name":"CancelAlgebraFeeProposal","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newCommunityFeeReceiver","type":"address"}],"name":"CommunityFeeReceiver","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"pendingAlgebraFeeManager","type":"address"}],"name":"PendingAlgebraFeeManager","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensWithdrawal","type":"event"},{"inputs":[],"name":"COMMUNITY_FEE_VAULT_ADMINISTRATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"COMMUNITY_FEE_WITHDRAWER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"newAlgebraFee","type":"uint16"}],"name":"acceptAlgebraFeeChangeProposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"acceptAlgebraFeeManagerRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"algebraFee","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"algebraFeeManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"algebraFeeReceiver","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cancelAlgebraFeeChangeProposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAlgebraFeeReceiver","type":"address"}],"name":"changeAlgebraFeeReceiver","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newCommunityFeeReceiver","type":"address"}],"name":"changeCommunityFeeReceiver","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"communityFeeReceiver","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"hasNewAlgebraFeeProposal","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"newAlgebraFee","type":"uint16"}],"name":"proposeAlgebraFeeChange","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposedNewAlgebraFee","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_newAlgebraFeeManager","type":"address"}],"name":"transferAlgebraFeeManagerRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IAlgebraCommunityVault.WithdrawTokensParams[]","name":"params","type":"tuple[]"}],"name":"withdrawTokens","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2781":{"entryPoint":null,"id":2781,"parameterSlots":2,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":86,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":114,"id":null,"parameterSlots":2,"returnSlots":2}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:491:31","statements":[{"nodeType":"YulBlock","src":"6:3:31","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:31","statements":[{"nodeType":"YulAssignment","src":"84:22:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:31"},"nodeType":"YulFunctionCall","src":"93:13:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:31"}]},{"body":{"nodeType":"YulBlock","src":"169:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:31"},"nodeType":"YulFunctionCall","src":"171:12:31"},"nodeType":"YulExpressionStatement","src":"171:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:31"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:31","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:31","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:31"},"nodeType":"YulFunctionCall","src":"150:11:31"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:31","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:31"},"nodeType":"YulFunctionCall","src":"146:19:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:31"},"nodeType":"YulFunctionCall","src":"135:31:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:31"},"nodeType":"YulFunctionCall","src":"125:42:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:31"},"nodeType":"YulFunctionCall","src":"118:50:31"},"nodeType":"YulIf","src":"115:70:31"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:31","type":""}],"src":"14:177:31"},{"body":{"nodeType":"YulBlock","src":"294:195:31","statements":[{"body":{"nodeType":"YulBlock","src":"340:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"349:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"352:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"342:6:31"},"nodeType":"YulFunctionCall","src":"342:12:31"},"nodeType":"YulExpressionStatement","src":"342:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"315:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"324:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"311:3:31"},"nodeType":"YulFunctionCall","src":"311:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"336:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"307:3:31"},"nodeType":"YulFunctionCall","src":"307:32:31"},"nodeType":"YulIf","src":"304:52:31"},{"nodeType":"YulAssignment","src":"365:50:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"405:9:31"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"375:29:31"},"nodeType":"YulFunctionCall","src":"375:40:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"365:6:31"}]},{"nodeType":"YulAssignment","src":"424:59:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"468:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"479:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"464:3:31"},"nodeType":"YulFunctionCall","src":"464:18:31"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"434:29:31"},"nodeType":"YulFunctionCall","src":"434:49:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"424:6:31"}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"252:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"263:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"275:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"283:6:31","type":""}],"src":"196:293:31"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n}","id":31,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561001057600080fd5b50604051620017a2380380620017a283398101604081905261003191610072565b600280546001600160a01b0319166001600160a01b03928316179055166080526100a5565b80516001600160a01b038116811461006d57600080fd5b919050565b6000806040838503121561008557600080fd5b61008e83610056565b915061009c60208401610056565b90509250929050565b6080516116cc620000d66000396000818161065601528181610acd01528181610ca60152610e0701526116cc6000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c8063ad6129ac116100b2578063d17bc78311610081578063dfadc79411610066578063dfadc794146102fd578063f3fef3a314610310578063ff3c43e11461032357600080fd5b8063d17bc783146102e2578063d9fb4353146102ea57600080fd5b8063ad6129ac14610269578063b5f680ae14610271578063bbac3b8d14610284578063c53b3fbe146102ab57600080fd5b806350eea0c8116100ee57806350eea0c8146101d457806362744405146101e75780639d754dde146102235780639f856b8d1461024357600080fd5b80631de4161314610120578063371abc951461015a5780634738761c1461019f57806348a50fcf146101bf575b600080fd5b6101477fb77a63f119f4dc2174dc6c76fc1a1565fa4f2b0dde50ed5c0465471cd9b331f681565b6040519081526020015b60405180910390f35b60005461017a9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610151565b60015461017a9073ffffffffffffffffffffffffffffffffffffffff1681565b6101d26101cd366004611521565b610336565b005b6101d26101e2366004611521565b61047e565b6000546102109077010000000000000000000000000000000000000000000000900461ffff1681565b60405161ffff9091168152602001610151565b60025461017a9073ffffffffffffffffffffffffffffffffffffffff1681565b6000546102109074010000000000000000000000000000000000000000900461ffff1681565b6101d2610572565b6101d261027f366004611521565b610602565b6101477f63e58c34d94475ba3fc063e19800b940485850d84d09cd3c1f2c14192c559a6881565b6000546102d290760100000000000000000000000000000000000000000000900460ff1681565b6040519015158152602001610151565b6101d26107f7565b6101d26102f836600461153c565b6108c9565b6101d261030b366004611560565b610a58565b6101d261031e3660046115d5565b610c31565b6101d261033136600461153c565b610db3565b60025473ffffffffffffffffffffffffffffffffffffffff1633146103bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6f6e6c7920616c676562726120666565206d616e61676572000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81166103dc57600080fd5b60015473ffffffffffffffffffffffffffffffffffffffff9081169082160361040457600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f34d1b5ef1c1c2c03a5000b91bef5c465790244c6751c794e5b45bed7657c38fd906020015b60405180910390a150565b60025473ffffffffffffffffffffffffffffffffffffffff1633146104ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6f6e6c7920616c676562726120666565206d616e61676572000000000000000060448201526064016103b3565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527fab6918ba7303f2f81e46e324b5f34af4bda562577c1da710e2034980fee1e82a90602001610473565b60035473ffffffffffffffffffffffffffffffffffffffff16331461059657600080fd5b60028054337fffffffffffffffffffffffff000000000000000000000000000000000000000091821681179092556003805490911690556040519081527fecf97a11fb2f2bcc38d1b6881865ecc04405af2d8b953004c79b3ab398732d029060200160405180910390a1565b6040517fe8ae2b690000000000000000000000000000000000000000000000000000000081527f63e58c34d94475ba3fc063e19800b940485850d84d09cd3c1f2c14192c559a6860048201523360248201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063e8ae2b6990604401602060405180830381865afa1580156106b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d691906115ff565b61073c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6f6e6c792061646d696e6973747261746f72000000000000000000000000000060448201526064016103b3565b73ffffffffffffffffffffffffffffffffffffffff811661075c57600080fd5b60005473ffffffffffffffffffffffffffffffffffffffff9081169082160361078457600080fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f2f4db788b994a5908051d68a2340153f49870447185a244d2326861e60cc418690602001610473565b60025473ffffffffffffffffffffffffffffffffffffffff163314610878576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6f6e6c7920616c676562726120666565206d616e61676572000000000000000060448201526064016103b3565b600080547fffffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffff1681556040517f9f4bbade0736edbd2ec12c598bdac4573af13a3b57820ae4c7da5c61703eaaff9190a1565b60025473ffffffffffffffffffffffffffffffffffffffff16331461094a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6f6e6c7920616c676562726120666565206d616e61676572000000000000000060448201526064016103b3565b6103e861ffff8216111561095d57600080fd5b60005461ffff8281167701000000000000000000000000000000000000000000000090920416148015906109b2575060005461ffff828116740100000000000000000000000000000000000000009092041614155b6109bb57600080fd5b6000805461ffff831677010000000000000000000000000000000000000000000000027fffffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffff909116177601000000000000000000000000000000000000000000001790556040517f2d6ac59d6da98f80c7ea481d17c670ea310b000fff5cf1732d94d93652dd25b79061047390839061ffff91909116815260200190565b60025473ffffffffffffffffffffffffffffffffffffffff16331480610b4d57506040517fe8ae2b690000000000000000000000000000000000000000000000000000000081527fb77a63f119f4dc2174dc6c76fc1a1565fa4f2b0dde50ed5c0465471cd9b331f660048201523360248201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063e8ae2b6990604401602060405180830381865afa158015610b29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4d91906115ff565b610bb3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f6f6e6c792077697468647261776572000000000000000000000000000000000060448201526064016103b3565b8060008080610bc061109d565b92509250925060005b84811015610c2857610c20878783818110610be657610be6611621565b610bfc9260206040909202019081019150611521565b83898985818110610c0f57610c0f611621565b9050604002016020013587876111df565b600101610bc9565b50505050505050565b60025473ffffffffffffffffffffffffffffffffffffffff16331480610d2657506040517fe8ae2b690000000000000000000000000000000000000000000000000000000081527fb77a63f119f4dc2174dc6c76fc1a1565fa4f2b0dde50ed5c0465471cd9b331f660048201523360248201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063e8ae2b6990604401602060405180830381865afa158015610d02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2691906115ff565b610d8c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f6f6e6c792077697468647261776572000000000000000000000000000000000060448201526064016103b3565b6000806000610d9961109d565b925092509250610dac85828686866111df565b5050505050565b6040517fe8ae2b690000000000000000000000000000000000000000000000000000000081527f63e58c34d94475ba3fc063e19800b940485850d84d09cd3c1f2c14192c559a6860048201523360248201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063e8ae2b6990604401602060405180830381865afa158015610e63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8791906115ff565b610eed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6f6e6c792061646d696e6973747261746f72000000000000000000000000000060448201526064016103b3565b600054760100000000000000000000000000000000000000000000900460ff16610f73576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6e6f742070726f706f736564000000000000000000000000000000000000000060448201526064016103b3565b60005461ffff828116770100000000000000000000000000000000000000000000009092041614611000576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f696e76616c6964206e657720666565000000000000000000000000000000000060448201526064016103b3565b600080547fffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000061ffff84169081027fffffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffff16919091179091556040519081527fda1e1a9a6410acc0398b3b64e0c0110b8df57e29bfe69a419cdd9ae12718c30790602001610473565b60005460015461ffff740100000000000000000000000000000000000000008304169173ffffffffffffffffffffffffffffffffffffffff9182169116821561115d5773ffffffffffffffffffffffffffffffffffffffff821661115d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f696e76616c696420616c6765627261206665652072656365697665720000000060448201526064016103b3565b73ffffffffffffffffffffffffffffffffffffffff81166111da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f696e76616c69642072656365697665720000000000000000000000000000000060448201526064016103b3565b909192565b8261ffff83161561127f5760006111fd8261ffff86166103e86112f9565b90506112098183611650565b9150611216878483611398565b8273ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fb7ee7fc9dacb957cfa93faeb8ca1826292de295e18e287a347dddfde7ab48b408360405161127591815260200190565b60405180910390a3505b61128a868683611398565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f7a629b77ef27ad337abe438773206187960a90abfb43607826bef77d650e84b9836040516112e991815260200190565b60405180910390a3505050505050565b600083158061131a5750508282028284828161131757611317611690565b04145b1561133b576000821161132c57600080fd5b81810490829006151501611391565b611346848484611441565b90506000828061135857611358611690565b8486091115611391577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811061138d57600080fd5b6001015b9392505050565b60006040517fa9059cbb0000000000000000000000000000000000000000000000000000000060005273ffffffffffffffffffffffffffffffffffffffff841660045282602452602060006044600080895af19150813d1560203d14600160005114161716915080604052508061143b576040517fe465903e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b6000838302817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8587098281108382030391505080841161148157600080fd5b8060000361149457508290049050611391565b8385870960008581038616958690049560026003880281188089028203028089028203028089028203028089028203028089028203028089029091030291819003819004600101858411909403939093029190930391909104170290509392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461151c57600080fd5b919050565b60006020828403121561153357600080fd5b611391826114f8565b60006020828403121561154e57600080fd5b813561ffff8116811461139157600080fd5b6000806020838503121561157357600080fd5b823567ffffffffffffffff8082111561158b57600080fd5b818501915085601f83011261159f57600080fd5b8135818111156115ae57600080fd5b8660208260061b85010111156115c357600080fd5b60209290920196919550909350505050565b600080604083850312156115e857600080fd5b6115f1836114f8565b946020939093013593505050565b60006020828403121561161157600080fd5b8151801515811461139157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8181038181111561168a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea164736f6c6343000814000a","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17A2 CODESIZE SUB DUP1 PUSH3 0x17A2 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x31 SWAP2 PUSH2 0x72 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE AND PUSH1 0x80 MSTORE PUSH2 0xA5 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8E DUP4 PUSH2 0x56 JUMP JUMPDEST SWAP2 POP PUSH2 0x9C PUSH1 0x20 DUP5 ADD PUSH2 0x56 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x16CC PUSH3 0xD6 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x656 ADD MSTORE DUP2 DUP2 PUSH2 0xACD ADD MSTORE DUP2 DUP2 PUSH2 0xCA6 ADD MSTORE PUSH2 0xE07 ADD MSTORE PUSH2 0x16CC PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD6129AC GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0xD17BC783 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xDFADC794 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xDFADC794 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xFF3C43E1 EQ PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD17BC783 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xD9FB4353 EQ PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD6129AC EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xB5F680AE EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xBBAC3B8D EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xC53B3FBE EQ PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x50EEA0C8 GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x50EEA0C8 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x62744405 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x9D754DDE EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x9F856B8D EQ PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1DE41613 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x371ABC95 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x4738761C EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x48A50FCF EQ PUSH2 0x1BF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x147 PUSH32 0xB77A63F119F4DC2174DC6C76FC1A1565FA4F2B0DDE50ED5C0465471CD9B331F6 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x17A SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x17A SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x336 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D2 PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x210 SWAP1 PUSH24 0x10000000000000000000000000000000000000000000000 SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x17A SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x210 SWAP1 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x572 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST PUSH2 0x147 PUSH32 0x63E58C34D94475BA3FC063E19800B940485850D84D09CD3C1F2C14192C559A68 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x2D2 SWAP1 PUSH23 0x100000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x153C JUMP JUMPDEST PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x1560 JUMP JUMPDEST PUSH2 0xA58 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x15D5 JUMP JUMPDEST PUSH2 0xC31 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x153C JUMP JUMPDEST PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920616C676562726120666565206D616E616765720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP3 AND SUB PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x34D1B5EF1C1C2C03A5000B91BEF5C465790244C6751C794E5B45BED7657C38FD SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x4FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920616C676562726120666565206D616E616765720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xAB6918BA7303F2F81E46E324B5F34AF4BDA562577C1DA710E2034980FEE1E82A SWAP1 PUSH1 0x20 ADD PUSH2 0x473 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD CALLER PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xECF97A11FB2F2BCC38D1B6881865ECC04405AF2D8B953004C79B3AB398732D02 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE8AE2B6900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x63E58C34D94475BA3FC063E19800B940485850D84D09CD3C1F2C14192C559A68 PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xE8AE2B69 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792061646D696E6973747261746F720000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x75C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP3 AND SUB PUSH2 0x784 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x2F4DB788B994A5908051D68A2340153F49870447185A244D2326861E60CC4186 SWAP1 PUSH1 0x20 ADD PUSH2 0x473 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x878 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920616C676562726120666565206D616E616765720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x9F4BBADE0736EDBD2EC12C598BDAC4573AF13A3B57820AE4C7DA5C61703EAAFF SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x94A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920616C676562726120666565206D616E616765720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xFFFF DUP3 AND GT ISZERO PUSH2 0x95D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xFFFF DUP3 DUP2 AND PUSH24 0x10000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND EQ DUP1 ISZERO SWAP1 PUSH2 0x9B2 JUMPI POP PUSH1 0x0 SLOAD PUSH2 0xFFFF DUP3 DUP2 AND PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND EQ ISZERO JUMPDEST PUSH2 0x9BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF DUP4 AND PUSH24 0x10000000000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR PUSH23 0x100000000000000000000000000000000000000000000 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2D6AC59D6DA98F80C7EA481D17C670EA310B000FFF5CF1732D94D93652DD25B7 SWAP1 PUSH2 0x473 SWAP1 DUP4 SWAP1 PUSH2 0xFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0xB4D JUMPI POP PUSH1 0x40 MLOAD PUSH32 0xE8AE2B6900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xB77A63F119F4DC2174DC6C76FC1A1565FA4F2B0DDE50ED5C0465471CD9B331F6 PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xE8AE2B69 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB4D SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0xBB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920776974686472617765720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP1 PUSH2 0xBC0 PUSH2 0x109D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xC28 JUMPI PUSH2 0xC20 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0xBE6 JUMPI PUSH2 0xBE6 PUSH2 0x1621 JUMP JUMPDEST PUSH2 0xBFC SWAP3 PUSH1 0x20 PUSH1 0x40 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x1521 JUMP JUMPDEST DUP4 DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0xC0F JUMPI PUSH2 0xC0F PUSH2 0x1621 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD PUSH1 0x20 ADD CALLDATALOAD DUP8 DUP8 PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xBC9 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0xD26 JUMPI POP PUSH1 0x40 MLOAD PUSH32 0xE8AE2B6900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xB77A63F119F4DC2174DC6C76FC1A1565FA4F2B0DDE50ED5C0465471CD9B331F6 PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xE8AE2B69 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD26 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0xD8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920776974686472617765720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xD99 PUSH2 0x109D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xDAC DUP6 DUP3 DUP7 DUP7 DUP7 PUSH2 0x11DF JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE8AE2B6900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x63E58C34D94475BA3FC063E19800B940485850D84D09CD3C1F2C14192C559A68 PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xE8AE2B69 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE63 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE87 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0xEED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792061646D696E6973747261746F720000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH23 0x100000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F742070726F706F7365640000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xFFFF DUP3 DUP2 AND PUSH24 0x10000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND EQ PUSH2 0x1000 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964206E6577206665650000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFF0000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0x10000000000000000000000000000000000000000 PUSH2 0xFFFF DUP5 AND SWAP1 DUP2 MUL PUSH32 0xFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDA1E1A9A6410ACC0398B3B64E0C0110B8DF57E29BFE69A419CDD9AE12718C307 SWAP1 PUSH1 0x20 ADD PUSH2 0x473 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH2 0xFFFF PUSH21 0x10000000000000000000000000000000000000000 DUP4 DIV AND SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND SWAP2 AND DUP3 ISZERO PUSH2 0x115D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x115D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420616C67656272612066656520726563656976657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x11DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420726563656976657200000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 JUMP JUMPDEST DUP3 PUSH2 0xFFFF DUP4 AND ISZERO PUSH2 0x127F JUMPI PUSH1 0x0 PUSH2 0x11FD DUP3 PUSH2 0xFFFF DUP7 AND PUSH2 0x3E8 PUSH2 0x12F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1209 DUP2 DUP4 PUSH2 0x1650 JUMP JUMPDEST SWAP2 POP PUSH2 0x1216 DUP8 DUP5 DUP4 PUSH2 0x1398 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB7EE7FC9DACB957CFA93FAEB8CA1826292DE295E18E287A347DDDFDE7AB48B40 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1275 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0x128A DUP7 DUP7 DUP4 PUSH2 0x1398 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7A629B77EF27AD337ABE438773206187960A90ABFB43607826BEF77D650E84B9 DUP4 PUSH1 0x40 MLOAD PUSH2 0x12E9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO DUP1 PUSH2 0x131A JUMPI POP POP DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1317 JUMPI PUSH2 0x1317 PUSH2 0x1690 JUMP JUMPDEST DIV EQ JUMPDEST ISZERO PUSH2 0x133B JUMPI PUSH1 0x0 DUP3 GT PUSH2 0x132C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 DIV SWAP1 DUP3 SWAP1 MOD ISZERO ISZERO ADD PUSH2 0x1391 JUMP JUMPDEST PUSH2 0x1346 DUP5 DUP5 DUP5 PUSH2 0x1441 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP1 PUSH2 0x1358 JUMPI PUSH2 0x1358 PUSH2 0x1690 JUMP JUMPDEST DUP5 DUP7 MULMOD GT ISZERO PUSH2 0x1391 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT PUSH2 0x138D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ADD JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x4 MSTORE DUP3 PUSH1 0x24 MSTORE PUSH1 0x20 PUSH1 0x0 PUSH1 0x44 PUSH1 0x0 DUP1 DUP10 GAS CALL SWAP2 POP DUP2 RETURNDATASIZE ISZERO PUSH1 0x20 RETURNDATASIZE EQ PUSH1 0x1 PUSH1 0x0 MLOAD EQ AND OR AND SWAP2 POP DUP1 PUSH1 0x40 MSTORE POP DUP1 PUSH2 0x143B JUMPI PUSH1 0x40 MLOAD PUSH32 0xE465903E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 MUL DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP8 MULMOD DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP DUP1 DUP5 GT PUSH2 0x1481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x1494 JUMPI POP DUP3 SWAP1 DIV SWAP1 POP PUSH2 0x1391 JUMP JUMPDEST DUP4 DUP6 DUP8 MULMOD PUSH1 0x0 DUP6 DUP2 SUB DUP7 AND SWAP6 DUP7 SWAP1 DIV SWAP6 PUSH1 0x2 PUSH1 0x3 DUP9 MUL DUP2 XOR DUP1 DUP10 MUL DUP3 SUB MUL DUP1 DUP10 MUL DUP3 SUB MUL DUP1 DUP10 MUL DUP3 SUB MUL DUP1 DUP10 MUL DUP3 SUB MUL DUP1 DUP10 MUL DUP3 SUB MUL DUP1 DUP10 MUL SWAP1 SWAP2 SUB MUL SWAP2 DUP2 SWAP1 SUB DUP2 SWAP1 DIV PUSH1 0x1 ADD DUP6 DUP5 GT SWAP1 SWAP5 SUB SWAP4 SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP4 SUB SWAP2 SWAP1 SWAP2 DIV OR MUL SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x151C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1391 DUP3 PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x154E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x158B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x159F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x15AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x6 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x15C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15F1 DUP4 PUSH2 0x14F8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x168A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"432:6230:14:-:0;;;2063:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2137:17;2127:61;;-1:-1:-1;;;;;;2127:61:14;-1:-1:-1;;;;;2127:61:14;;;;;;;;;432:6230;;14:177:31;93:13;;-1:-1:-1;;;;;135:31:31;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;432:6230:14;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@COMMUNITY_FEE_VAULT_ADMINISTRATOR_2691":{"entryPoint":null,"id":2691,"parameterSlots":0,"returnSlots":0},"@COMMUNITY_FEE_WITHDRAWER_ROLE_2685":{"entryPoint":null,"id":2685,"parameterSlots":0,"returnSlots":0},"@_readAndVerifyWithdrawSettings_2905":{"entryPoint":4253,"id":2905,"parameterSlots":0,"returnSlots":3},"@_withdraw_2969":{"entryPoint":4575,"id":2969,"parameterSlots":5,"returnSlots":0},"@acceptAlgebraFeeChangeProposal_3007":{"entryPoint":3507,"id":3007,"parameterSlots":1,"returnSlots":0},"@acceptAlgebraFeeManagerRole_3088":{"entryPoint":1394,"id":3088,"parameterSlots":0,"returnSlots":0},"@algebraFeeManager_2711":{"entryPoint":null,"id":2711,"parameterSlots":0,"returnSlots":0},"@algebraFeeReceiver_2708":{"entryPoint":null,"id":2708,"parameterSlots":0,"returnSlots":0},"@algebraFee_2699":{"entryPoint":null,"id":2699,"parameterSlots":0,"returnSlots":0},"@cancelAlgebraFeeChangeProposal_3145":{"entryPoint":2039,"id":3145,"parameterSlots":0,"returnSlots":0},"@changeAlgebraFeeReceiver_3178":{"entryPoint":822,"id":3178,"parameterSlots":1,"returnSlots":0},"@changeCommunityFeeReceiver_3040":{"entryPoint":1538,"id":3040,"parameterSlots":1,"returnSlots":0},"@communityFeeReceiver_2696":{"entryPoint":null,"id":2696,"parameterSlots":0,"returnSlots":0},"@hasNewAlgebraFeeProposal_2702":{"entryPoint":null,"id":2702,"parameterSlots":0,"returnSlots":0},"@mulDivRoundingUp_5433":{"entryPoint":4857,"id":5433,"parameterSlots":3,"returnSlots":1},"@mulDiv_5364":{"entryPoint":5185,"id":5364,"parameterSlots":3,"returnSlots":1},"@proposeAlgebraFeeChange_3126":{"entryPoint":2249,"id":3126,"parameterSlots":1,"returnSlots":0},"@proposedNewAlgebraFee_2705":{"entryPoint":null,"id":2705,"parameterSlots":0,"returnSlots":0},"@safeTransfer_5473":{"entryPoint":5016,"id":5473,"parameterSlots":3,"returnSlots":0},"@transferAlgebraFeeManagerRole_3058":{"entryPoint":1150,"id":3058,"parameterSlots":1,"returnSlots":0},"@withdrawTokens_2861":{"entryPoint":2648,"id":2861,"parameterSlots":2,"returnSlots":0},"@withdraw_2810":{"entryPoint":3121,"id":2810,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":5368,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5409,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5589,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_struct$_WithdrawTokensParams_$5109_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":5472,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":5631,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint16":{"entryPoint":5436,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0eb53f4394227d9efae20f213ac7ba91324843ea74bf7589e808a58399106618__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2d701cb44082b54d76f2079d2ed56fb8bebc3ba7c1aed6b94050f9763933ebd0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4cbf714950e058d3c5d10f8b84cbda7a3a55642b84d4a7fabaabf151ae72ed4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_61f4bfef26a944a0b3efb8b18eef7c8c5bd11fc7694112fa9edb2c79b76af2f9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_99dd25207a22d65edeb29e8e142bda291165d5040e7618d5fc4986296b11b47d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a2468adb69dd1331d1c2924d5aa5b8659fa02c298a865a94acf70db5fb253ec8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ff0b2a4910e8f81a07d80bdb9346c2fc1c6ad6e36f5ccd7dca7b94096772771c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5712,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x12":{"entryPoint":5776,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5665,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6259:31","statements":[{"nodeType":"YulBlock","src":"6:3:31","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:76:31","statements":[{"nodeType":"YulAssignment","src":"125:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:31"},"nodeType":"YulFunctionCall","src":"133:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:31"},{"name":"value0","nodeType":"YulIdentifier","src":"178:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:31"},"nodeType":"YulFunctionCall","src":"160:25:31"},"nodeType":"YulExpressionStatement","src":"160:25:31"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:31","type":""}],"src":"14:177:31"},{"body":{"nodeType":"YulBlock","src":"297:125:31","statements":[{"nodeType":"YulAssignment","src":"307:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"319:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"330:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"315:3:31"},"nodeType":"YulFunctionCall","src":"315:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"307:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"349:9:31"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"364:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"372:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"360:3:31"},"nodeType":"YulFunctionCall","src":"360:55:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"342:6:31"},"nodeType":"YulFunctionCall","src":"342:74:31"},"nodeType":"YulExpressionStatement","src":"342:74:31"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"266:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"277:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"288:4:31","type":""}],"src":"196:226:31"},{"body":{"nodeType":"YulBlock","src":"476:147:31","statements":[{"nodeType":"YulAssignment","src":"486:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"508:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"495:12:31"},"nodeType":"YulFunctionCall","src":"495:20:31"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"486:5:31"}]},{"body":{"nodeType":"YulBlock","src":"601:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"610:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"613:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"603:6:31"},"nodeType":"YulFunctionCall","src":"603:12:31"},"nodeType":"YulExpressionStatement","src":"603:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"537:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"548:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"555:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"544:3:31"},"nodeType":"YulFunctionCall","src":"544:54:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"534:2:31"},"nodeType":"YulFunctionCall","src":"534:65:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"527:6:31"},"nodeType":"YulFunctionCall","src":"527:73:31"},"nodeType":"YulIf","src":"524:93:31"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"455:6:31","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"466:5:31","type":""}],"src":"427:196:31"},{"body":{"nodeType":"YulBlock","src":"698:116:31","statements":[{"body":{"nodeType":"YulBlock","src":"744:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"753:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"756:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"746:6:31"},"nodeType":"YulFunctionCall","src":"746:12:31"},"nodeType":"YulExpressionStatement","src":"746:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"719:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"728:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"715:3:31"},"nodeType":"YulFunctionCall","src":"715:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"740:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"711:3:31"},"nodeType":"YulFunctionCall","src":"711:32:31"},"nodeType":"YulIf","src":"708:52:31"},{"nodeType":"YulAssignment","src":"769:39:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"798:9:31"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"779:18:31"},"nodeType":"YulFunctionCall","src":"779:29:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"769:6:31"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"664:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"675:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"687:6:31","type":""}],"src":"628:186:31"},{"body":{"nodeType":"YulBlock","src":"918:89:31","statements":[{"nodeType":"YulAssignment","src":"928:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"940:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"951:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"936:3:31"},"nodeType":"YulFunctionCall","src":"936:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"928:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"970:9:31"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"985:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"993:6:31","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"981:3:31"},"nodeType":"YulFunctionCall","src":"981:19:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"963:6:31"},"nodeType":"YulFunctionCall","src":"963:38:31"},"nodeType":"YulExpressionStatement","src":"963:38:31"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"887:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"898:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"909:4:31","type":""}],"src":"819:188:31"},{"body":{"nodeType":"YulBlock","src":"1107:92:31","statements":[{"nodeType":"YulAssignment","src":"1117:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1129:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1140:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1125:3:31"},"nodeType":"YulFunctionCall","src":"1125:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1117:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1159:9:31"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1184:6:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1177:6:31"},"nodeType":"YulFunctionCall","src":"1177:14:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1170:6:31"},"nodeType":"YulFunctionCall","src":"1170:22:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1152:6:31"},"nodeType":"YulFunctionCall","src":"1152:41:31"},"nodeType":"YulExpressionStatement","src":"1152:41:31"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1076:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1087:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1098:4:31","type":""}],"src":"1012:187:31"},{"body":{"nodeType":"YulBlock","src":"1273:203:31","statements":[{"body":{"nodeType":"YulBlock","src":"1319:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1328:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1331:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1321:6:31"},"nodeType":"YulFunctionCall","src":"1321:12:31"},"nodeType":"YulExpressionStatement","src":"1321:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1294:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"1303:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1290:3:31"},"nodeType":"YulFunctionCall","src":"1290:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"1315:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1286:3:31"},"nodeType":"YulFunctionCall","src":"1286:32:31"},"nodeType":"YulIf","src":"1283:52:31"},{"nodeType":"YulVariableDeclaration","src":"1344:36:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1370:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1357:12:31"},"nodeType":"YulFunctionCall","src":"1357:23:31"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1348:5:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"1430:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1439:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1442:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1432:6:31"},"nodeType":"YulFunctionCall","src":"1432:12:31"},"nodeType":"YulExpressionStatement","src":"1432:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1402:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1413:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"1420:6:31","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1409:3:31"},"nodeType":"YulFunctionCall","src":"1409:18:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1399:2:31"},"nodeType":"YulFunctionCall","src":"1399:29:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1392:6:31"},"nodeType":"YulFunctionCall","src":"1392:37:31"},"nodeType":"YulIf","src":"1389:57:31"},{"nodeType":"YulAssignment","src":"1455:15:31","value":{"name":"value","nodeType":"YulIdentifier","src":"1465:5:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1455:6:31"}]}]},"name":"abi_decode_tuple_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1239:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1250:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1262:6:31","type":""}],"src":"1204:272:31"},{"body":{"nodeType":"YulBlock","src":"1626:510:31","statements":[{"body":{"nodeType":"YulBlock","src":"1672:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1681:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1684:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1674:6:31"},"nodeType":"YulFunctionCall","src":"1674:12:31"},"nodeType":"YulExpressionStatement","src":"1674:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1647:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"1656:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1643:3:31"},"nodeType":"YulFunctionCall","src":"1643:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"1668:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1639:3:31"},"nodeType":"YulFunctionCall","src":"1639:32:31"},"nodeType":"YulIf","src":"1636:52:31"},{"nodeType":"YulVariableDeclaration","src":"1697:37:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1724:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1711:12:31"},"nodeType":"YulFunctionCall","src":"1711:23:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1701:6:31","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1743:28:31","value":{"kind":"number","nodeType":"YulLiteral","src":"1753:18:31","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1747:2:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"1798:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1807:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1810:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1800:6:31"},"nodeType":"YulFunctionCall","src":"1800:12:31"},"nodeType":"YulExpressionStatement","src":"1800:12:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1786:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"1794:2:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1783:2:31"},"nodeType":"YulFunctionCall","src":"1783:14:31"},"nodeType":"YulIf","src":"1780:34:31"},{"nodeType":"YulVariableDeclaration","src":"1823:32:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1837:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"1848:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1833:3:31"},"nodeType":"YulFunctionCall","src":"1833:22:31"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1827:2:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"1903:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1915:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1905:6:31"},"nodeType":"YulFunctionCall","src":"1905:12:31"},"nodeType":"YulExpressionStatement","src":"1905:12:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1882:2:31"},{"kind":"number","nodeType":"YulLiteral","src":"1886:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1878:3:31"},"nodeType":"YulFunctionCall","src":"1878:13:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1893:7:31"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1874:3:31"},"nodeType":"YulFunctionCall","src":"1874:27:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1867:6:31"},"nodeType":"YulFunctionCall","src":"1867:35:31"},"nodeType":"YulIf","src":"1864:55:31"},{"nodeType":"YulVariableDeclaration","src":"1928:30:31","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1955:2:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1942:12:31"},"nodeType":"YulFunctionCall","src":"1942:16:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1932:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"1985:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1994:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1997:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1987:6:31"},"nodeType":"YulFunctionCall","src":"1987:12:31"},"nodeType":"YulExpressionStatement","src":"1987:12:31"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1973:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"1981:2:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1970:2:31"},"nodeType":"YulFunctionCall","src":"1970:14:31"},"nodeType":"YulIf","src":"1967:34:31"},{"body":{"nodeType":"YulBlock","src":"2059:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2068:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2071:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2061:6:31"},"nodeType":"YulFunctionCall","src":"2061:12:31"},"nodeType":"YulExpressionStatement","src":"2061:12:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2024:2:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2032:1:31","type":"","value":"6"},{"name":"length","nodeType":"YulIdentifier","src":"2035:6:31"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2028:3:31"},"nodeType":"YulFunctionCall","src":"2028:14:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2020:3:31"},"nodeType":"YulFunctionCall","src":"2020:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"2045:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2016:3:31"},"nodeType":"YulFunctionCall","src":"2016:32:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2050:7:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2013:2:31"},"nodeType":"YulFunctionCall","src":"2013:45:31"},"nodeType":"YulIf","src":"2010:65:31"},{"nodeType":"YulAssignment","src":"2084:21:31","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2098:2:31"},{"kind":"number","nodeType":"YulLiteral","src":"2102:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2094:3:31"},"nodeType":"YulFunctionCall","src":"2094:11:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2084:6:31"}]},{"nodeType":"YulAssignment","src":"2114:16:31","value":{"name":"length","nodeType":"YulIdentifier","src":"2124:6:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2114:6:31"}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_WithdrawTokensParams_$5109_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1584:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1595:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1607:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1615:6:31","type":""}],"src":"1481:655:31"},{"body":{"nodeType":"YulBlock","src":"2228:167:31","statements":[{"body":{"nodeType":"YulBlock","src":"2274:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2283:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2286:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2276:6:31"},"nodeType":"YulFunctionCall","src":"2276:12:31"},"nodeType":"YulExpressionStatement","src":"2276:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2249:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"2258:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2245:3:31"},"nodeType":"YulFunctionCall","src":"2245:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"2270:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2241:3:31"},"nodeType":"YulFunctionCall","src":"2241:32:31"},"nodeType":"YulIf","src":"2238:52:31"},{"nodeType":"YulAssignment","src":"2299:39:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2328:9:31"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2309:18:31"},"nodeType":"YulFunctionCall","src":"2309:29:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2299:6:31"}]},{"nodeType":"YulAssignment","src":"2347:42:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2374:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2385:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2370:3:31"},"nodeType":"YulFunctionCall","src":"2370:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2357:12:31"},"nodeType":"YulFunctionCall","src":"2357:32:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2347:6:31"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2186:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2197:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2209:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2217:6:31","type":""}],"src":"2141:254:31"},{"body":{"nodeType":"YulBlock","src":"2574:174:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2591:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2602:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2584:6:31"},"nodeType":"YulFunctionCall","src":"2584:21:31"},"nodeType":"YulExpressionStatement","src":"2584:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2625:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2636:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2621:3:31"},"nodeType":"YulFunctionCall","src":"2621:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"2641:2:31","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2614:6:31"},"nodeType":"YulFunctionCall","src":"2614:30:31"},"nodeType":"YulExpressionStatement","src":"2614:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2664:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2675:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2660:3:31"},"nodeType":"YulFunctionCall","src":"2660:18:31"},{"hexValue":"6f6e6c7920616c676562726120666565206d616e61676572","kind":"string","nodeType":"YulLiteral","src":"2680:26:31","type":"","value":"only algebra fee manager"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2653:6:31"},"nodeType":"YulFunctionCall","src":"2653:54:31"},"nodeType":"YulExpressionStatement","src":"2653:54:31"},{"nodeType":"YulAssignment","src":"2716:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2728:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2739:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2724:3:31"},"nodeType":"YulFunctionCall","src":"2724:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2716:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_ff0b2a4910e8f81a07d80bdb9346c2fc1c6ad6e36f5ccd7dca7b94096772771c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2551:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2565:4:31","type":""}],"src":"2400:348:31"},{"body":{"nodeType":"YulBlock","src":"2882:168:31","statements":[{"nodeType":"YulAssignment","src":"2892:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2904:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2915:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2900:3:31"},"nodeType":"YulFunctionCall","src":"2900:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2892:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2934:9:31"},{"name":"value0","nodeType":"YulIdentifier","src":"2945:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2927:6:31"},"nodeType":"YulFunctionCall","src":"2927:25:31"},"nodeType":"YulExpressionStatement","src":"2927:25:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2972:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2983:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2968:3:31"},"nodeType":"YulFunctionCall","src":"2968:18:31"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2992:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"3000:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2988:3:31"},"nodeType":"YulFunctionCall","src":"2988:55:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2961:6:31"},"nodeType":"YulFunctionCall","src":"2961:83:31"},"nodeType":"YulExpressionStatement","src":"2961:83:31"}]},"name":"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2843:9:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2854:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2862:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2873:4:31","type":""}],"src":"2753:297:31"},{"body":{"nodeType":"YulBlock","src":"3133:199:31","statements":[{"body":{"nodeType":"YulBlock","src":"3179:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3188:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3191:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3181:6:31"},"nodeType":"YulFunctionCall","src":"3181:12:31"},"nodeType":"YulExpressionStatement","src":"3181:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3154:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"3163:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3150:3:31"},"nodeType":"YulFunctionCall","src":"3150:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"3175:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3146:3:31"},"nodeType":"YulFunctionCall","src":"3146:32:31"},"nodeType":"YulIf","src":"3143:52:31"},{"nodeType":"YulVariableDeclaration","src":"3204:29:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3223:9:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3217:5:31"},"nodeType":"YulFunctionCall","src":"3217:16:31"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3208:5:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"3286:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3295:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3298:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3288:6:31"},"nodeType":"YulFunctionCall","src":"3288:12:31"},"nodeType":"YulExpressionStatement","src":"3288:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3255:5:31"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3276:5:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3269:6:31"},"nodeType":"YulFunctionCall","src":"3269:13:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3262:6:31"},"nodeType":"YulFunctionCall","src":"3262:21:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3252:2:31"},"nodeType":"YulFunctionCall","src":"3252:32:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3245:6:31"},"nodeType":"YulFunctionCall","src":"3245:40:31"},"nodeType":"YulIf","src":"3242:60:31"},{"nodeType":"YulAssignment","src":"3311:15:31","value":{"name":"value","nodeType":"YulIdentifier","src":"3321:5:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3311:6:31"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3099:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3110:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3122:6:31","type":""}],"src":"3055:277:31"},{"body":{"nodeType":"YulBlock","src":"3511:168:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3528:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3539:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:31"},"nodeType":"YulFunctionCall","src":"3521:21:31"},"nodeType":"YulExpressionStatement","src":"3521:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3562:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3573:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3558:3:31"},"nodeType":"YulFunctionCall","src":"3558:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"3578:2:31","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3551:6:31"},"nodeType":"YulFunctionCall","src":"3551:30:31"},"nodeType":"YulExpressionStatement","src":"3551:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3601:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3612:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3597:3:31"},"nodeType":"YulFunctionCall","src":"3597:18:31"},{"hexValue":"6f6e6c792061646d696e6973747261746f72","kind":"string","nodeType":"YulLiteral","src":"3617:20:31","type":"","value":"only administrator"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3590:6:31"},"nodeType":"YulFunctionCall","src":"3590:48:31"},"nodeType":"YulExpressionStatement","src":"3590:48:31"},{"nodeType":"YulAssignment","src":"3647:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3659:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3670:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3655:3:31"},"nodeType":"YulFunctionCall","src":"3655:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3647:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_99dd25207a22d65edeb29e8e142bda291165d5040e7618d5fc4986296b11b47d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3488:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3502:4:31","type":""}],"src":"3337:342:31"},{"body":{"nodeType":"YulBlock","src":"3858:165:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3875:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3886:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3868:6:31"},"nodeType":"YulFunctionCall","src":"3868:21:31"},"nodeType":"YulExpressionStatement","src":"3868:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3909:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3920:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3905:3:31"},"nodeType":"YulFunctionCall","src":"3905:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"3925:2:31","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3898:6:31"},"nodeType":"YulFunctionCall","src":"3898:30:31"},"nodeType":"YulExpressionStatement","src":"3898:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3948:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3959:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3944:3:31"},"nodeType":"YulFunctionCall","src":"3944:18:31"},{"hexValue":"6f6e6c792077697468647261776572","kind":"string","nodeType":"YulLiteral","src":"3964:17:31","type":"","value":"only withdrawer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3937:6:31"},"nodeType":"YulFunctionCall","src":"3937:45:31"},"nodeType":"YulExpressionStatement","src":"3937:45:31"},{"nodeType":"YulAssignment","src":"3991:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4003:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4014:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3999:3:31"},"nodeType":"YulFunctionCall","src":"3999:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3991:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_4cbf714950e058d3c5d10f8b84cbda7a3a55642b84d4a7fabaabf151ae72ed4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3835:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3849:4:31","type":""}],"src":"3684:339:31"},{"body":{"nodeType":"YulBlock","src":"4060:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4077:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4080:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4070:6:31"},"nodeType":"YulFunctionCall","src":"4070:88:31"},"nodeType":"YulExpressionStatement","src":"4070:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4174:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4177:4:31","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4167:6:31"},"nodeType":"YulFunctionCall","src":"4167:15:31"},"nodeType":"YulExpressionStatement","src":"4167:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4198:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4201:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4191:6:31"},"nodeType":"YulFunctionCall","src":"4191:15:31"},"nodeType":"YulExpressionStatement","src":"4191:15:31"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"4028:184:31"},{"body":{"nodeType":"YulBlock","src":"4391:162:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4408:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4419:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4401:6:31"},"nodeType":"YulFunctionCall","src":"4401:21:31"},"nodeType":"YulExpressionStatement","src":"4401:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4442:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4453:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4438:3:31"},"nodeType":"YulFunctionCall","src":"4438:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"4458:2:31","type":"","value":"12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4431:6:31"},"nodeType":"YulFunctionCall","src":"4431:30:31"},"nodeType":"YulExpressionStatement","src":"4431:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4481:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4492:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4477:3:31"},"nodeType":"YulFunctionCall","src":"4477:18:31"},{"hexValue":"6e6f742070726f706f736564","kind":"string","nodeType":"YulLiteral","src":"4497:14:31","type":"","value":"not proposed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4470:6:31"},"nodeType":"YulFunctionCall","src":"4470:42:31"},"nodeType":"YulExpressionStatement","src":"4470:42:31"},{"nodeType":"YulAssignment","src":"4521:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4533:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4544:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4529:3:31"},"nodeType":"YulFunctionCall","src":"4529:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4521:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_61f4bfef26a944a0b3efb8b18eef7c8c5bd11fc7694112fa9edb2c79b76af2f9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4368:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4382:4:31","type":""}],"src":"4217:336:31"},{"body":{"nodeType":"YulBlock","src":"4732:165:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4742:6:31"},"nodeType":"YulFunctionCall","src":"4742:21:31"},"nodeType":"YulExpressionStatement","src":"4742:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4783:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4794:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4779:3:31"},"nodeType":"YulFunctionCall","src":"4779:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"4799:2:31","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4772:6:31"},"nodeType":"YulFunctionCall","src":"4772:30:31"},"nodeType":"YulExpressionStatement","src":"4772:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4822:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4833:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4818:3:31"},"nodeType":"YulFunctionCall","src":"4818:18:31"},{"hexValue":"696e76616c6964206e657720666565","kind":"string","nodeType":"YulLiteral","src":"4838:17:31","type":"","value":"invalid new fee"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4811:6:31"},"nodeType":"YulFunctionCall","src":"4811:45:31"},"nodeType":"YulExpressionStatement","src":"4811:45:31"},{"nodeType":"YulAssignment","src":"4865:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4877:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4888:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4873:3:31"},"nodeType":"YulFunctionCall","src":"4873:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4865:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_a2468adb69dd1331d1c2924d5aa5b8659fa02c298a865a94acf70db5fb253ec8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4709:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4723:4:31","type":""}],"src":"4558:339:31"},{"body":{"nodeType":"YulBlock","src":"5076:178:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5093:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"5104:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5086:6:31"},"nodeType":"YulFunctionCall","src":"5086:21:31"},"nodeType":"YulExpressionStatement","src":"5086:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5127:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"5138:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5123:3:31"},"nodeType":"YulFunctionCall","src":"5123:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"5143:2:31","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5116:6:31"},"nodeType":"YulFunctionCall","src":"5116:30:31"},"nodeType":"YulExpressionStatement","src":"5116:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5166:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"5177:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5162:3:31"},"nodeType":"YulFunctionCall","src":"5162:18:31"},{"hexValue":"696e76616c696420616c676562726120666565207265636569766572","kind":"string","nodeType":"YulLiteral","src":"5182:30:31","type":"","value":"invalid algebra fee receiver"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5155:6:31"},"nodeType":"YulFunctionCall","src":"5155:58:31"},"nodeType":"YulExpressionStatement","src":"5155:58:31"},{"nodeType":"YulAssignment","src":"5222:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5234:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"5245:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5230:3:31"},"nodeType":"YulFunctionCall","src":"5230:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5222:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_2d701cb44082b54d76f2079d2ed56fb8bebc3ba7c1aed6b94050f9763933ebd0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5053:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5067:4:31","type":""}],"src":"4902:352:31"},{"body":{"nodeType":"YulBlock","src":"5433:166:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5450:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"5461:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5443:6:31"},"nodeType":"YulFunctionCall","src":"5443:21:31"},"nodeType":"YulExpressionStatement","src":"5443:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5484:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"5495:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5480:3:31"},"nodeType":"YulFunctionCall","src":"5480:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"5500:2:31","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5473:6:31"},"nodeType":"YulFunctionCall","src":"5473:30:31"},"nodeType":"YulExpressionStatement","src":"5473:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5523:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"5534:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5519:3:31"},"nodeType":"YulFunctionCall","src":"5519:18:31"},{"hexValue":"696e76616c6964207265636569766572","kind":"string","nodeType":"YulLiteral","src":"5539:18:31","type":"","value":"invalid receiver"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5512:6:31"},"nodeType":"YulFunctionCall","src":"5512:46:31"},"nodeType":"YulExpressionStatement","src":"5512:46:31"},{"nodeType":"YulAssignment","src":"5567:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5579:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"5590:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5575:3:31"},"nodeType":"YulFunctionCall","src":"5575:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5567:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_0eb53f4394227d9efae20f213ac7ba91324843ea74bf7589e808a58399106618__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5410:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5424:4:31","type":""}],"src":"5259:340:31"},{"body":{"nodeType":"YulBlock","src":"5653:233:31","statements":[{"nodeType":"YulAssignment","src":"5663:17:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5675:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"5678:1:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:31"},"nodeType":"YulFunctionCall","src":"5671:9:31"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"5663:4:31"}]},{"body":{"nodeType":"YulBlock","src":"5712:168:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5733:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5736:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5726:6:31"},"nodeType":"YulFunctionCall","src":"5726:88:31"},"nodeType":"YulExpressionStatement","src":"5726:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:31","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5827:6:31"},"nodeType":"YulFunctionCall","src":"5827:15:31"},"nodeType":"YulExpressionStatement","src":"5827:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5862:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5865:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5855:6:31"},"nodeType":"YulFunctionCall","src":"5855:15:31"},"nodeType":"YulExpressionStatement","src":"5855:15:31"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"5695:4:31"},{"name":"x","nodeType":"YulIdentifier","src":"5701:1:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5692:2:31"},"nodeType":"YulFunctionCall","src":"5692:11:31"},"nodeType":"YulIf","src":"5689:191:31"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5635:1:31","type":""},{"name":"y","nodeType":"YulTypedName","src":"5638:1:31","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"5644:4:31","type":""}],"src":"5604:282:31"},{"body":{"nodeType":"YulBlock","src":"5992:76:31","statements":[{"nodeType":"YulAssignment","src":"6002:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6014:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"6025:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6010:3:31"},"nodeType":"YulFunctionCall","src":"6010:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6002:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6044:9:31"},{"name":"value0","nodeType":"YulIdentifier","src":"6055:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6037:6:31"},"nodeType":"YulFunctionCall","src":"6037:25:31"},"nodeType":"YulExpressionStatement","src":"6037:25:31"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5961:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5972:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5983:4:31","type":""}],"src":"5891:177:31"},{"body":{"nodeType":"YulBlock","src":"6105:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6122:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6125:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6115:6:31"},"nodeType":"YulFunctionCall","src":"6115:88:31"},"nodeType":"YulExpressionStatement","src":"6115:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6219:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6222:4:31","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6212:6:31"},"nodeType":"YulFunctionCall","src":"6212:15:31"},"nodeType":"YulExpressionStatement","src":"6212:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6243:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6246:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6236:6:31"},"nodeType":"YulFunctionCall","src":"6236:15:31"},"nodeType":"YulExpressionStatement","src":"6236:15:31"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"6073:184:31"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_array$_t_struct$_WithdrawTokensParams_$5109_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(6, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_ff0b2a4910e8f81a07d80bdb9346c2fc1c6ad6e36f5ccd7dca7b94096772771c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"only algebra fee manager\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_99dd25207a22d65edeb29e8e142bda291165d5040e7618d5fc4986296b11b47d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"only administrator\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4cbf714950e058d3c5d10f8b84cbda7a3a55642b84d4a7fabaabf151ae72ed4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"only withdrawer\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_61f4bfef26a944a0b3efb8b18eef7c8c5bd11fc7694112fa9edb2c79b76af2f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"not proposed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a2468adb69dd1331d1c2924d5aa5b8659fa02c298a865a94acf70db5fb253ec8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"invalid new fee\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2d701cb44082b54d76f2079d2ed56fb8bebc3ba7c1aed6b94050f9763933ebd0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"invalid algebra fee receiver\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0eb53f4394227d9efae20f213ac7ba91324843ea74bf7589e808a58399106618__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"invalid receiver\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n}","id":31,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2693":[{"length":32,"start":1622},{"length":32,"start":2765},{"length":32,"start":3238},{"length":32,"start":3591}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD6129AC GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0xD17BC783 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xDFADC794 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xDFADC794 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xFF3C43E1 EQ PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD17BC783 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xD9FB4353 EQ PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD6129AC EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xB5F680AE EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xBBAC3B8D EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xC53B3FBE EQ PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x50EEA0C8 GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x50EEA0C8 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x62744405 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x9D754DDE EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x9F856B8D EQ PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1DE41613 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x371ABC95 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x4738761C EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x48A50FCF EQ PUSH2 0x1BF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x147 PUSH32 0xB77A63F119F4DC2174DC6C76FC1A1565FA4F2B0DDE50ED5C0465471CD9B331F6 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x17A SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x17A SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x336 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D2 PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x210 SWAP1 PUSH24 0x10000000000000000000000000000000000000000000000 SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x17A SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x210 SWAP1 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x572 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST PUSH2 0x147 PUSH32 0x63E58C34D94475BA3FC063E19800B940485850D84D09CD3C1F2C14192C559A68 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x2D2 SWAP1 PUSH23 0x100000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x153C JUMP JUMPDEST PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x1560 JUMP JUMPDEST PUSH2 0xA58 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x15D5 JUMP JUMPDEST PUSH2 0xC31 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x153C JUMP JUMPDEST PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920616C676562726120666565206D616E616765720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP3 AND SUB PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x34D1B5EF1C1C2C03A5000B91BEF5C465790244C6751C794E5B45BED7657C38FD SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x4FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920616C676562726120666565206D616E616765720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xAB6918BA7303F2F81E46E324B5F34AF4BDA562577C1DA710E2034980FEE1E82A SWAP1 PUSH1 0x20 ADD PUSH2 0x473 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD CALLER PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xECF97A11FB2F2BCC38D1B6881865ECC04405AF2D8B953004C79B3AB398732D02 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE8AE2B6900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x63E58C34D94475BA3FC063E19800B940485850D84D09CD3C1F2C14192C559A68 PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xE8AE2B69 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792061646D696E6973747261746F720000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x75C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP3 AND SUB PUSH2 0x784 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x2F4DB788B994A5908051D68A2340153F49870447185A244D2326861E60CC4186 SWAP1 PUSH1 0x20 ADD PUSH2 0x473 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x878 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920616C676562726120666565206D616E616765720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x9F4BBADE0736EDBD2EC12C598BDAC4573AF13A3B57820AE4C7DA5C61703EAAFF SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x94A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920616C676562726120666565206D616E616765720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xFFFF DUP3 AND GT ISZERO PUSH2 0x95D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xFFFF DUP3 DUP2 AND PUSH24 0x10000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND EQ DUP1 ISZERO SWAP1 PUSH2 0x9B2 JUMPI POP PUSH1 0x0 SLOAD PUSH2 0xFFFF DUP3 DUP2 AND PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND EQ ISZERO JUMPDEST PUSH2 0x9BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF DUP4 AND PUSH24 0x10000000000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR PUSH23 0x100000000000000000000000000000000000000000000 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2D6AC59D6DA98F80C7EA481D17C670EA310B000FFF5CF1732D94D93652DD25B7 SWAP1 PUSH2 0x473 SWAP1 DUP4 SWAP1 PUSH2 0xFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0xB4D JUMPI POP PUSH1 0x40 MLOAD PUSH32 0xE8AE2B6900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xB77A63F119F4DC2174DC6C76FC1A1565FA4F2B0DDE50ED5C0465471CD9B331F6 PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xE8AE2B69 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB4D SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0xBB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920776974686472617765720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP1 PUSH2 0xBC0 PUSH2 0x109D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xC28 JUMPI PUSH2 0xC20 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0xBE6 JUMPI PUSH2 0xBE6 PUSH2 0x1621 JUMP JUMPDEST PUSH2 0xBFC SWAP3 PUSH1 0x20 PUSH1 0x40 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x1521 JUMP JUMPDEST DUP4 DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0xC0F JUMPI PUSH2 0xC0F PUSH2 0x1621 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD PUSH1 0x20 ADD CALLDATALOAD DUP8 DUP8 PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xBC9 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0xD26 JUMPI POP PUSH1 0x40 MLOAD PUSH32 0xE8AE2B6900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xB77A63F119F4DC2174DC6C76FC1A1565FA4F2B0DDE50ED5C0465471CD9B331F6 PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xE8AE2B69 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD26 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0xD8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920776974686472617765720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xD99 PUSH2 0x109D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xDAC DUP6 DUP3 DUP7 DUP7 DUP7 PUSH2 0x11DF JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE8AE2B6900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x63E58C34D94475BA3FC063E19800B940485850D84D09CD3C1F2C14192C559A68 PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xE8AE2B69 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE63 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE87 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0xEED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792061646D696E6973747261746F720000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH23 0x100000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F742070726F706F7365640000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xFFFF DUP3 DUP2 AND PUSH24 0x10000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND EQ PUSH2 0x1000 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964206E6577206665650000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFF0000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0x10000000000000000000000000000000000000000 PUSH2 0xFFFF DUP5 AND SWAP1 DUP2 MUL PUSH32 0xFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDA1E1A9A6410ACC0398B3B64E0C0110B8DF57E29BFE69A419CDD9AE12718C307 SWAP1 PUSH1 0x20 ADD PUSH2 0x473 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH2 0xFFFF PUSH21 0x10000000000000000000000000000000000000000 DUP4 DIV AND SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND SWAP2 AND DUP3 ISZERO PUSH2 0x115D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x115D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420616C67656272612066656520726563656976657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x11DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420726563656976657200000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B3 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 JUMP JUMPDEST DUP3 PUSH2 0xFFFF DUP4 AND ISZERO PUSH2 0x127F JUMPI PUSH1 0x0 PUSH2 0x11FD DUP3 PUSH2 0xFFFF DUP7 AND PUSH2 0x3E8 PUSH2 0x12F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1209 DUP2 DUP4 PUSH2 0x1650 JUMP JUMPDEST SWAP2 POP PUSH2 0x1216 DUP8 DUP5 DUP4 PUSH2 0x1398 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB7EE7FC9DACB957CFA93FAEB8CA1826292DE295E18E287A347DDDFDE7AB48B40 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1275 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0x128A DUP7 DUP7 DUP4 PUSH2 0x1398 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7A629B77EF27AD337ABE438773206187960A90ABFB43607826BEF77D650E84B9 DUP4 PUSH1 0x40 MLOAD PUSH2 0x12E9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO DUP1 PUSH2 0x131A JUMPI POP POP DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1317 JUMPI PUSH2 0x1317 PUSH2 0x1690 JUMP JUMPDEST DIV EQ JUMPDEST ISZERO PUSH2 0x133B JUMPI PUSH1 0x0 DUP3 GT PUSH2 0x132C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 DIV SWAP1 DUP3 SWAP1 MOD ISZERO ISZERO ADD PUSH2 0x1391 JUMP JUMPDEST PUSH2 0x1346 DUP5 DUP5 DUP5 PUSH2 0x1441 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP1 PUSH2 0x1358 JUMPI PUSH2 0x1358 PUSH2 0x1690 JUMP JUMPDEST DUP5 DUP7 MULMOD GT ISZERO PUSH2 0x1391 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT PUSH2 0x138D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ADD JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x4 MSTORE DUP3 PUSH1 0x24 MSTORE PUSH1 0x20 PUSH1 0x0 PUSH1 0x44 PUSH1 0x0 DUP1 DUP10 GAS CALL SWAP2 POP DUP2 RETURNDATASIZE ISZERO PUSH1 0x20 RETURNDATASIZE EQ PUSH1 0x1 PUSH1 0x0 MLOAD EQ AND OR AND SWAP2 POP DUP1 PUSH1 0x40 MSTORE POP DUP1 PUSH2 0x143B JUMPI PUSH1 0x40 MLOAD PUSH32 0xE465903E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 MUL DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP8 MULMOD DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP DUP1 DUP5 GT PUSH2 0x1481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x1494 JUMPI POP DUP3 SWAP1 DIV SWAP1 POP PUSH2 0x1391 JUMP JUMPDEST DUP4 DUP6 DUP8 MULMOD PUSH1 0x0 DUP6 DUP2 SUB DUP7 AND SWAP6 DUP7 SWAP1 DIV SWAP6 PUSH1 0x2 PUSH1 0x3 DUP9 MUL DUP2 XOR DUP1 DUP10 MUL DUP3 SUB MUL DUP1 DUP10 MUL DUP3 SUB MUL DUP1 DUP10 MUL DUP3 SUB MUL DUP1 DUP10 MUL DUP3 SUB MUL DUP1 DUP10 MUL DUP3 SUB MUL DUP1 DUP10 MUL SWAP1 SWAP2 SUB MUL SWAP2 DUP2 SWAP1 SUB DUP2 SWAP1 DIV PUSH1 0x1 ADD DUP6 DUP5 GT SWAP1 SWAP5 SUB SWAP4 SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP4 SUB SWAP2 SWAP1 SWAP2 DIV OR MUL SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x151C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1391 DUP3 PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x154E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x158B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x159F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x15AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x6 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x15C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15F1 DUP4 PUSH2 0x14F8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x168A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"432:6230:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;546:93;;602:37;546:93;;;;;160:25:31;;;148:2;133:18;546:93:14;;;;;;;;910:35;;;;;;;;;;;;372:42:31;360:55;;;342:74;;330:2;315:18;910:35:14;196:226:31;1356:33:14;;;;;;;;;6342:318;;;;;;:::i;:::-;;:::i;:::-;;5145:228;;;;;;:::i;:::-;;:::i;1252:35::-;;;;;;;;;;;;;;;993:6:31;981:19;;;963:38;;951:2;936:18;1252:35:14;819:188:31;1438:32:14;;;;;;;;;1066:24;;;;;;;;;;;;5418:235;;;:::i;4713:332::-;;;;;;:::i;:::-;;:::i;696:106::-;;756:46;696:106;;1170:36;;;;;;;;;;;;;;;1177:14:31;;1170:22;1152:41;;1140:2;1125:18;1170:36:14;1012:187:31;6105:192:14;;;:::i;5698:362::-;;;;;;:::i;:::-;;:::i;2578:436::-;;;;;;:::i;:::-;;:::i;2238:295::-;;;;;;:::i;:::-;;:::i;4190:478::-;;;;;;:::i;:::-;;:::i;6342:318::-;2001:17;;;;1987:10;:31;1979:68;;;;;;;2602:2:31;1979:68:14;;;2584:21:31;2641:2;2621:18;;;2614:30;2680:26;2660:18;;;2653:54;2724:18;;1979:68:14;;;;;;;;;6461:35:::1;::::0;::::1;6453:44;;;::::0;::::1;;6536:18;::::0;::::1;::::0;;::::1;6511:43:::0;;::::1;::::0;6503:52:::1;;;::::0;::::1;;6561:18;:42:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;6614:41:::1;::::0;342:74:31;;;6614:41:14::1;::::0;330:2:31;315:18;6614:41:14::1;;;;;;;;6342:318:::0;:::o;5145:228::-;2001:17;;;;1987:10;:31;1979:68;;;;;;;2602:2:31;1979:68:14;;;2584:21:31;2641:2;2621:18;;;2614:30;2680:26;2660:18;;;2653:54;2724:18;;1979:68:14;2400:348:31;1979:68:14;5261:25:::1;:49:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;5321:47:::1;::::0;342:74:31;;;5321:47:14::1;::::0;330:2:31;315:18;5321:47:14::1;196:226:31::0;5418:235:14;5503:25;;;;5489:10;:39;5481:48;;;;;;5563:17;5535:73;;5597:10;5535:73;;;;;;;;;5536:25;5535:73;;;;;;;5619:29;;342:74:31;;;5619:29:14;;330:2:31;315:18;5619:29:14;;;;;;;5418:235::o;4713:332::-;1622:86;;;;;756:46;1622:86;;;2927:25:31;1697:10:14;2968:18:31;;;2961:83;1638:7:14;1622:39;;;;;2900:18:31;;1622:86:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1614:117;;;;;;;3539:2:31;1614:117:14;;;3521:21:31;3578:2;3558:18;;;3551:30;3617:20;3597:18;;;3590:48;3655:18;;1614:117:14;3337:342:31;1614:117:14;4832:37:::1;::::0;::::1;4824:46;;;::::0;::::1;;4911:20;::::0;::::1;::::0;;::::1;4884:47:::0;;::::1;::::0;4876:56:::1;;;::::0;::::1;;4938:20;:46:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;4995:45:::1;::::0;342:74:31;;;4995:45:14::1;::::0;330:2:31;315:18;4995:45:14::1;196:226:31::0;6105:192:14;2001:17;;;;1987:10;:31;1979:68;;;;;;;2602:2:31;1979:68:14;;;2584:21:31;2641:2;2621:18;;;2614:30;2680:26;2660:18;;;2653:54;2724:18;;1979:68:14;2400:348:31;1979:68:14;6246:1:::1;6193:62:::0;;;;;;6266:26:::1;::::0;::::1;::::0;6246:1;6266:26:::1;6105:192::o:0;5698:362::-;2001:17;;;;1987:10;:31;1979:68;;;;;;;2602:2:31;1979:68:14;;;2584:21:31;2641:2;2621:18;;;2614:30;2680:26;2660:18;;;2653:54;2724:18;;1979:68:14;2400:348:31;1979:68:14;1570:4:::1;5807:40;::::0;::::1;;;5799:49;;;::::0;::::1;;5879:21;::::0;::::1;5862:38:::0;;::::1;5879:21:::0;;;::::1;;5862:38;::::0;::::1;::::0;:69:::1;;-1:-1:-1::0;5921:10:14::1;::::0;::::1;5904:27:::0;;::::1;5921:10:::0;;;::::1;;5904:27;;5862:69;5854:78;;;::::0;::::1;;5939:21;5938:73:::0;;::::1;::::0;::::1;::::0;::::1;::::0;;;;;;;;;6022:33:::1;::::0;::::1;::::0;::::1;::::0;5991:13;;993:6:31;981:19;;;;963:38;;951:2;936:18;;819:188;2578:436:14;1801:17;;;;1787:10;:31;;:117;;-1:-1:-1;1822:82:14;;;;;602:37;1822:82;;;2927:25:31;1893:10:14;2968:18:31;;;2961:83;1838:7:14;1822:39;;;;;2900:18:31;;1822:82:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1779:145;;;;;;;3886:2:31;1779:145:14;;;3868:21:31;3925:2;3905:18;;;3898:30;3964:17;3944:18;;;3937:45;3999:18;;1779:145:14;3684:339:31;1779:145:14;2704:6;2681:20:::1;::::0;;2806:32:::1;:30;:32::i;:::-;2723:115;;;;;;2868:9;2863:140;2883:12;2879:1;:16;2863:140;;;2902:101;2912:6;;2919:1;2912:9;;;;;;;:::i;:::-;:15;::::0;::::1;:9;::::0;;::::1;;:15:::0;;::::1;::::0;-1:-1:-1;2912:15:14::1;:::i;:::-;2929:21;2952:6;;2959:1;2952:9;;;;;;;:::i;:::-;;;;;;:16;;;2970:11;2983:19;2902:9;:101::i;:::-;2897:3;;2863:140;;;;2675:339;;;;2578:436:::0;;:::o;2238:295::-;1801:17;;;;1787:10;:31;;:117;;-1:-1:-1;1822:82:14;;;;;602:37;1822:82;;;2927:25:31;1893:10:14;2968:18:31;;;2961:83;1838:7:14;1822:39;;;;;2900:18:31;;1822:82:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1779:145;;;;;;;3886:2:31;1779:145:14;;;3868:21:31;3925:2;3905:18;;;3898:30;3964:17;3944:18;;;3937:45;3999:18;;1779:145:14;3684:339:31;1779:145:14;2327:18:::1;2347:27:::0;2376:29:::1;2409:32;:30;:32::i;:::-;2326:115;;;;;;2447:81;2457:5;2464:21;2487:6;2495:11;2508:19;2447:9;:81::i;:::-;2320:213;;;2238:295:::0;;:::o;4190:478::-;1622:86;;;;;756:46;1622:86;;;2927:25:31;1697:10:14;2968:18:31;;;2961:83;1638:7:14;1622:39;;;;;2900:18:31;;1622:86:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1614:117;;;;;;;3539:2:31;1614:117:14;;;3521:21:31;3578:2;3558:18;;;3551:30;3617:20;3597:18;;;3590:48;3655:18;;1614:117:14;3337:342:31;1614:117:14;4302:24:::1;::::0;;;::::1;;;4294:49;;;::::0;::::1;::::0;;4419:2:31;4294:49:14::1;::::0;::::1;4401:21:31::0;4458:2;4438:18;;;4431:30;4497:14;4477:18;;;4470:42;4529:18;;4294:49:14::1;4217:336:31::0;4294:49:14::1;4374:21;::::0;::::1;4357:38:::0;;::::1;4374:21:::0;;;::::1;;4357:38;4349:66;;;::::0;::::1;::::0;;4760:2:31;4349:66:14::1;::::0;::::1;4742:21:31::0;4799:2;4779:18;;;4772:30;4838:17;4818:18;;;4811:45;4873:18;;4349:66:14::1;4558:339:31::0;4349:66:14::1;4533:10;:26:::0;;4565:62;;4533:26;::::1;::::0;::::1;::::0;;::::1;4565:62:::0;;;;;;;;;4638:25:::1;::::0;963:38:31;;;4638:25:14::1;::::0;951:2:31;936:18;4638:25:14::1;819:188:31::0;3018:441:14;3082:18;3229:10;3241:18;;3229:10;;;;;;3241:18;;;;;3261:20;3292:16;;3288:96;;3318:33;;;3310:74;;;;;;;5104:2:31;3310:74:14;;;5086:21:31;5143:2;5123:18;;;5116:30;5182;5162:18;;;5155:58;5230:18;;3310:74:14;4902:352:31;3310:74:14;3398:35;;;3390:64;;;;;;;5461:2:31;3390:64:14;;;5443:21:31;5500:2;5480:18;;;5473:30;5539:18;5519;;;5512:46;5575:18;;3390:64:14;5259:340:31;3390:64:14;3018:441;;;:::o;3463:625::-;3613:6;3629:16;;;;3625:346;;3655:24;3682:79;3708:14;3682:79;;;1570:4;3682:25;:79::i;:::-;3655:106;-1:-1:-1;3769:34:14;3655:106;3769:34;;:::i;:::-;;;3811:71;3837:5;3844:19;3865:16;3811:25;:71::i;:::-;3926:19;3895:69;;3919:5;3895:69;;;3947:16;3895:69;;;;160:25:31;;148:2;133:18;;14:177;3895:69:14;;;;;;;;3647:324;3625:346;3977:52;4003:5;4010:2;4014:14;3977:25;:52::i;:::-;4064:2;4040:43;;4057:5;4040:43;;;4068:14;4040:43;;;;160:25:31;;148:2;133:18;;14:177;4040:43:14;;;;;;;;3582:506;3463:625;;;;;:::o;4485:521:29:-;4577:14;4621:6;;;:37;;-1:-1:-1;;4642:5:29;;;4656:1;4651;4642:5;4651:1;4632:20;;;;:::i;:::-;;:25;4621:37;4617:379;;;4692:1;4678:11;:15;4670:24;;;;;;4739;;;4768;;;;4765:31;;4735:62;4617:379;;;4840:25;4847:1;4850;4853:11;4840:6;:25::i;:::-;4831:34;;4907:1;4892:11;4879:25;;;;;:::i;:::-;4889:1;4886;4879:25;:29;4875:113;;;4939:17;4930:6;:26;4922:35;;;;;;4969:8;;4875:113;4485:521;;;;;:::o;865:967:30:-;945:12;1011:4;1005:11;1073:66;1067:4;1060:80;1208:42;1204:2;1200:51;1194:4;1187:65;1303:6;1297:4;1290:20;1433:4;1430:1;1424:4;1421:1;1418;1411:5;1404;1399:39;1388:50;;1673:7;1645:16;1638:24;1632:2;1614:16;1611:24;1607:1;1603;1597:8;1594:15;1590:46;1587:76;1456:232;1445:243;;1708:17;1702:4;1695:31;;1776:7;1771:56;;1792:35;;;;;;;;;;;;;;1771:56;939:893;865:967;;;:::o;727:3488:29:-;809:14;1158:5;;;809:14;1323:6;1162:1;1158;1310:20;1375:5;1371:2;1368:13;1360:5;1356:2;1352:14;1348:34;1339:43;;;1511:5;1497:11;:19;1489:28;;;;;;1586:5;1595:1;1586:10;1582:121;;-1:-1:-1;1639:23:29;;;;-1:-1:-1;1681:13:29;;1582:121;2072:11;2069:1;2066;2059:25;2322:12;2338:15;;;2337:31;;2454:22;;;;;3217:1;3198;:15;;3197:21;;3436:17;;;3432:21;;3425:28;3492:17;;;3488:21;;3481:28;3549:17;;;3545:21;;3538:28;3606:17;;;3602:21;;3595:28;3663:17;;;3659:21;;3652:28;3721:17;;;3717:21;;;3710:28;2802:12;;;;2798:23;;;2823:1;2794:31;2113:20;;;2102:32;;;2849:12;;;;2152:21;;;;2572:16;;;;2840:21;4172:11;;-1:-1:-1;727:3488:29;;;;;:::o;427:196:31:-;495:20;;555:42;544:54;;534:65;;524:93;;613:1;610;603:12;524:93;427:196;;;:::o;628:186::-;687:6;740:2;728:9;719:7;715:23;711:32;708:52;;;756:1;753;746:12;708:52;779:29;798:9;779:29;:::i;1204:272::-;1262:6;1315:2;1303:9;1294:7;1290:23;1286:32;1283:52;;;1331:1;1328;1321:12;1283:52;1370:9;1357:23;1420:6;1413:5;1409:18;1402:5;1399:29;1389:57;;1442:1;1439;1432:12;1481:655;1607:6;1615;1668:2;1656:9;1647:7;1643:23;1639:32;1636:52;;;1684:1;1681;1674:12;1636:52;1724:9;1711:23;1753:18;1794:2;1786:6;1783:14;1780:34;;;1810:1;1807;1800:12;1780:34;1848:6;1837:9;1833:22;1823:32;;1893:7;1886:4;1882:2;1878:13;1874:27;1864:55;;1915:1;1912;1905:12;1864:55;1955:2;1942:16;1981:2;1973:6;1970:14;1967:34;;;1997:1;1994;1987:12;1967:34;2050:7;2045:2;2035:6;2032:1;2028:14;2024:2;2020:23;2016:32;2013:45;2010:65;;;2071:1;2068;2061:12;2010:65;2102:2;2094:11;;;;;2124:6;;-1:-1:-1;1481:655:31;;-1:-1:-1;;;;1481:655:31:o;2141:254::-;2209:6;2217;2270:2;2258:9;2249:7;2245:23;2241:32;2238:52;;;2286:1;2283;2276:12;2238:52;2309:29;2328:9;2309:29;:::i;:::-;2299:39;2385:2;2370:18;;;;2357:32;;-1:-1:-1;;;2141:254:31:o;3055:277::-;3122:6;3175:2;3163:9;3154:7;3150:23;3146:32;3143:52;;;3191:1;3188;3181:12;3143:52;3223:9;3217:16;3276:5;3269:13;3262:21;3255:5;3252:32;3242:60;;3298:1;3295;3288:12;4028:184;4080:77;4077:1;4070:88;4177:4;4174:1;4167:15;4201:4;4198:1;4191:15;5604:282;5671:9;;;5692:11;;;5689:191;;;5736:77;5733:1;5726:88;5837:4;5834:1;5827:15;5865:4;5862:1;5855:15;5689:191;5604:282;;;;:::o;6073:184::-;6125:77;6122:1;6115:88;6222:4;6219:1;6212:15;6246:4;6243:1;6236:15"},"methodIdentifiers":{"COMMUNITY_FEE_VAULT_ADMINISTRATOR()":"bbac3b8d","COMMUNITY_FEE_WITHDRAWER_ROLE()":"1de41613","acceptAlgebraFeeChangeProposal(uint16)":"ff3c43e1","acceptAlgebraFeeManagerRole()":"ad6129ac","algebraFee()":"9f856b8d","algebraFeeManager()":"9d754dde","algebraFeeReceiver()":"4738761c","cancelAlgebraFeeChangeProposal()":"d17bc783","changeAlgebraFeeReceiver(address)":"48a50fcf","changeCommunityFeeReceiver(address)":"b5f680ae","communityFeeReceiver()":"371abc95","hasNewAlgebraFeeProposal()":"c53b3fbe","proposeAlgebraFeeChange(uint16)":"d9fb4353","proposedNewAlgebraFee()":"62744405","transferAlgebraFeeManagerRole(address)":"50eea0c8","withdraw(address,uint256)":"f3fef3a3","withdrawTokens((address,uint256)[])":"dfadc794"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_algebraFeeManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"transferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newAlgebraFee\",\"type\":\"uint16\"}],\"name\":\"AlgebraFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAlgebraFeeManager\",\"type\":\"address\"}],\"name\":\"AlgebraFeeManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"proposedNewAlgebraFee\",\"type\":\"uint16\"}],\"name\":\"AlgebraFeeProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAlgebraFeeReceiver\",\"type\":\"address\"}],\"name\":\"AlgebraFeeReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AlgebraTokensWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CancelAlgebraFeeProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCommunityFeeReceiver\",\"type\":\"address\"}],\"name\":\"CommunityFeeReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pendingAlgebraFeeManager\",\"type\":\"address\"}],\"name\":\"PendingAlgebraFeeManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COMMUNITY_FEE_VAULT_ADMINISTRATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMMUNITY_FEE_WITHDRAWER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newAlgebraFee\",\"type\":\"uint16\"}],\"name\":\"acceptAlgebraFeeChangeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptAlgebraFeeManagerRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"algebraFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"algebraFeeManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"algebraFeeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelAlgebraFeeChangeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAlgebraFeeReceiver\",\"type\":\"address\"}],\"name\":\"changeAlgebraFeeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCommunityFeeReceiver\",\"type\":\"address\"}],\"name\":\"changeCommunityFeeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityFeeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasNewAlgebraFeeProposal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newAlgebraFee\",\"type\":\"uint16\"}],\"name\":\"proposeAlgebraFeeChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedNewAlgebraFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAlgebraFeeManager\",\"type\":\"address\"}],\"name\":\"transferAlgebraFeeManagerRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IAlgebraCommunityVault.WithdrawTokensParams[]\",\"name\":\"params\",\"type\":\"tuple[]\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Role system is used to withdraw tokensVersion: Algebra Integral 1.2\",\"events\":{\"AlgebraFee(uint16)\":{\"params\":{\"newAlgebraFee\":\"The new Algebra fee value\"}},\"AlgebraFeeManager(address)\":{\"params\":{\"newAlgebraFeeManager\":\"New Algebra fee manager address\"}},\"AlgebraFeeProposal(uint16)\":{\"params\":{\"proposedNewAlgebraFee\":\"The new proposed Algebra fee value\"}},\"AlgebraFeeReceiver(address)\":{\"params\":{\"newAlgebraFeeReceiver\":\"New Algebra fee receiver address\"}},\"AlgebraTokensWithdrawal(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of fees tokens claimed by Algebra\",\"to\":\"The address where claimed rewards were sent to\",\"token\":\"The address of token fee\"}},\"CommunityFeeReceiver(address)\":{\"params\":{\"newCommunityFeeReceiver\":\"New fee receiver address\"}},\"PendingAlgebraFeeManager(address)\":{\"params\":{\"pendingAlgebraFeeManager\":\"New pending Algebra fee manager address\"}},\"TokensWithdrawal(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of fees tokens claimed by communityFeeReceiver\",\"to\":\"The address where claimed rewards were sent to\",\"token\":\"The address of token fee\"}}},\"kind\":\"dev\",\"methods\":{\"acceptAlgebraFeeChangeProposal(uint16)\":{\"details\":\"Can only be called by the factory owner. The new value will also be used for previously accumulated tokens that have not yet been withdrawn\",\"params\":{\"newAlgebraFee\":\"New Algebra fee value\"}},\"changeAlgebraFeeReceiver(address)\":{\"params\":{\"newAlgebraFeeReceiver\":\"The address of new Algebra fee receiver\"}},\"changeCommunityFeeReceiver(address)\":{\"details\":\"Can only be called by the factory owner\",\"params\":{\"newCommunityFeeReceiver\":\"New community fee receiver address\"}},\"proposeAlgebraFeeChange(uint16)\":{\"details\":\"the new value will also be used for previously accumulated tokens that have not yet been withdrawn\",\"params\":{\"newAlgebraFee\":\"new Algebra fee value\"}},\"transferAlgebraFeeManagerRole(address)\":{\"params\":{\"_newAlgebraFeeManager\":\"new Algebra fee manager address\"}},\"withdraw(address,uint256)\":{\"details\":\"Can only be called by algebraFeeManager or communityFeeReceiver\",\"params\":{\"amount\":\"The amount of token\",\"token\":\"The token address\"}},\"withdrawTokens((address,uint256)[])\":{\"details\":\"Can be called by algebraFeeManager or communityFeeReceiver\",\"params\":{\"params\":\"Array of WithdrawTokensParams objects containing token addresses and amounts to withdraw\"}}},\"stateVariables\":{\"COMMUNITY_FEE_VAULT_ADMINISTRATOR\":{\"details\":\"The role can be granted in AlgebraFactory\"},\"COMMUNITY_FEE_WITHDRAWER_ROLE\":{\"details\":\"The role can be granted in AlgebraFactory\"},\"algebraFee\":{\"details\":\"Value in thousandths,i.e. 1e-3\"}},\"title\":\"Algebra community fee vault\",\"version\":1},\"userdoc\":{\"errors\":{\"transferFailed()\":[{\"notice\":\"Emitted if token transfer failed internally\"}]},\"events\":{\"AlgebraFee(uint16)\":{\"notice\":\"Emitted when the Algebra fee is changed\"},\"AlgebraFeeManager(address)\":{\"notice\":\"Emitted when a AlgebraFeeManager address changed\"},\"AlgebraFeeProposal(uint16)\":{\"notice\":\"Emitted when a new Algebra fee value proposed\"},\"AlgebraFeeReceiver(address)\":{\"notice\":\"Emitted when a AlgebraFeeReceiver address changed\"},\"AlgebraTokensWithdrawal(address,address,uint256)\":{\"notice\":\"Event emitted when a fees has been claimed\"},\"CancelAlgebraFeeProposal()\":{\"notice\":\"Emitted when a Algebra fee proposal canceled\"},\"CommunityFeeReceiver(address)\":{\"notice\":\"Emitted when a CommunityFeeReceiver address changed\"},\"PendingAlgebraFeeManager(address)\":{\"notice\":\"Emitted when a AlgebraFeeManager address change proposed\"},\"TokensWithdrawal(address,address,uint256)\":{\"notice\":\"Event emitted when a fees has been claimed\"}},\"kind\":\"user\",\"methods\":{\"acceptAlgebraFeeChangeProposal(uint16)\":{\"notice\":\"Accepts the proposed new Algebra fee\"},\"acceptAlgebraFeeManagerRole()\":{\"notice\":\"accept Algebra FeeManager role\"},\"algebraFee()\":{\"notice\":\"The percentage of the protocol fee that Algebra will receive\"},\"algebraFeeManager()\":{\"notice\":\"Address of Algebra fee manager\"},\"algebraFeeReceiver()\":{\"notice\":\"Address of recipient Algebra part of community fee\"},\"cancelAlgebraFeeChangeProposal()\":{\"notice\":\"Cancels Algebra fee change proposal\"},\"changeAlgebraFeeReceiver(address)\":{\"notice\":\"Change Algebra community fee part receiver\"},\"changeCommunityFeeReceiver(address)\":{\"notice\":\"Change community fee receiver address\"},\"communityFeeReceiver()\":{\"notice\":\"Address to which community fees are sent from vault\"},\"hasNewAlgebraFeeProposal()\":{\"notice\":\"Represents whether there is a new Algebra fee proposal or not\"},\"proposeAlgebraFeeChange(uint16)\":{\"notice\":\"Proposes new Algebra fee value for protocol\"},\"proposedNewAlgebraFee()\":{\"notice\":\"Suggested Algebra fee value\"},\"transferAlgebraFeeManagerRole(address)\":{\"notice\":\"Transfers Algebra fee manager role\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdraw protocol fees from vault\"},\"withdrawTokens((address,uint256)[])\":{\"notice\":\"Withdraw protocol fees from vault. Used to claim fees for multiple tokens\"}},\"notice\":\"Community fee from pools is sent here, if it is enabled\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AlgebraCommunityVault.sol\":\"AlgebraCommunityVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/AlgebraCommunityVault.sol\":{\"keccak256\":\"0x27d1ddce8b90e2f151a76b69e403c7044e53531724fcef4f684bb87b7e5b74f7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e97f105d96a5d613c56ac31f66f80f2131fbf6cd41e9d4c9577079f0140543c9\",\"dweb:/ipfs/QmTW88xeoYf7nGEW1mR24Fy5MA8F1xTve8ZXFHHgoDFrv4\"]},\"contracts/interfaces/IAlgebraFactory.sol\":{\"keccak256\":\"0xb87bef911483f054559e6567a5a958200131b5101fbcee1ed7daefcfc082faf7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://46c8f76cde3c16aed0446e98dc61ddb196288652f6a8735ed87d6e53a13b4142\",\"dweb:/ipfs/Qmd7omugWuFrjrCcwfeRQbeUS1FhqvhscTij4xtqCmjNKG\"]},\"contracts/interfaces/plugin/IAlgebraPluginFactory.sol\":{\"keccak256\":\"0xf1cc5f09fc738bf41381fdf6864919c07965f25e715af6982df54605ce3a32fc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6fa8803e45159a6c404fd714321bc2ba0e010e76e3755594628f0c0bc9204182\",\"dweb:/ipfs/QmSAtmyH38VtzgycYTjGF3Y5aWG6DPjWD3JDjGVAn4fi2m\"]},\"contracts/interfaces/pool/IAlgebraPoolErrors.sol\":{\"keccak256\":\"0x5ee2c56b4acc88f0c4649e39ebb0f8452381e13305bd297b53358cbe32c16069\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d25e93950215a98988cf189d2eb1cd0bc41c91d7f190b7e3c5cdfb92651dcfd5\",\"dweb:/ipfs/QmXkA7xk83yJtooAqJSRwUfR7V6iwjsiwbvEfATyasuiEM\"]},\"contracts/interfaces/vault/IAlgebraCommunityVault.sol\":{\"keccak256\":\"0x24fad3648346700d372d65ca449494553db47dcb03d2cd0acaf7677a5f7b1391\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c15473dd606ee905423bf27fba68ce7d9964b43f728611db22468dd36581caf4\",\"dweb:/ipfs/QmSa7ratHBjLQ3xrAoNXvM3pBhtLYBqRuMx8rnYy5S2se4\"]},\"contracts/interfaces/vault/IAlgebraVaultFactory.sol\":{\"keccak256\":\"0xcdaae6cd6af79c4f344e673fe886a980ef5203b15b49f7a466c336c0152ce6ae\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fa2d3073bd4ca013e2769cf0fa5b68f32cec4fa53a6cc66adb59d86e6293cf15\",\"dweb:/ipfs/QmcwveJdf3JLAPfFZShijKTTxMTP4joDDuSuFboXBe711S\"]},\"contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x6e562130eac2d18d5527fc12115e83a3aa0955f6be89531b6d0d5977f0784cf7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5226566361b64a277a523430449d398434aa9956ec53ab96120bdb5eed0d36c\",\"dweb:/ipfs/QmdmE85FDGgaZBFb9WDamJQpvSx6BrpYUutudSzoRVmxMv\"]},\"contracts/libraries/SafeTransfer.sol\":{\"keccak256\":\"0x14e91c94e35c50efcd97e13609f686499c1dfa726ee0b3f6078fa4b99bde9a0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d9a7efa21d03180ded0e99d7ba05abd5c8ebedf2439a5a78091b679eadc4064\",\"dweb:/ipfs/QmVUZPhYPTb2yY9381AL242tfVsb3iWxmE2XwqcN9HG6eW\"]}},\"version\":1}"}},"contracts/AlgebraFactory.sol":{"AlgebraFactory":{"abi":[{"inputs":[{"internalType":"address","name":"_poolDeployer","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"deployer","type":"address"},{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":false,"internalType":"address","name":"pool","type":"address"}],"name":"CustomPool","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"newDefaultCommunityFee","type":"uint16"}],"name":"DefaultCommunityFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"newDefaultFee","type":"uint16"}],"name":"DefaultFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"defaultPluginFactoryAddress","type":"address"}],"name":"DefaultPluginFactory","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int24","name":"newDefaultTickspacing","type":"int24"}],"name":"DefaultTickspacing","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":false,"internalType":"address","name":"pool","type":"address"}],"name":"Pool","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"RenounceOwnershipFinish","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"finishTimestamp","type":"uint256"}],"name":"RenounceOwnershipStart","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"RenounceOwnershipStop","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newVaultFactory","type":"address"}],"name":"VaultFactory","type":"event"},{"inputs":[],"name":"CUSTOM_POOL_DEPLOYER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"POOLS_ADMINISTRATOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"POOL_INIT_CODE_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"}],"name":"computeCustomPoolAddress","outputs":[{"internalType":"address","name":"customPool","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"}],"name":"computePoolAddress","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"address","name":"creator","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"createCustomPool","outputs":[{"internalType":"address","name":"customPool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"customPoolByPair","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultCommunityFee","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultConfigurationForPool","outputs":[{"internalType":"uint16","name":"communityFee","type":"uint16"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"uint16","name":"fee","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultFee","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultPluginFactory","outputs":[{"internalType":"contract IAlgebraPluginFactory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultTickspacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRoleOrOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"poolByPair","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolDeployer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnershipStartTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"newDefaultCommunityFee","type":"uint16"}],"name":"setDefaultCommunityFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"newDefaultFee","type":"uint16"}],"name":"setDefaultFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newDefaultPluginFactory","type":"address"}],"name":"setDefaultPluginFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int24","name":"newDefaultTickspacing","type":"int24"}],"name":"setDefaultTickspacing","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newVaultFactory","type":"address"}],"name":"setVaultFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startRenounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stopRenounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vaultFactory","outputs":[{"internalType":"contract IAlgebraVaultFactory","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_3307":{"entryPoint":null,"id":3307,"parameterSlots":1,"returnSlots":0},"@_562":{"entryPoint":null,"id":562,"parameterSlots":0,"returnSlots":0},"@_753":{"entryPoint":null,"id":753,"parameterSlots":0,"returnSlots":0},"@_add_2110":{"entryPoint":1130,"id":2110,"parameterSlots":2,"returnSlots":1},"@_contains_2213":{"entryPoint":null,"id":2213,"parameterSlots":2,"returnSlots":1},"@_grantRole_283":{"entryPoint":683,"id":283,"parameterSlots":2,"returnSlots":0},"@_grantRole_415":{"entryPoint":400,"id":415,"parameterSlots":2,"returnSlots":0},"@_msgSender_811":{"entryPoint":null,"id":811,"parameterSlots":0,"returnSlots":1},"@_remove_2194":{"entryPoint":870,"id":2194,"parameterSlots":2,"returnSlots":1},"@_revokeRole_314":{"entryPoint":438,"id":314,"parameterSlots":2,"returnSlots":0},"@_revokeRole_439":{"entryPoint":330,"id":439,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_4070":{"entryPoint":236,"id":4070,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_650":{"entryPoint":603,"id":650,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_711":{"entryPoint":373,"id":711,"parameterSlots":1,"returnSlots":0},"@add_2410":{"entryPoint":847,"id":2410,"parameterSlots":2,"returnSlots":1},"@hasRole_79":{"entryPoint":null,"id":79,"parameterSlots":2,"returnSlots":1},"@owner_3321":{"entryPoint":null,"id":3321,"parameterSlots":0,"returnSlots":1},"@owner_579":{"entryPoint":null,"id":579,"parameterSlots":0,"returnSlots":1},"@remove_2437":{"entryPoint":571,"id":2437,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":1212,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int24__to_t_int24__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":1262,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x31":{"entryPoint":1318,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":1296,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1186:31","statements":[{"nodeType":"YulBlock","src":"6:3:31","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:31","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:31"},"nodeType":"YulFunctionCall","src":"143:12:31"},"nodeType":"YulExpressionStatement","src":"143:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:31"},"nodeType":"YulFunctionCall","src":"112:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:31"},"nodeType":"YulFunctionCall","src":"108:32:31"},"nodeType":"YulIf","src":"105:52:31"},{"nodeType":"YulVariableDeclaration","src":"166:29:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:31"},"nodeType":"YulFunctionCall","src":"179:16:31"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:31"},"nodeType":"YulFunctionCall","src":"260:12:31"},"nodeType":"YulExpressionStatement","src":"260:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:31"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:31","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:31","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:31"},"nodeType":"YulFunctionCall","src":"239:11:31"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:31","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:31"},"nodeType":"YulFunctionCall","src":"235:19:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:31"},"nodeType":"YulFunctionCall","src":"224:31:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:31"},"nodeType":"YulFunctionCall","src":"214:42:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:31"},"nodeType":"YulFunctionCall","src":"207:50:31"},"nodeType":"YulIf","src":"204:70:31"},{"nodeType":"YulAssignment","src":"283:15:31","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:31"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:31","type":""}],"src":"14:290:31"},{"body":{"nodeType":"YulBlock","src":"406:91:31","statements":[{"nodeType":"YulAssignment","src":"416:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"428:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"439:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"424:3:31"},"nodeType":"YulFunctionCall","src":"424:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"416:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"480:1:31","type":"","value":"2"},{"name":"value0","nodeType":"YulIdentifier","src":"483:6:31"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"469:10:31"},"nodeType":"YulFunctionCall","src":"469:21:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"451:6:31"},"nodeType":"YulFunctionCall","src":"451:40:31"},"nodeType":"YulExpressionStatement","src":"451:40:31"}]},"name":"abi_encode_tuple_t_int24__to_t_int24__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"375:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"386:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"397:4:31","type":""}],"src":"309:188:31"},{"body":{"nodeType":"YulBlock","src":"601:89:31","statements":[{"nodeType":"YulAssignment","src":"611:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"623:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"634:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"619:3:31"},"nodeType":"YulFunctionCall","src":"619:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"611:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"653:9:31"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"668:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"676:6:31","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"664:3:31"},"nodeType":"YulFunctionCall","src":"664:19:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"646:6:31"},"nodeType":"YulFunctionCall","src":"646:38:31"},"nodeType":"YulExpressionStatement","src":"646:38:31"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"570:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"581:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"592:4:31","type":""}],"src":"502:188:31"},{"body":{"nodeType":"YulBlock","src":"744:176:31","statements":[{"nodeType":"YulAssignment","src":"754:17:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"766:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"769:1:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"762:3:31"},"nodeType":"YulFunctionCall","src":"762:9:31"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"754:4:31"}]},{"body":{"nodeType":"YulBlock","src":"803:111:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"824:1:31","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"831:3:31","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"836:10:31","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"827:3:31"},"nodeType":"YulFunctionCall","src":"827:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"817:6:31"},"nodeType":"YulFunctionCall","src":"817:31:31"},"nodeType":"YulExpressionStatement","src":"817:31:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"868:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"871:4:31","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"861:6:31"},"nodeType":"YulFunctionCall","src":"861:15:31"},"nodeType":"YulExpressionStatement","src":"861:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"896:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"899:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"889:6:31"},"nodeType":"YulFunctionCall","src":"889:15:31"},"nodeType":"YulExpressionStatement","src":"889:15:31"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"786:4:31"},{"name":"x","nodeType":"YulIdentifier","src":"792:1:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"783:2:31"},"nodeType":"YulFunctionCall","src":"783:11:31"},"nodeType":"YulIf","src":"780:134:31"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"726:1:31","type":""},{"name":"y","nodeType":"YulTypedName","src":"729:1:31","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"735:4:31","type":""}],"src":"695:225:31"},{"body":{"nodeType":"YulBlock","src":"957:95:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"974:1:31","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"981:3:31","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"986:10:31","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"977:3:31"},"nodeType":"YulFunctionCall","src":"977:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"967:6:31"},"nodeType":"YulFunctionCall","src":"967:31:31"},"nodeType":"YulExpressionStatement","src":"967:31:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1014:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1017:4:31","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1007:6:31"},"nodeType":"YulFunctionCall","src":"1007:15:31"},"nodeType":"YulExpressionStatement","src":"1007:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1038:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1041:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1031:6:31"},"nodeType":"YulFunctionCall","src":"1031:15:31"},"nodeType":"YulExpressionStatement","src":"1031:15:31"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"925:127:31"},{"body":{"nodeType":"YulBlock","src":"1089:95:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1106:1:31","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1113:3:31","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1118:10:31","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1109:3:31"},"nodeType":"YulFunctionCall","src":"1109:20:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1099:6:31"},"nodeType":"YulFunctionCall","src":"1099:31:31"},"nodeType":"YulExpressionStatement","src":"1099:31:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1146:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1149:4:31","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1139:6:31"},"nodeType":"YulFunctionCall","src":"1139:15:31"},"nodeType":"YulExpressionStatement","src":"1139:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1170:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1173:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1163:6:31"},"nodeType":"YulFunctionCall","src":"1163:15:31"},"nodeType":"YulExpressionStatement","src":"1163:15:31"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"1057:127:31"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_int24__to_t_int24__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, signextend(2, value0))\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}","id":31,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523480156200001157600080fd5b5060405162002f3838038062002f388339810160408190526200003491620004bc565b6200003f33620000ec565b60016004556001600160a01b0381166200005857600080fd5b6001600160a01b0381166080526005805466ffffffffff00001916643c01f40000179055604051603c81527f7d7979096f943139ebee59f01c077a0f0766d06c40c86d596f23ed2561547cce9060200160405180910390a16040516101f481527fddc0c6f0b581e0d51bfe90ff138e4a548f94515c4dbcb12f5e98fdf0f75039839060200160405180910390a1506200053c565b6200010b6000620001056000546001600160a01b031690565b6200014a565b620001168162000175565b6000546001600160a01b0316156200014757620001476000620001416000546001600160a01b031690565b62000190565b50565b620001568282620001b6565b60008281526003602052604090206200017090826200023b565b505050565b600180546001600160a01b031916905562000147816200025b565b6200019c8282620002ab565b60008281526003602052604090206200017090826200034f565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff1615620002375760008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45b5050565b600062000252836001600160a01b03841662000366565b90505b92915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff16620002375760008281526002602090815260408083206001600160a01b03851684529091529020805460ff191660011790556200030b3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000252836001600160a01b0384166200046a565b600081815260018301602052604081205480156200045f5760006200038d600183620004ee565b8554909150600090620003a390600190620004ee565b90508181146200040f576000866000018281548110620003c757620003c762000510565b9060005260206000200154905080876000018481548110620003ed57620003ed62000510565b6000918252602080832090910192909255918252600188019052604090208390555b855486908062000423576200042362000526565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505062000255565b600091505062000255565b6000818152600183016020526040812054620004b35750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000255565b50600062000255565b600060208284031215620004cf57600080fd5b81516001600160a01b0381168114620004e757600080fd5b9392505050565b818103818111156200025557634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6080516129cb6200056d6000396000818161046d0152818161079f01528181610f1301526117e601526129cb6000f3fe608060405234801561001057600080fd5b50600436106102ad5760003560e01c8063773265841161017b578063d547741f116100d8578063dc6fd8ab1161008c578063e8ae2b6911610071578063e8ae2b69146106d2578063f09489ac146106e5578063f2fde38b146106f857600080fd5b8063dc6fd8ab1461068d578063e30c3978146106b457600080fd5b8063d8ed2241116100bd578063d8ed224114610626578063d9a641e114610639578063dbbf3db41461067a57600080fd5b8063d547741f146105f3578063d8a06f731461060657600080fd5b806391d148541161012f578063b500a48b11610114578063b500a48b14610599578063ca15c873146105c0578063d0ad2792146105d357600080fd5b806391d148541461054b578063a217fddf1461059157600080fd5b80638d5a8711116101605780638d5a8711146105075780638da5cb5b1461051a5780639010d07c1461053857600080fd5b806377326584146104ec57806379ba5097146104ff57600080fd5b806329bc34461161022957806336568abe116101dd578063469388c4116101c2578063469388c4146104c85780635a6c72d0146104d0578063715018a6146104e457600080fd5b806336568abe146104a25780633ea7fbdb146104b557600080fd5b80632f8a39dd1161020e5780632f8a39dd146104475780633119049a14610468578063321935c61461048f57600080fd5b806329bc34461461040c5780632f2ff15d1461043457600080fd5b8063238a1d7411610280578063248a9ca311610265578063248a9ca3146103a157806325b355d6146103c45780632939dd97146103f957600080fd5b8063238a1d741461035057806323da36cc1461035a57600080fd5b806301ffc9a7146102b257806307810754146102da578063084bfff91461030f5780631ba89df414610318575b600080fd5b6102c56102c036600461242c565b61070b565b60405190151581526020015b60405180910390f35b6103017fc9cf812513d9983585eb40fcfe6fd49fbb6a45815663ec33b30a6c6c7de3683b81565b6040519081526020016102d1565b61030160065481565b61032b610326366004612490565b610767565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102d1565b6103586108c4565b005b61032b610368366004612490565b600a60209081526000938452604080852082529284528284209052825290205473ffffffffffffffffffffffffffffffffffffffff1681565b6103016103af3660046124db565b60009081526002602052604090206001015490565b6005546040805161ffff8084168252640100000000840460020b602083015262010000909304909216908201526060016102d1565b6103586104073660046124f4565b610916565b60055461042190640100000000900460020b81565b60405160029190910b81526020016102d1565b610358610442366004612511565b6109c0565b6005546104559061ffff1681565b60405161ffff90911681526020016102d1565b61032b7f000000000000000000000000000000000000000000000000000000000000000081565b61032b61049d36600461258a565b6109ea565b6103586104b0366004612511565b610a4c565b6103586104c33660046124f4565b610b04565b610358610bd3565b6005546104559062010000900461ffff1681565b610358610c32565b6103586104fa3660046125ef565b610ca3565b610358610d42565b6103586105153660046125ef565b610df7565b60005473ffffffffffffffffffffffffffffffffffffffff1661032b565b61032b610546366004612613565b610eb4565b6102c5610559366004612511565b600091825260026020908152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b610301600081565b6103017fb73ce166ead2f8e9add217713a7989e4edfba9625f71dfd2516204bb67ad344281565b6103016105ce3660046124db565b610ed3565b60075461032b9073ffffffffffffffffffffffffffffffffffffffff1681565b610358610601366004612511565b610eea565b60085461032b9073ffffffffffffffffffffffffffffffffffffffff1681565b61032b610634366004612635565b610f0f565b61032b610647366004612635565b600960209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b61032b610688366004612663565b611068565b6103017fb3fc09be5eb433d99b1ec89fd8435aaf5ffea75c1879e19028aa2414a14b3c8581565b60015473ffffffffffffffffffffffffffffffffffffffff1661032b565b6102c56106e0366004612511565b611163565b6103586106f33660046126f1565b6111f0565b6103586107063660046124f4565b6112a5565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f5a05180f000000000000000000000000000000000000000000000000000000001480610761575061076182611354565b92915050565b6040805173ffffffffffffffffffffffffffffffffffffffff80861660208301528085169282019290925290821660608201526000907f000000000000000000000000000000000000000000000000000000000000000090608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290528051602091820120610886939290917fb3fc09be5eb433d99b1ec89fd8435aaf5ffea75c1879e19028aa2414a14b3c8591017fff00000000000000000000000000000000000000000000000000000000000000815260609390931b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660018401526015830191909152603582015260550190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528051602090910120949350505050565b6108cc6113eb565b6006546000036108db57600080fd5b60006006556040514281527fa2492902a0a1d28dc73e6ab22e473239ef077bb7bc8174dc7dab9fc0818e7135906020015b60405180910390a1565b61091e6113eb565b60075473ffffffffffffffffffffffffffffffffffffffff9081169082160361094657600080fd5b600780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f5e38e259ec1f8a38b98fc65a27e266bb9cc87c76eb8c96c957450d1cff4591ef906020015b60405180910390a150565b6000828152600260205260409020600101546109db8161146e565b6109e58383611478565b505050565b60006109f461149a565b610a38600033878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061150d92505050565b9050610a446001600455565b949350505050565b73ffffffffffffffffffffffffffffffffffffffff81163314610af6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b610b008282611c4c565b5050565b610b0c6113eb565b60085473ffffffffffffffffffffffffffffffffffffffff90811690821603610b3457600080fd5b73ffffffffffffffffffffffffffffffffffffffff8116610b605760055461ffff1615610b6057600080fd5b600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527fa006ea05a14783821b0248e75d2342cd1681b07509e10a0f08487b080c29dea8906020016109b5565b610bdb6113eb565b60065415610be857600080fd5b4260068190557fcd60f5d54996130c21c3f063279b39230bcbafc12f763a1ac1dfaec2e9b61d2990610c1d6201518082612743565b6040805192835260208301919091520161090c565b610c3a6113eb565b600654600003610c4957600080fd5b6201518060065442610c5b9190612756565b1015610c6657600080fd5b6000600655610c73611c6e565b6040514281527fa24203c457ce43a097fa0c491fc9cf5e0a893af87a5e0a9785f29491deb11e239060200161090c565b610cab6113eb565b61c35061ffff82161115610cbe57600080fd5b60055461ffff808316620100009092041603610cd957600080fd5b600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffff166201000061ffff8416908102919091179091556040519081527fddc0c6f0b581e0d51bfe90ff138e4a548f94515c4dbcb12f5e98fdf0f7503983906020016109b5565b600154339073ffffffffffffffffffffffffffffffffffffffff168114610deb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060448201527f6e6577206f776e657200000000000000000000000000000000000000000000006064820152608401610aed565b610df481611c7c565b50565b610dff6113eb565b6103e861ffff82161115610e1257600080fd5b60055461ffff808316911603610e2757600080fd5b61ffff811615610e535760085473ffffffffffffffffffffffffffffffffffffffff16610e5357600080fd5b600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff83169081179091556040519081527f6b5c342391f543846fce47a925e7eba910f7bec232b08633308ca93fdd0fdf0d906020016109b5565b6000828152600360205260408120610ecc9083611cf5565b9392505050565b600081815260036020526040812061076190611d01565b600082815260026020526040902060010154610f058161146e565b6109e58383611c4c565b60007f00000000000000000000000000000000000000000000000000000000000000008383604051602001610f6792919073ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052805160209182012061102b939290917fb3fc09be5eb433d99b1ec89fd8435aaf5ffea75c1879e19028aa2414a14b3c8591017fff00000000000000000000000000000000000000000000000000000000000000815260609390931b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660018401526015830191909152603582015260550190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209392505050565b600061107261149a565b3360009081527ff0b6a659b4f9a079190983c4f36c4a657949efea5d5056930e1cd964655ed049602052604090205460ff1661110a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f43616e60742063726561746520637573746f6d20706f6f6c73000000000000006044820152606401610aed565b61114d8787878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061150d92505050565b90506111596001600455565b9695505050505050565b60008173ffffffffffffffffffffffffffffffffffffffff1661119b60005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff161480610ecc5750600083815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915290205460ff16610ecc565b6111f86113eb565b6001600282900b121561120a57600080fd5b6101f4600282900b131561121d57600080fd5b6005546401000000009004600290810b9082900b0361123b57600080fd5b600580547fffffffffffffffffffffffffffffffffffffffffffffffffff000000ffffffff1664010000000062ffffff841602179055604051600282900b81527f7d7979096f943139ebee59f01c077a0f0766d06c40c86d596f23ed2561547cce906020016109b5565b6112ad6113eb565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915561130f60005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061076157507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610761565b60005473ffffffffffffffffffffffffffffffffffffffff16331461146c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610aed565b565b610df48133611d0b565b6114828282611dc5565b60008281526003602052604090206109e59082611eb9565b600260045403611506576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610aed565b6002600455565b60008273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361154757600080fd5b6000808473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1610611584578486611587565b85855b909250905073ffffffffffffffffffffffffffffffffffffffff82166115ac57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff8916156115f45773ffffffffffffffffffffffffffffffffffffffff89166000908152600a602052604090206115f7565b60095b73ffffffffffffffffffffffffffffffffffffffff8481166000908152602083815260408083208785168452909152902054919250161561163757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff8a1661170c5760075473ffffffffffffffffffffffffffffffffffffffff16156117075760075473ffffffffffffffffffffffffffffffffffffffff16631d0338d961169a8686610f0f565b8b600088888c6040518763ffffffff1660e01b81526004016116c1969594939291906127d7565b6020604051808303816000875af11580156116e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117049190612834565b90505b611789565b33631d0338d961171d8c8787610767565b8b8d88888c6040518763ffffffff1660e01b8152600401611743969594939291906127d7565b6020604051808303816000875af1158015611762573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117869190612834565b90505b6040517ffd82b73a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8281166004830152858116602483015284811660448301528b811660648301527f0000000000000000000000000000000000000000000000000000000000000000169063fd82b73a906084016020604051808303816000875af115801561182f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118539190612834565b945073ffffffffffffffffffffffffffffffffffffffff8a166119295760075473ffffffffffffffffffffffffffffffffffffffff1615611924576007546040517f8d5ef8d100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015287811660248301528c8116604483015290911690638d5ef8d190606401600060405180830381600087803b15801561190b57600080fd5b505af115801561191f573d6000803e3d6000fd5b505050505b6119b9565b6040517f8d5ef8d100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808316600483015280871660248301528b1660448201523390638d5ef8d190606401600060405180830381600087803b1580156119a057600080fd5b505af11580156119b4573d6000803e3d6000fd5b505050505b73ffffffffffffffffffffffffffffffffffffffff808516600081815260208581526040808320888616845282528083208054868c167fffffffffffffffffffffffff000000000000000000000000000000000000000091821681179092558884528285209585529490925290912080549092161790558a16611a8d5760405173ffffffffffffffffffffffffffffffffffffffff868116825280851691908616907f91ccaa7a278130b65168c3a0c8d3bcae84cf5e43704342bd3ec0b59e59c036db9060200160405180910390a3611ae3565b60405173ffffffffffffffffffffffffffffffffffffffff868116825280851691868216918d16907f8a5f030f5fc13b04a1e4ef7c47177e3d76b0e80e1d9be9843db37caa5b7b9b8f9060200160405180910390a45b60085473ffffffffffffffffffffffffffffffffffffffff1615611c3f576008546040517fb8a1d3c600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301528b811660248301528c8116604483015286811660648301528581166084830152600092169063b8a1d3c69060a4016020604051808303816000875af1158015611b94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb89190612834565b6040517fd8544cf300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192509087169063d8544cf390602401600060405180830381600087803b158015611c2557600080fd5b505af1158015611c39573d6000803e3d6000fd5b50505050505b5050505095945050505050565b611c568282611edb565b60008281526003602052604090206109e59082611f96565b611c766113eb565b61146c60005b611ca56000611ca060005473ffffffffffffffffffffffffffffffffffffffff1690565b611c4c565b611cae81611fb8565b60005473ffffffffffffffffffffffffffffffffffffffff1615610df457610df46000611cf060005473ffffffffffffffffffffffffffffffffffffffff1690565b611478565b6000610ecc8383611fe9565b6000610761825490565b600082815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610b0057611d4b81612013565b611d56836020612032565b604051602001611d67929190612851565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a0000000000000000000000000000000000000000000000000000000008252610aed916004016128d2565b600082815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610b0057600082815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055611e5b3390565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610ecc8373ffffffffffffffffffffffffffffffffffffffff8416612275565b600082815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff1615610b0057600082815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610ecc8373ffffffffffffffffffffffffffffffffffffffff84166122c4565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055610df4816123b7565b6000826000018281548110612000576120006128e5565b9060005260206000200154905092915050565b606061076173ffffffffffffffffffffffffffffffffffffffff831660145b60606000612041836002612914565b61204c906002612743565b67ffffffffffffffff8111156120645761206461292b565b6040519080825280601f01601f19166020018201604052801561208e576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106120c5576120c56128e5565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110612128576121286128e5565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000612164846002612914565b61216f906001612743565b90505b600181111561220c577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106121b0576121b06128e5565b1a60f81b8282815181106121c6576121c66128e5565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c936122058161295a565b9050612172565b508315610ecc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610aed565b60008181526001830160205260408120546122bc57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610761565b506000610761565b600081815260018301602052604081205480156123ad5760006122e8600183612756565b85549091506000906122fc90600190612756565b905081811461236157600086600001828154811061231c5761231c6128e5565b906000526020600020015490508087600001848154811061233f5761233f6128e5565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806123725761237261298f565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610761565b6000915050610761565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561243e57600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610ecc57600080fd5b73ffffffffffffffffffffffffffffffffffffffff81168114610df457600080fd5b6000806000606084860312156124a557600080fd5b83356124b08161246e565b925060208401356124c08161246e565b915060408401356124d08161246e565b809150509250925092565b6000602082840312156124ed57600080fd5b5035919050565b60006020828403121561250657600080fd5b8135610ecc8161246e565b6000806040838503121561252457600080fd5b8235915060208301356125368161246e565b809150509250929050565b60008083601f84011261255357600080fd5b50813567ffffffffffffffff81111561256b57600080fd5b60208301915083602082850101111561258357600080fd5b9250929050565b600080600080606085870312156125a057600080fd5b84356125ab8161246e565b935060208501356125bb8161246e565b9250604085013567ffffffffffffffff8111156125d757600080fd5b6125e387828801612541565b95989497509550505050565b60006020828403121561260157600080fd5b813561ffff81168114610ecc57600080fd5b6000806040838503121561262657600080fd5b50508035926020909101359150565b6000806040838503121561264857600080fd5b82356126538161246e565b915060208301356125368161246e565b60008060008060008060a0878903121561267c57600080fd5b86356126878161246e565b955060208701356126978161246e565b945060408701356126a78161246e565b935060608701356126b78161246e565b9250608087013567ffffffffffffffff8111156126d357600080fd5b6126df89828a01612541565b979a9699509497509295939492505050565b60006020828403121561270357600080fd5b81358060020b8114610ecc57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561076157610761612714565b8181038181111561076157610761612714565b60005b8381101561278457818101518382015260200161276c565b50506000910152565b600081518084526127a5816020860160208601612769565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600073ffffffffffffffffffffffffffffffffffffffff808916835280881660208401528087166040840152808616606084015280851660808401525060c060a083015261282860c083018461278d565b98975050505050505050565b60006020828403121561284657600080fd5b8151610ecc8161246e565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612889816017850160208801612769565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516128c6816028840160208801612769565b01602801949350505050565b602081526000610ecc602083018461278d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b808202811582820484141761076157610761612714565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008161296957612969612714565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea164736f6c6343000814000a","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2F38 CODESIZE SUB DUP1 PUSH3 0x2F38 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x4BC JUMP JUMPDEST PUSH3 0x3F CALLER PUSH3 0xEC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x80 MSTORE PUSH1 0x5 DUP1 SLOAD PUSH7 0xFFFFFFFFFF0000 NOT AND PUSH5 0x3C01F40000 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x3C DUP2 MSTORE PUSH32 0x7D7979096F943139EBEE59F01C077A0F0766D06C40C86D596F23ED2561547CCE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 MLOAD PUSH2 0x1F4 DUP2 MSTORE PUSH32 0xDDC0C6F0B581E0D51BFE90FF138E4A548F94515C4DBCB12F5E98FDF0F7503983 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH3 0x53C JUMP JUMPDEST PUSH3 0x10B PUSH1 0x0 PUSH3 0x105 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH3 0x14A JUMP JUMPDEST PUSH3 0x116 DUP2 PUSH3 0x175 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH3 0x147 JUMPI PUSH3 0x147 PUSH1 0x0 PUSH3 0x141 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH3 0x190 JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0x156 DUP3 DUP3 PUSH3 0x1B6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH3 0x170 SWAP1 DUP3 PUSH3 0x23B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH3 0x147 DUP2 PUSH3 0x25B JUMP JUMPDEST PUSH3 0x19C DUP3 DUP3 PUSH3 0x2AB JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH3 0x170 SWAP1 DUP3 PUSH3 0x34F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x237 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x252 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x366 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x237 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x30B CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x252 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x46A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH3 0x45F JUMPI PUSH1 0x0 PUSH3 0x38D PUSH1 0x1 DUP4 PUSH3 0x4EE JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH3 0x3A3 SWAP1 PUSH1 0x1 SWAP1 PUSH3 0x4EE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH3 0x40F JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH3 0x3C7 JUMPI PUSH3 0x3C7 PUSH3 0x510 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH3 0x3ED JUMPI PUSH3 0x3ED PUSH3 0x510 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH3 0x423 JUMPI PUSH3 0x423 PUSH3 0x526 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH3 0x255 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH3 0x255 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH3 0x4B3 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH3 0x255 JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x255 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x4E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH3 0x255 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x29CB PUSH3 0x56D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x46D ADD MSTORE DUP2 DUP2 PUSH2 0x79F ADD MSTORE DUP2 DUP2 PUSH2 0xF13 ADD MSTORE PUSH2 0x17E6 ADD MSTORE PUSH2 0x29CB PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2AD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x77326584 GT PUSH2 0x17B JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0xDC6FD8AB GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xE8AE2B69 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE8AE2B69 EQ PUSH2 0x6D2 JUMPI DUP1 PUSH4 0xF09489AC EQ PUSH2 0x6E5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDC6FD8AB EQ PUSH2 0x68D JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x6B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD8ED2241 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xD8ED2241 EQ PUSH2 0x626 JUMPI DUP1 PUSH4 0xD9A641E1 EQ PUSH2 0x639 JUMPI DUP1 PUSH4 0xDBBF3DB4 EQ PUSH2 0x67A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD547741F EQ PUSH2 0x5F3 JUMPI DUP1 PUSH4 0xD8A06F73 EQ PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0x12F JUMPI DUP1 PUSH4 0xB500A48B GT PUSH2 0x114 JUMPI DUP1 PUSH4 0xB500A48B EQ PUSH2 0x599 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0xD0AD2792 EQ PUSH2 0x5D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8D5A8711 GT PUSH2 0x160 JUMPI DUP1 PUSH4 0x8D5A8711 EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x77326584 EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29BC3446 GT PUSH2 0x229 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x469388C4 GT PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x469388C4 EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0x5A6C72D0 EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0x3EA7FBDB EQ PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F8A39DD GT PUSH2 0x20E JUMPI DUP1 PUSH4 0x2F8A39DD EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0x3119049A EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x321935C6 EQ PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29BC3446 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x238A1D74 GT PUSH2 0x280 JUMPI DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x265 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x25B355D6 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x2939DD97 EQ PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x238A1D74 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0x23DA36CC EQ PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x7810754 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x84BFFF9 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x1BA89DF4 EQ PUSH2 0x318 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C5 PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x242C JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x301 PUSH32 0xC9CF812513D9983585EB40FCFE6FD49FBB6A45815663EC33B30A6C6C7DE3683B DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D1 JUMP JUMPDEST PUSH2 0x301 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x32B PUSH2 0x326 CALLDATASIZE PUSH1 0x4 PUSH2 0x2490 JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D1 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x8C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32B PUSH2 0x368 CALLDATASIZE PUSH1 0x4 PUSH2 0x2490 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP3 MSTORE SWAP3 DUP5 MSTORE DUP3 DUP5 KECCAK256 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x301 PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH5 0x100000000 DUP5 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x10000 SWAP1 SWAP4 DIV SWAP1 SWAP3 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x2D1 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x407 CALLDATASIZE PUSH1 0x4 PUSH2 0x24F4 JUMP JUMPDEST PUSH2 0x916 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x421 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x2 SWAP2 SWAP1 SWAP2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D1 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x442 CALLDATASIZE PUSH1 0x4 PUSH2 0x2511 JUMP JUMPDEST PUSH2 0x9C0 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x455 SWAP1 PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D1 JUMP JUMPDEST PUSH2 0x32B PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x32B PUSH2 0x49D CALLDATASIZE PUSH1 0x4 PUSH2 0x258A JUMP JUMPDEST PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x358 PUSH2 0x4B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2511 JUMP JUMPDEST PUSH2 0xA4C JUMP JUMPDEST PUSH2 0x358 PUSH2 0x4C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x24F4 JUMP JUMPDEST PUSH2 0xB04 JUMP JUMPDEST PUSH2 0x358 PUSH2 0xBD3 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x455 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x358 PUSH2 0xC32 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x4FA CALLDATASIZE PUSH1 0x4 PUSH2 0x25EF JUMP JUMPDEST PUSH2 0xCA3 JUMP JUMPDEST PUSH2 0x358 PUSH2 0xD42 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x515 CALLDATASIZE PUSH1 0x4 PUSH2 0x25EF JUMP JUMPDEST PUSH2 0xDF7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x32B JUMP JUMPDEST PUSH2 0x32B PUSH2 0x546 CALLDATASIZE PUSH1 0x4 PUSH2 0x2613 JUMP JUMPDEST PUSH2 0xEB4 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x559 CALLDATASIZE PUSH1 0x4 PUSH2 0x2511 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x301 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x301 PUSH32 0xB73CE166EAD2F8E9ADD217713A7989E4EDFBA9625F71DFD2516204BB67AD3442 DUP2 JUMP JUMPDEST PUSH2 0x301 PUSH2 0x5CE CALLDATASIZE PUSH1 0x4 PUSH2 0x24DB JUMP JUMPDEST PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x32B SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x601 CALLDATASIZE PUSH1 0x4 PUSH2 0x2511 JUMP JUMPDEST PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x32B SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x32B PUSH2 0x634 CALLDATASIZE PUSH1 0x4 PUSH2 0x2635 JUMP JUMPDEST PUSH2 0xF0F JUMP JUMPDEST PUSH2 0x32B PUSH2 0x647 CALLDATASIZE PUSH1 0x4 PUSH2 0x2635 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x32B PUSH2 0x688 CALLDATASIZE PUSH1 0x4 PUSH2 0x2663 JUMP JUMPDEST PUSH2 0x1068 JUMP JUMPDEST PUSH2 0x301 PUSH32 0xB3FC09BE5EB433D99B1EC89FD8435AAF5FFEA75C1879E19028AA2414A14B3C85 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x32B JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x6E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2511 JUMP JUMPDEST PUSH2 0x1163 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x6F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x26F1 JUMP JUMPDEST PUSH2 0x11F0 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x706 CALLDATASIZE PUSH1 0x4 PUSH2 0x24F4 JUMP JUMPDEST PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x761 JUMPI POP PUSH2 0x761 DUP3 PUSH2 0x1354 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 DUP6 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH2 0x886 SWAP4 SWAP3 SWAP1 SWAP2 PUSH32 0xB3FC09BE5EB433D99B1EC89FD8435AAF5FFEA75C1879E19028AA2414A14B3C85 SWAP2 ADD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH1 0x1 DUP5 ADD MSTORE PUSH1 0x15 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x35 DUP3 ADD MSTORE PUSH1 0x55 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x8CC PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SUB PUSH2 0x8DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0xA2492902A0A1D28DC73E6AB22E473239EF077BB7BC8174DC7DAB9FC0818E7135 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x91E PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP3 AND SUB PUSH2 0x946 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x5E38E259EC1F8A38B98FC65A27E266BB9CC87C76EB8C96C957450D1CFF4591EF SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x9DB DUP2 PUSH2 0x146E JUMP JUMPDEST PUSH2 0x9E5 DUP4 DUP4 PUSH2 0x1478 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F4 PUSH2 0x149A JUMP JUMPDEST PUSH2 0xA38 PUSH1 0x0 CALLER DUP8 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x150D SWAP3 POP POP POP JUMP JUMPDEST SWAP1 POP PUSH2 0xA44 PUSH1 0x1 PUSH1 0x4 SSTORE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND CALLER EQ PUSH2 0xAF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB00 DUP3 DUP3 PUSH2 0x1C4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB0C PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP3 AND SUB PUSH2 0xB34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xB60 JUMPI PUSH1 0x5 SLOAD PUSH2 0xFFFF AND ISZERO PUSH2 0xB60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xA006EA05A14783821B0248E75D2342CD1681B07509E10A0F08487B080C29DEA8 SWAP1 PUSH1 0x20 ADD PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0xBDB PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x6 SLOAD ISZERO PUSH2 0xBE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH32 0xCD60F5D54996130C21C3F063279B39230BCBAFC12F763A1AC1DFAEC2E9B61D29 SWAP1 PUSH2 0xC1D PUSH3 0x15180 DUP3 PUSH2 0x2743 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x90C JUMP JUMPDEST PUSH2 0xC3A PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SUB PUSH2 0xC49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x15180 PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0xC5B SWAP2 SWAP1 PUSH2 0x2756 JUMP JUMPDEST LT ISZERO PUSH2 0xC66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 SSTORE PUSH2 0xC73 PUSH2 0x1C6E JUMP JUMPDEST PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0xA24203C457CE43A097FA0C491FC9CF5E0A893AF87A5E0A9785F29491DEB11E23 SWAP1 PUSH1 0x20 ADD PUSH2 0x90C JUMP JUMPDEST PUSH2 0xCAB PUSH2 0x13EB JUMP JUMPDEST PUSH2 0xC350 PUSH2 0xFFFF DUP3 AND GT ISZERO PUSH2 0xCBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xFFFF DUP1 DUP4 AND PUSH3 0x10000 SWAP1 SWAP3 DIV AND SUB PUSH2 0xCD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFF AND PUSH3 0x10000 PUSH2 0xFFFF DUP5 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDC0C6F0B581E0D51BFE90FF138E4A548F94515C4DBCB12F5E98FDF0F7503983 SWAP1 PUSH1 0x20 ADD PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLER SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 EQ PUSH2 0xDEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6577206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAED JUMP JUMPDEST PUSH2 0xDF4 DUP2 PUSH2 0x1C7C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xDFF PUSH2 0x13EB JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xFFFF DUP3 AND GT ISZERO PUSH2 0xE12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xFFFF DUP1 DUP4 AND SWAP2 AND SUB PUSH2 0xE27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFFFF DUP2 AND ISZERO PUSH2 0xE53 JUMPI PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 AND PUSH2 0xFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x6B5C342391F543846FCE47A925E7EBA910F7BEC232B08633308CA93FDD0FDF0D SWAP1 PUSH1 0x20 ADD PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xECC SWAP1 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x761 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xF05 DUP2 PUSH2 0x146E JUMP JUMPDEST PUSH2 0x9E5 DUP4 DUP4 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF67 SWAP3 SWAP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH2 0x102B SWAP4 SWAP3 SWAP1 SWAP2 PUSH32 0xB3FC09BE5EB433D99B1EC89FD8435AAF5FFEA75C1879E19028AA2414A14B3C85 SWAP2 ADD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH1 0x1 DUP5 ADD MSTORE PUSH1 0x15 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x35 DUP3 ADD MSTORE PUSH1 0x55 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1072 PUSH2 0x149A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xF0B6A659B4F9A079190983C4F36C4A657949EFEA5D5056930E1CD964655ED049 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x110A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E60742063726561746520637573746F6D20706F6F6C7300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAED JUMP JUMPDEST PUSH2 0x114D DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x150D SWAP3 POP POP POP JUMP JUMPDEST SWAP1 POP PUSH2 0x1159 PUSH1 0x1 PUSH1 0x4 SSTORE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x119B PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xECC JUMPI POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xECC JUMP JUMPDEST PUSH2 0x11F8 PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP3 SWAP1 SIGNEXTEND SLT ISZERO PUSH2 0x120A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F4 PUSH1 0x2 DUP3 SWAP1 SIGNEXTEND SGT ISZERO PUSH2 0x121D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SUB PUSH2 0x123B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000FFFFFFFF AND PUSH5 0x100000000 PUSH3 0xFFFFFF DUP5 AND MUL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x2 DUP3 SWAP1 SIGNEXTEND DUP2 MSTORE PUSH32 0x7D7979096F943139EBEE59F01C077A0F0766D06C40C86D596F23ED2561547CCE SWAP1 PUSH1 0x20 ADD PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x12AD PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x130F PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x761 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ PUSH2 0x761 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x146C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAED JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDF4 DUP2 CALLER PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0x1482 DUP3 DUP3 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x9E5 SWAP1 DUP3 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 SLOAD SUB PUSH2 0x1506 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAED JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x1584 JUMPI DUP5 DUP7 PUSH2 0x1587 JUMP JUMPDEST DUP6 DUP6 JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x15AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND ISZERO PUSH2 0x15F4 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x15F7 JUMP JUMPDEST PUSH1 0x9 JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP3 POP AND ISZERO PUSH2 0x1637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH2 0x170C JUMPI PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x1707 JUMPI PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D0338D9 PUSH2 0x169A DUP7 DUP7 PUSH2 0xF0F JUMP JUMPDEST DUP12 PUSH1 0x0 DUP9 DUP9 DUP13 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C1 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1704 SWAP2 SWAP1 PUSH2 0x2834 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1789 JUMP JUMPDEST CALLER PUSH4 0x1D0338D9 PUSH2 0x171D DUP13 DUP8 DUP8 PUSH2 0x767 JUMP JUMPDEST DUP12 DUP14 DUP9 DUP9 DUP13 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1743 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1762 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1786 SWAP2 SWAP1 PUSH2 0x2834 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFD82B73A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE DUP12 DUP2 AND PUSH1 0x64 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xFD82B73A SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x182F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1853 SWAP2 SWAP1 PUSH2 0x2834 JUMP JUMPDEST SWAP5 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH2 0x1929 JUMPI PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x1924 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH32 0x8D5EF8D100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP13 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x8D5EF8D1 SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x190B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x191F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8D5EF8D100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP1 DUP8 AND PUSH1 0x24 DUP4 ADD MSTORE DUP12 AND PUSH1 0x44 DUP3 ADD MSTORE CALLER SWAP1 PUSH4 0x8D5EF8D1 SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP7 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 DUP13 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE DUP9 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 DUP6 MSTORE SWAP5 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE DUP11 AND PUSH2 0x1A8D JUMPI PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND DUP3 MSTORE DUP1 DUP6 AND SWAP2 SWAP1 DUP7 AND SWAP1 PUSH32 0x91CCAA7A278130B65168C3A0C8D3BCAE84CF5E43704342BD3EC0B59E59C036DB SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND DUP3 MSTORE DUP1 DUP6 AND SWAP2 DUP7 DUP3 AND SWAP2 DUP14 AND SWAP1 PUSH32 0x8A5F030F5FC13B04A1E4EF7C47177E3D76B0E80E1D9BE9843DB37CAA5B7B9B8F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x1C3F JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH32 0xB8A1D3C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP13 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x64 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xB8A1D3C6 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BB8 SWAP2 SWAP1 PUSH2 0x2834 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD8544CF300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP8 AND SWAP1 PUSH4 0xD8544CF3 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1C56 DUP3 DUP3 PUSH2 0x1EDB JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x9E5 SWAP1 DUP3 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0x1C76 PUSH2 0x13EB JUMP JUMPDEST PUSH2 0x146C PUSH1 0x0 JUMPDEST PUSH2 0x1CA5 PUSH1 0x0 PUSH2 0x1CA0 PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x1CAE DUP2 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0xDF4 JUMPI PUSH2 0xDF4 PUSH1 0x0 PUSH2 0x1CF0 PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECC DUP4 DUP4 PUSH2 0x1FE9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x761 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB00 JUMPI PUSH2 0x1D4B DUP2 PUSH2 0x2013 JUMP JUMPDEST PUSH2 0x1D56 DUP4 PUSH1 0x20 PUSH2 0x2032 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D67 SWAP3 SWAP2 SWAP1 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH2 0xAED SWAP2 PUSH1 0x4 ADD PUSH2 0x28D2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB00 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1E5B CALLER SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECC DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x2275 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB00 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECC DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE PUSH2 0xDF4 DUP2 PUSH2 0x23B7 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2000 JUMPI PUSH2 0x2000 PUSH2 0x28E5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x761 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2041 DUP4 PUSH1 0x2 PUSH2 0x2914 JUMP JUMPDEST PUSH2 0x204C SWAP1 PUSH1 0x2 PUSH2 0x2743 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2064 JUMPI PUSH2 0x2064 PUSH2 0x292B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x208E JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x20C5 JUMPI PUSH2 0x20C5 PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2128 JUMPI PUSH2 0x2128 PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x2164 DUP5 PUSH1 0x2 PUSH2 0x2914 JUMP JUMPDEST PUSH2 0x216F SWAP1 PUSH1 0x1 PUSH2 0x2743 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x220C JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x21B0 JUMPI PUSH2 0x21B0 PUSH2 0x28E5 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x21C6 JUMPI PUSH2 0x21C6 PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x2205 DUP2 PUSH2 0x295A JUMP JUMPDEST SWAP1 POP PUSH2 0x2172 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xECC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAED JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x22BC JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x761 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x23AD JUMPI PUSH1 0x0 PUSH2 0x22E8 PUSH1 0x1 DUP4 PUSH2 0x2756 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x22FC SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2756 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x2361 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x231C JUMPI PUSH2 0x231C PUSH2 0x28E5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x233F JUMPI PUSH2 0x233F PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x2372 JUMPI PUSH2 0x2372 PUSH2 0x298F JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x761 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x761 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x243E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0xECC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xDF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x24B0 DUP2 PUSH2 0x246E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x24C0 DUP2 PUSH2 0x246E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x24D0 DUP2 PUSH2 0x246E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xECC DUP2 PUSH2 0x246E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2536 DUP2 PUSH2 0x246E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x256B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x25A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x25AB DUP2 PUSH2 0x246E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x25BB DUP2 PUSH2 0x246E JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25E3 DUP8 DUP3 DUP9 ADD PUSH2 0x2541 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0xECC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2653 DUP2 PUSH2 0x246E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2536 DUP2 PUSH2 0x246E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x267C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2687 DUP2 PUSH2 0x246E JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x2697 DUP2 PUSH2 0x246E JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x26A7 DUP2 PUSH2 0x246E JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x26B7 DUP2 PUSH2 0x246E JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26DF DUP10 DUP3 DUP11 ADD PUSH2 0x2541 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 PUSH1 0x2 SIGNEXTEND DUP2 EQ PUSH2 0xECC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x761 JUMPI PUSH2 0x761 PUSH2 0x2714 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x761 JUMPI PUSH2 0x761 PUSH2 0x2714 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2784 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x276C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x27A5 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2769 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP10 AND DUP4 MSTORE DUP1 DUP9 AND PUSH1 0x20 DUP5 ADD MSTORE DUP1 DUP8 AND PUSH1 0x40 DUP5 ADD MSTORE DUP1 DUP7 AND PUSH1 0x60 DUP5 ADD MSTORE DUP1 DUP6 AND PUSH1 0x80 DUP5 ADD MSTORE POP PUSH1 0xC0 PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x2828 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x278D JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xECC DUP2 PUSH2 0x246E JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x2889 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2769 JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x28C6 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2769 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xECC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x278D JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x761 JUMPI PUSH2 0x761 PUSH2 0x2714 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2969 JUMPI PUSH2 0x2969 PUSH2 0x2714 JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"690:9018:15:-:0;;;2314:339;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:4;719:10:7;936:18:4;:32::i;:::-;1716:1:6;1821:7;:22;-1:-1:-1;;;;;2363:27:15;;2355:36;;;;;;-1:-1:-1;;;;;2397:28:15;;;;2431:18;:56;;-1:-1:-1;;2493:39:15;;;;;2544:55;;815:2:28;451:40:31;;2544:55:15;;439:2:31;424:18;2544:55:15;;;;;;;2610:38;;592:6:28;646:38:31;;2610::15;;634:2:31;619:18;2610:38:15;;;;;;;2314:339;690:9018;;9465:241;9535:40;2198:4:0;9567:7:15;2764;1273:6:4;-1:-1:-1;;;;;1273:6:4;;2691:113:15;9567:7;9535:11;:40::i;:::-;9581:34;9606:8;9581:24;:34::i;:::-;9644:1;1273:6:4;-1:-1:-1;;;;;1273:6:4;9625:21:15;9621:81;;9656:39;2198:4:0;9687:7:15;2764;1273:6:4;-1:-1:-1;;;;;1273:6:4;;2691:113:15;9687:7;9656:10;:39::i;:::-;9465:241;:::o;2233:171:1:-;2321:32;2339:4;2345:7;2321:17;:32::i;:::-;2363:18;;;;:12;:18;;;;;:34;;2389:7;2363:25;:34::i;:::-;;2233:171;;:::o;1501:153:5:-;1590:13;1583:20;;-1:-1:-1;;;;;;1583:20:5;;;1613:34;1638:8;1613:24;:34::i;1978:166:1:-;2065:31;2082:4;2088:7;2065:16;:31::i;:::-;2106:18;;;;:12;:18;;;;;:31;;2129:7;2106:22;:31::i;7991:234:0:-;3107:4;3130:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3130:29:0;;;;;;;;;;;;8070:149;;;8144:5;8112:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8112:29:0;;;;;;;;;;:37;;-1:-1:-1;;8112:37:0;;;8168:40;719:10:7;;8112:12:0;;8168:40;;8144:5;8168:40;8070:149;7991:234;;:::o;8623:156:13:-;8696:4;8719:53;8727:3;-1:-1:-1;;;;;8747:23:13;;8719:7;:53::i;:::-;8712:60;;8623:156;;;;;:::o;2426:187:4:-;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:4;;;-1:-1:-1;;;;;;2534:17:4;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;7587:233:0:-;3107:4;3130:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3130:29:0;;;;;;;;;;;;7665:149;;7708:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7708:29:0;;;;;;;;;:36;;-1:-1:-1;;7708:36:0;7740:4;7708:36;;;7790:12;719:10:7;;640:96;7790:12:0;-1:-1:-1;;;;;7763:40:0;7781:7;-1:-1:-1;;;;;7763:40:0;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;8305:150:13:-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:13;;8398:4;:50::i;2786:1388::-;2852:4;2989:19;;;:12;;;:19;;;;;;3023:15;;3019:1149;;3392:21;3416:14;3429:1;3416:10;:14;:::i;:::-;3464:18;;3392:38;;-1:-1:-1;3444:17:13;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3805:23;;;:12;;;:23;;;;;:36;;;3501:398;3977:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;;;2214:404;2277:4;4351:19;;;:12;;;:19;;;;;;2293:319;;-1:-1:-1;2335:23:13;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:13;2589:12;;14:290:31;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:31;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:31:o;695:225::-;762:9;;;783:11;;;780:134;;;836:10;831:3;827:20;824:1;817:31;871:4;868:1;861:15;899:4;896:1;889:15;925:127;986:10;981:3;977:20;974:1;967:31;1017:4;1014:1;1007:15;1041:4;1038:1;1031:15;1057:127;1118:10;1113:3;1109:20;1106:1;1099:31;1149:4;1146:1;1139:15;1173:4;1170:1;1163:15;1057:127;690:9018:15;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@CUSTOM_POOL_DEPLOYER_3214":{"entryPoint":null,"id":3214,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_27":{"entryPoint":null,"id":27,"parameterSlots":0,"returnSlots":0},"@POOLS_ADMINISTRATOR_ROLE_3207":{"entryPoint":null,"id":3207,"parameterSlots":0,"returnSlots":0},"@POOL_INIT_CODE_HASH_3268":{"entryPoint":null,"id":3268,"parameterSlots":0,"returnSlots":0},"@_add_2110":{"entryPoint":8821,"id":2110,"parameterSlots":2,"returnSlots":1},"@_at_2244":{"entryPoint":8169,"id":2244,"parameterSlots":2,"returnSlots":1},"@_checkOwner_593":{"entryPoint":5099,"id":593,"parameterSlots":0,"returnSlots":0},"@_checkRole_131":{"entryPoint":7435,"id":131,"parameterSlots":2,"returnSlots":0},"@_checkRole_92":{"entryPoint":5230,"id":92,"parameterSlots":1,"returnSlots":0},"@_contains_2213":{"entryPoint":null,"id":2213,"parameterSlots":2,"returnSlots":1},"@_createPool_3762":{"entryPoint":5389,"id":3762,"parameterSlots":5,"returnSlots":1},"@_grantRole_283":{"entryPoint":7621,"id":283,"parameterSlots":2,"returnSlots":0},"@_grantRole_415":{"entryPoint":5240,"id":415,"parameterSlots":2,"returnSlots":0},"@_length_2227":{"entryPoint":null,"id":2227,"parameterSlots":1,"returnSlots":1},"@_msgSender_811":{"entryPoint":null,"id":811,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_787":{"entryPoint":null,"id":787,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_779":{"entryPoint":5274,"id":779,"parameterSlots":0,"returnSlots":0},"@_remove_2194":{"entryPoint":8900,"id":2194,"parameterSlots":2,"returnSlots":1},"@_revokeRole_314":{"entryPoint":7899,"id":314,"parameterSlots":2,"returnSlots":0},"@_revokeRole_439":{"entryPoint":7244,"id":439,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_4070":{"entryPoint":7292,"id":4070,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_650":{"entryPoint":9143,"id":650,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_711":{"entryPoint":8120,"id":711,"parameterSlots":1,"returnSlots":0},"@acceptOwnership_733":{"entryPoint":3394,"id":733,"parameterSlots":0,"returnSlots":0},"@add_2410":{"entryPoint":7865,"id":2410,"parameterSlots":2,"returnSlots":1},"@at_2506":{"entryPoint":7413,"id":2506,"parameterSlots":2,"returnSlots":1},"@computeCustomPoolAddress_3443":{"entryPoint":1895,"id":3443,"parameterSlots":3,"returnSlots":1},"@computePoolAddress_3401":{"entryPoint":3855,"id":3401,"parameterSlots":2,"returnSlots":1},"@createCustomPool_3508":{"entryPoint":4200,"id":3508,"parameterSlots":6,"returnSlots":1},"@createPool_3471":{"entryPoint":2538,"id":3471,"parameterSlots":4,"returnSlots":1},"@customPoolByPair_3264":{"entryPoint":null,"id":3264,"parameterSlots":0,"returnSlots":0},"@defaultCommunityFee_3222":{"entryPoint":null,"id":3222,"parameterSlots":0,"returnSlots":0},"@defaultConfigurationForPool_3362":{"entryPoint":null,"id":3362,"parameterSlots":0,"returnSlots":3},"@defaultFee_3226":{"entryPoint":null,"id":3226,"parameterSlots":0,"returnSlots":0},"@defaultPluginFactory_3242":{"entryPoint":null,"id":3242,"parameterSlots":0,"returnSlots":0},"@defaultTickspacing_3230":{"entryPoint":null,"id":3230,"parameterSlots":0,"returnSlots":0},"@getRoleAdmin_146":{"entryPoint":null,"id":146,"parameterSlots":1,"returnSlots":1},"@getRoleMemberCount_391":{"entryPoint":3795,"id":391,"parameterSlots":1,"returnSlots":1},"@getRoleMember_375":{"entryPoint":3764,"id":375,"parameterSlots":2,"returnSlots":1},"@grantRole_166":{"entryPoint":2496,"id":166,"parameterSlots":2,"returnSlots":0},"@hasRoleOrOwner_3345":{"entryPoint":4451,"id":3345,"parameterSlots":2,"returnSlots":1},"@hasRole_79":{"entryPoint":null,"id":79,"parameterSlots":2,"returnSlots":1},"@length_2479":{"entryPoint":7425,"id":2479,"parameterSlots":1,"returnSlots":1},"@owner_3321":{"entryPoint":null,"id":3321,"parameterSlots":0,"returnSlots":1},"@owner_579":{"entryPoint":null,"id":579,"parameterSlots":0,"returnSlots":1},"@pendingOwner_674":{"entryPoint":null,"id":674,"parameterSlots":0,"returnSlots":1},"@poolByPair_3254":{"entryPoint":null,"id":3254,"parameterSlots":0,"returnSlots":0},"@poolDeployer_3218":{"entryPoint":null,"id":3218,"parameterSlots":0,"returnSlots":0},"@remove_2437":{"entryPoint":8086,"id":2437,"parameterSlots":2,"returnSlots":1},"@renounceOwnershipStartTimestamp_3234":{"entryPoint":null,"id":3234,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_4035":{"entryPoint":3122,"id":4035,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_607":{"entryPoint":7278,"id":607,"parameterSlots":0,"returnSlots":0},"@renounceRole_209":{"entryPoint":2636,"id":209,"parameterSlots":2,"returnSlots":0},"@revokeRole_186":{"entryPoint":3818,"id":186,"parameterSlots":2,"returnSlots":0},"@setDefaultCommunityFee_3809":{"entryPoint":3575,"id":3809,"parameterSlots":1,"returnSlots":0},"@setDefaultFee_3840":{"entryPoint":3235,"id":3840,"parameterSlots":1,"returnSlots":0},"@setDefaultPluginFactory_3907":{"entryPoint":2326,"id":3907,"parameterSlots":1,"returnSlots":0},"@setDefaultTickspacing_3878":{"entryPoint":4592,"id":3878,"parameterSlots":1,"returnSlots":0},"@setVaultFactory_3949":{"entryPoint":2820,"id":3949,"parameterSlots":1,"returnSlots":0},"@startRenounceOwnership_3975":{"entryPoint":3027,"id":3975,"parameterSlots":0,"returnSlots":0},"@stopRenounceOwnership_3998":{"entryPoint":2244,"id":3998,"parameterSlots":0,"returnSlots":0},"@supportsInterface_1073":{"entryPoint":null,"id":1073,"parameterSlots":1,"returnSlots":1},"@supportsInterface_356":{"entryPoint":1803,"id":356,"parameterSlots":1,"returnSlots":1},"@supportsInterface_60":{"entryPoint":4948,"id":60,"parameterSlots":1,"returnSlots":1},"@toHexString_1004":{"entryPoint":8242,"id":1004,"parameterSlots":2,"returnSlots":1},"@toHexString_1024":{"entryPoint":8211,"id":1024,"parameterSlots":1,"returnSlots":1},"@transferOwnership_694":{"entryPoint":4773,"id":694,"parameterSlots":1,"returnSlots":0},"@vaultFactory_3246":{"entryPoint":null,"id":3246,"parameterSlots":0,"returnSlots":0},"abi_decode_bytes_calldata":{"entryPoint":9537,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":9460,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":10292,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9781,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_address":{"entryPoint":9360,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_addresst_addresst_bytes_calldata_ptr":{"entryPoint":9827,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_addresst_bytes_calldata_ptr":{"entryPoint":9610,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes32":{"entryPoint":9435,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":9489,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":9747,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":9260,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_int24":{"entryPoint":9969,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint16":{"entryPoint":9711,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes":{"entryPoint":10125,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10321,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_address_t_address_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_address_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":10199,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IAlgebraPluginFactory_$4422__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IAlgebraVaultFactory_$5184__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int24__to_t_int24__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10450,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4923848de4258787551fdf161f1836f7adecfca5e0948f14f6ef0465d225420b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16_t_int24_t_uint16__to_t_uint16_t_int24_t_uint16__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":10051,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":10516,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":10070,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":10089,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":10586,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":10004,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":10639,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":10469,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":10539,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":9326,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15971:31","statements":[{"nodeType":"YulBlock","src":"6:3:31","statements":[]},{"body":{"nodeType":"YulBlock","src":"83:263:31","statements":[{"body":{"nodeType":"YulBlock","src":"129:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"138:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"141:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:31"},"nodeType":"YulFunctionCall","src":"131:12:31"},"nodeType":"YulExpressionStatement","src":"131:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"104:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"113:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:31"},"nodeType":"YulFunctionCall","src":"100:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"125:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"96:3:31"},"nodeType":"YulFunctionCall","src":"96:32:31"},"nodeType":"YulIf","src":"93:52:31"},{"nodeType":"YulVariableDeclaration","src":"154:36:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"180:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"167:12:31"},"nodeType":"YulFunctionCall","src":"167:23:31"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"158:5:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"300:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"309:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"312:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"302:6:31"},"nodeType":"YulFunctionCall","src":"302:12:31"},"nodeType":"YulExpressionStatement","src":"302:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"212:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"230:66:31","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"219:3:31"},"nodeType":"YulFunctionCall","src":"219:78:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"209:2:31"},"nodeType":"YulFunctionCall","src":"209:89:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"202:6:31"},"nodeType":"YulFunctionCall","src":"202:97:31"},"nodeType":"YulIf","src":"199:117:31"},{"nodeType":"YulAssignment","src":"325:15:31","value":{"name":"value","nodeType":"YulIdentifier","src":"335:5:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"325:6:31"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"60:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"72:6:31","type":""}],"src":"14:332:31"},{"body":{"nodeType":"YulBlock","src":"446:92:31","statements":[{"nodeType":"YulAssignment","src":"456:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"468:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"479:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"464:3:31"},"nodeType":"YulFunctionCall","src":"464:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"456:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"498:9:31"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"523:6:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"516:6:31"},"nodeType":"YulFunctionCall","src":"516:14:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"509:6:31"},"nodeType":"YulFunctionCall","src":"509:22:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"491:6:31"},"nodeType":"YulFunctionCall","src":"491:41:31"},"nodeType":"YulExpressionStatement","src":"491:41:31"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"415:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"426:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"437:4:31","type":""}],"src":"351:187:31"},{"body":{"nodeType":"YulBlock","src":"644:76:31","statements":[{"nodeType":"YulAssignment","src":"654:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"666:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"677:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"662:3:31"},"nodeType":"YulFunctionCall","src":"662:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"654:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"696:9:31"},{"name":"value0","nodeType":"YulIdentifier","src":"707:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"689:6:31"},"nodeType":"YulFunctionCall","src":"689:25:31"},"nodeType":"YulExpressionStatement","src":"689:25:31"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"613:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"624:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"635:4:31","type":""}],"src":"543:177:31"},{"body":{"nodeType":"YulBlock","src":"826:76:31","statements":[{"nodeType":"YulAssignment","src":"836:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"848:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"859:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"844:3:31"},"nodeType":"YulFunctionCall","src":"844:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"836:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"878:9:31"},{"name":"value0","nodeType":"YulIdentifier","src":"889:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"871:6:31"},"nodeType":"YulFunctionCall","src":"871:25:31"},"nodeType":"YulExpressionStatement","src":"871:25:31"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"795:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"806:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"817:4:31","type":""}],"src":"725:177:31"},{"body":{"nodeType":"YulBlock","src":"952:109:31","statements":[{"body":{"nodeType":"YulBlock","src":"1039:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1048:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1051:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1041:6:31"},"nodeType":"YulFunctionCall","src":"1041:12:31"},"nodeType":"YulExpressionStatement","src":"1041:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"975:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"986:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"993:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"982:3:31"},"nodeType":"YulFunctionCall","src":"982:54:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"972:2:31"},"nodeType":"YulFunctionCall","src":"972:65:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"965:6:31"},"nodeType":"YulFunctionCall","src":"965:73:31"},"nodeType":"YulIf","src":"962:93:31"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"941:5:31","type":""}],"src":"907:154:31"},{"body":{"nodeType":"YulBlock","src":"1170:425:31","statements":[{"body":{"nodeType":"YulBlock","src":"1216:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1225:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1228:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1218:6:31"},"nodeType":"YulFunctionCall","src":"1218:12:31"},"nodeType":"YulExpressionStatement","src":"1218:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1191:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1187:3:31"},"nodeType":"YulFunctionCall","src":"1187:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"1212:2:31","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1183:3:31"},"nodeType":"YulFunctionCall","src":"1183:32:31"},"nodeType":"YulIf","src":"1180:52:31"},{"nodeType":"YulVariableDeclaration","src":"1241:36:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1267:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1254:12:31"},"nodeType":"YulFunctionCall","src":"1254:23:31"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1245:5:31","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1311:5:31"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1286:24:31"},"nodeType":"YulFunctionCall","src":"1286:31:31"},"nodeType":"YulExpressionStatement","src":"1286:31:31"},{"nodeType":"YulAssignment","src":"1326:15:31","value":{"name":"value","nodeType":"YulIdentifier","src":"1336:5:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1326:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"1350:47:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1382:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1393:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1378:3:31"},"nodeType":"YulFunctionCall","src":"1378:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1365:12:31"},"nodeType":"YulFunctionCall","src":"1365:32:31"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1354:7:31","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1431:7:31"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1406:24:31"},"nodeType":"YulFunctionCall","src":"1406:33:31"},"nodeType":"YulExpressionStatement","src":"1406:33:31"},{"nodeType":"YulAssignment","src":"1448:17:31","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1458:7:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1448:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"1474:47:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1506:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1517:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1502:3:31"},"nodeType":"YulFunctionCall","src":"1502:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1489:12:31"},"nodeType":"YulFunctionCall","src":"1489:32:31"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"1478:7:31","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"1555:7:31"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1530:24:31"},"nodeType":"YulFunctionCall","src":"1530:33:31"},"nodeType":"YulExpressionStatement","src":"1530:33:31"},{"nodeType":"YulAssignment","src":"1572:17:31","value":{"name":"value_2","nodeType":"YulIdentifier","src":"1582:7:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1572:6:31"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1131:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1143:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1151:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1159:6:31","type":""}],"src":"1066:529:31"},{"body":{"nodeType":"YulBlock","src":"1701:125:31","statements":[{"nodeType":"YulAssignment","src":"1711:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1723:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"1734:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1719:3:31"},"nodeType":"YulFunctionCall","src":"1719:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1711:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1753:9:31"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1768:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"1776:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1764:3:31"},"nodeType":"YulFunctionCall","src":"1764:55:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1746:6:31"},"nodeType":"YulFunctionCall","src":"1746:74:31"},"nodeType":"YulExpressionStatement","src":"1746:74:31"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1670:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1681:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1692:4:31","type":""}],"src":"1600:226:31"},{"body":{"nodeType":"YulBlock","src":"1901:110:31","statements":[{"body":{"nodeType":"YulBlock","src":"1947:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1956:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1959:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1949:6:31"},"nodeType":"YulFunctionCall","src":"1949:12:31"},"nodeType":"YulExpressionStatement","src":"1949:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1922:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"1931:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1918:3:31"},"nodeType":"YulFunctionCall","src":"1918:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"1943:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1914:3:31"},"nodeType":"YulFunctionCall","src":"1914:32:31"},"nodeType":"YulIf","src":"1911:52:31"},{"nodeType":"YulAssignment","src":"1972:33:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1995:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1982:12:31"},"nodeType":"YulFunctionCall","src":"1982:23:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1972:6:31"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1867:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1878:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1890:6:31","type":""}],"src":"1831:180:31"},{"body":{"nodeType":"YulBlock","src":"2165:220:31","statements":[{"nodeType":"YulAssignment","src":"2175:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2187:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2198:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:31"},"nodeType":"YulFunctionCall","src":"2183:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2175:4:31"}]},{"nodeType":"YulVariableDeclaration","src":"2210:16:31","value":{"kind":"number","nodeType":"YulLiteral","src":"2220:6:31","type":"","value":"0xffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2214:2:31","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2242:9:31"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2257:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"2265:2:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2253:3:31"},"nodeType":"YulFunctionCall","src":"2253:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2235:6:31"},"nodeType":"YulFunctionCall","src":"2235:34:31"},"nodeType":"YulExpressionStatement","src":"2235:34:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2289:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2300:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2285:3:31"},"nodeType":"YulFunctionCall","src":"2285:18:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2316:1:31","type":"","value":"2"},{"name":"value1","nodeType":"YulIdentifier","src":"2319:6:31"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"2305:10:31"},"nodeType":"YulFunctionCall","src":"2305:21:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2278:6:31"},"nodeType":"YulFunctionCall","src":"2278:49:31"},"nodeType":"YulExpressionStatement","src":"2278:49:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2347:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2358:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2343:3:31"},"nodeType":"YulFunctionCall","src":"2343:18:31"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2367:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"2375:2:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2363:3:31"},"nodeType":"YulFunctionCall","src":"2363:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2336:6:31"},"nodeType":"YulFunctionCall","src":"2336:43:31"},"nodeType":"YulExpressionStatement","src":"2336:43:31"}]},"name":"abi_encode_tuple_t_uint16_t_int24_t_uint16__to_t_uint16_t_int24_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2118:9:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2129:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2137:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2145:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2156:4:31","type":""}],"src":"2016:369:31"},{"body":{"nodeType":"YulBlock","src":"2460:177:31","statements":[{"body":{"nodeType":"YulBlock","src":"2506:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2515:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2518:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2508:6:31"},"nodeType":"YulFunctionCall","src":"2508:12:31"},"nodeType":"YulExpressionStatement","src":"2508:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2481:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"2490:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2477:3:31"},"nodeType":"YulFunctionCall","src":"2477:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"2502:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2473:3:31"},"nodeType":"YulFunctionCall","src":"2473:32:31"},"nodeType":"YulIf","src":"2470:52:31"},{"nodeType":"YulVariableDeclaration","src":"2531:36:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2557:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2544:12:31"},"nodeType":"YulFunctionCall","src":"2544:23:31"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2535:5:31","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2601:5:31"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2576:24:31"},"nodeType":"YulFunctionCall","src":"2576:31:31"},"nodeType":"YulExpressionStatement","src":"2576:31:31"},{"nodeType":"YulAssignment","src":"2616:15:31","value":{"name":"value","nodeType":"YulIdentifier","src":"2626:5:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2616:6:31"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2426:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2437:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2449:6:31","type":""}],"src":"2390:247:31"},{"body":{"nodeType":"YulBlock","src":"2739:91:31","statements":[{"nodeType":"YulAssignment","src":"2749:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2761:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"2772:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2757:3:31"},"nodeType":"YulFunctionCall","src":"2757:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2749:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2791:9:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2813:1:31","type":"","value":"2"},{"name":"value0","nodeType":"YulIdentifier","src":"2816:6:31"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"2802:10:31"},"nodeType":"YulFunctionCall","src":"2802:21:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2784:6:31"},"nodeType":"YulFunctionCall","src":"2784:40:31"},"nodeType":"YulExpressionStatement","src":"2784:40:31"}]},"name":"abi_encode_tuple_t_int24__to_t_int24__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2708:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2719:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2730:4:31","type":""}],"src":"2642:188:31"},{"body":{"nodeType":"YulBlock","src":"2922:228:31","statements":[{"body":{"nodeType":"YulBlock","src":"2968:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2977:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2970:6:31"},"nodeType":"YulFunctionCall","src":"2970:12:31"},"nodeType":"YulExpressionStatement","src":"2970:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2943:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"2952:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2939:3:31"},"nodeType":"YulFunctionCall","src":"2939:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"2964:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2935:3:31"},"nodeType":"YulFunctionCall","src":"2935:32:31"},"nodeType":"YulIf","src":"2932:52:31"},{"nodeType":"YulAssignment","src":"2993:33:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3016:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3003:12:31"},"nodeType":"YulFunctionCall","src":"3003:23:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2993:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"3035:45:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3065:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3076:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3061:3:31"},"nodeType":"YulFunctionCall","src":"3061:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3048:12:31"},"nodeType":"YulFunctionCall","src":"3048:32:31"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3039:5:31","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3114:5:31"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3089:24:31"},"nodeType":"YulFunctionCall","src":"3089:31:31"},"nodeType":"YulExpressionStatement","src":"3089:31:31"},{"nodeType":"YulAssignment","src":"3129:15:31","value":{"name":"value","nodeType":"YulIdentifier","src":"3139:5:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3129:6:31"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2880:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2891:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2903:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2911:6:31","type":""}],"src":"2835:315:31"},{"body":{"nodeType":"YulBlock","src":"3254:89:31","statements":[{"nodeType":"YulAssignment","src":"3264:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3276:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"3287:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3272:3:31"},"nodeType":"YulFunctionCall","src":"3272:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3264:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3306:9:31"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3321:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"3329:6:31","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3317:3:31"},"nodeType":"YulFunctionCall","src":"3317:19:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3299:6:31"},"nodeType":"YulFunctionCall","src":"3299:38:31"},"nodeType":"YulExpressionStatement","src":"3299:38:31"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3223:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3234:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3245:4:31","type":""}],"src":"3155:188:31"},{"body":{"nodeType":"YulBlock","src":"3420:275:31","statements":[{"body":{"nodeType":"YulBlock","src":"3469:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3478:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3481:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3471:6:31"},"nodeType":"YulFunctionCall","src":"3471:12:31"},"nodeType":"YulExpressionStatement","src":"3471:12:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3448:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"3456:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3444:3:31"},"nodeType":"YulFunctionCall","src":"3444:17:31"},{"name":"end","nodeType":"YulIdentifier","src":"3463:3:31"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3440:3:31"},"nodeType":"YulFunctionCall","src":"3440:27:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3433:6:31"},"nodeType":"YulFunctionCall","src":"3433:35:31"},"nodeType":"YulIf","src":"3430:55:31"},{"nodeType":"YulAssignment","src":"3494:30:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3517:6:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3504:12:31"},"nodeType":"YulFunctionCall","src":"3504:20:31"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3494:6:31"}]},{"body":{"nodeType":"YulBlock","src":"3567:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3576:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3579:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3569:6:31"},"nodeType":"YulFunctionCall","src":"3569:12:31"},"nodeType":"YulExpressionStatement","src":"3569:12:31"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3539:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"3547:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3536:2:31"},"nodeType":"YulFunctionCall","src":"3536:30:31"},"nodeType":"YulIf","src":"3533:50:31"},{"nodeType":"YulAssignment","src":"3592:29:31","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3608:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"3616:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3604:3:31"},"nodeType":"YulFunctionCall","src":"3604:17:31"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"3592:8:31"}]},{"body":{"nodeType":"YulBlock","src":"3673:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3682:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3685:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3675:6:31"},"nodeType":"YulFunctionCall","src":"3675:12:31"},"nodeType":"YulExpressionStatement","src":"3675:12:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3644:6:31"},{"name":"length","nodeType":"YulIdentifier","src":"3652:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3640:3:31"},"nodeType":"YulFunctionCall","src":"3640:19:31"},{"kind":"number","nodeType":"YulLiteral","src":"3661:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3636:3:31"},"nodeType":"YulFunctionCall","src":"3636:30:31"},{"name":"end","nodeType":"YulIdentifier","src":"3668:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3633:2:31"},"nodeType":"YulFunctionCall","src":"3633:39:31"},"nodeType":"YulIf","src":"3630:59:31"}]},"name":"abi_decode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3383:6:31","type":""},{"name":"end","nodeType":"YulTypedName","src":"3391:3:31","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"3399:8:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"3409:6:31","type":""}],"src":"3348:347:31"},{"body":{"nodeType":"YulBlock","src":"3823:562:31","statements":[{"body":{"nodeType":"YulBlock","src":"3869:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3878:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3881:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3871:6:31"},"nodeType":"YulFunctionCall","src":"3871:12:31"},"nodeType":"YulExpressionStatement","src":"3871:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3844:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"3853:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3840:3:31"},"nodeType":"YulFunctionCall","src":"3840:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"3865:2:31","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3836:3:31"},"nodeType":"YulFunctionCall","src":"3836:32:31"},"nodeType":"YulIf","src":"3833:52:31"},{"nodeType":"YulVariableDeclaration","src":"3894:36:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3920:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3907:12:31"},"nodeType":"YulFunctionCall","src":"3907:23:31"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3898:5:31","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3964:5:31"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3939:24:31"},"nodeType":"YulFunctionCall","src":"3939:31:31"},"nodeType":"YulExpressionStatement","src":"3939:31:31"},{"nodeType":"YulAssignment","src":"3979:15:31","value":{"name":"value","nodeType":"YulIdentifier","src":"3989:5:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3979:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"4003:47:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4035:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4046:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4031:3:31"},"nodeType":"YulFunctionCall","src":"4031:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4018:12:31"},"nodeType":"YulFunctionCall","src":"4018:32:31"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"4007:7:31","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"4084:7:31"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4059:24:31"},"nodeType":"YulFunctionCall","src":"4059:33:31"},"nodeType":"YulExpressionStatement","src":"4059:33:31"},{"nodeType":"YulAssignment","src":"4101:17:31","value":{"name":"value_1","nodeType":"YulIdentifier","src":"4111:7:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4101:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"4127:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4169:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:31"},"nodeType":"YulFunctionCall","src":"4154:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4141:12:31"},"nodeType":"YulFunctionCall","src":"4141:32:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4131:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"4216:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4225:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4228:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4218:6:31"},"nodeType":"YulFunctionCall","src":"4218:12:31"},"nodeType":"YulExpressionStatement","src":"4218:12:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4188:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"4196:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4185:2:31"},"nodeType":"YulFunctionCall","src":"4185:30:31"},"nodeType":"YulIf","src":"4182:50:31"},{"nodeType":"YulVariableDeclaration","src":"4241:84:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4297:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"4308:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4293:3:31"},"nodeType":"YulFunctionCall","src":"4293:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4317:7:31"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"4267:25:31"},"nodeType":"YulFunctionCall","src":"4267:58:31"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"4245:8:31","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"4255:8:31","type":""}]},{"nodeType":"YulAssignment","src":"4334:18:31","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"4344:8:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4334:6:31"}]},{"nodeType":"YulAssignment","src":"4361:18:31","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"4371:8:31"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4361:6:31"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3765:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3776:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3788:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3796:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3804:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3812:6:31","type":""}],"src":"3700:685:31"},{"body":{"nodeType":"YulBlock","src":"4459:203:31","statements":[{"body":{"nodeType":"YulBlock","src":"4505:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4514:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4517:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4507:6:31"},"nodeType":"YulFunctionCall","src":"4507:12:31"},"nodeType":"YulExpressionStatement","src":"4507:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4480:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"4489:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4476:3:31"},"nodeType":"YulFunctionCall","src":"4476:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"4501:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4472:3:31"},"nodeType":"YulFunctionCall","src":"4472:32:31"},"nodeType":"YulIf","src":"4469:52:31"},{"nodeType":"YulVariableDeclaration","src":"4530:36:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4556:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4543:12:31"},"nodeType":"YulFunctionCall","src":"4543:23:31"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4534:5:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"4616:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4625:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4628:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4618:6:31"},"nodeType":"YulFunctionCall","src":"4618:12:31"},"nodeType":"YulExpressionStatement","src":"4618:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4588:5:31"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4599:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"4606:6:31","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4595:3:31"},"nodeType":"YulFunctionCall","src":"4595:18:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4585:2:31"},"nodeType":"YulFunctionCall","src":"4585:29:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4578:6:31"},"nodeType":"YulFunctionCall","src":"4578:37:31"},"nodeType":"YulIf","src":"4575:57:31"},{"nodeType":"YulAssignment","src":"4641:15:31","value":{"name":"value","nodeType":"YulIdentifier","src":"4651:5:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4641:6:31"}]}]},"name":"abi_decode_tuple_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4425:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4436:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4448:6:31","type":""}],"src":"4390:272:31"},{"body":{"nodeType":"YulBlock","src":"4754:161:31","statements":[{"body":{"nodeType":"YulBlock","src":"4800:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4809:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4812:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4802:6:31"},"nodeType":"YulFunctionCall","src":"4802:12:31"},"nodeType":"YulExpressionStatement","src":"4802:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4775:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"4784:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4771:3:31"},"nodeType":"YulFunctionCall","src":"4771:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"4796:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4767:3:31"},"nodeType":"YulFunctionCall","src":"4767:32:31"},"nodeType":"YulIf","src":"4764:52:31"},{"nodeType":"YulAssignment","src":"4825:33:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4848:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4835:12:31"},"nodeType":"YulFunctionCall","src":"4835:23:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4825:6:31"}]},{"nodeType":"YulAssignment","src":"4867:42:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4894:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"4905:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4890:3:31"},"nodeType":"YulFunctionCall","src":"4890:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4877:12:31"},"nodeType":"YulFunctionCall","src":"4877:32:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4867:6:31"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4712:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4723:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4735:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4743:6:31","type":""}],"src":"4667:248:31"},{"body":{"nodeType":"YulBlock","src":"5051:125:31","statements":[{"nodeType":"YulAssignment","src":"5061:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5073:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"5084:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5069:3:31"},"nodeType":"YulFunctionCall","src":"5069:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5061:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5103:9:31"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5118:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"5126:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5114:3:31"},"nodeType":"YulFunctionCall","src":"5114:55:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5096:6:31"},"nodeType":"YulFunctionCall","src":"5096:74:31"},"nodeType":"YulExpressionStatement","src":"5096:74:31"}]},"name":"abi_encode_tuple_t_contract$_IAlgebraPluginFactory_$4422__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5020:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5031:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5042:4:31","type":""}],"src":"4920:256:31"},{"body":{"nodeType":"YulBlock","src":"5311:125:31","statements":[{"nodeType":"YulAssignment","src":"5321:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5333:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"5344:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5329:3:31"},"nodeType":"YulFunctionCall","src":"5329:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5321:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5363:9:31"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5378:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"5386:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5374:3:31"},"nodeType":"YulFunctionCall","src":"5374:55:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5356:6:31"},"nodeType":"YulFunctionCall","src":"5356:74:31"},"nodeType":"YulExpressionStatement","src":"5356:74:31"}]},"name":"abi_encode_tuple_t_contract$_IAlgebraVaultFactory_$5184__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5280:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5291:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5302:4:31","type":""}],"src":"5181:255:31"},{"body":{"nodeType":"YulBlock","src":"5528:301:31","statements":[{"body":{"nodeType":"YulBlock","src":"5574:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5583:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5586:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5576:6:31"},"nodeType":"YulFunctionCall","src":"5576:12:31"},"nodeType":"YulExpressionStatement","src":"5576:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5549:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"5558:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5545:3:31"},"nodeType":"YulFunctionCall","src":"5545:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"5570:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5541:3:31"},"nodeType":"YulFunctionCall","src":"5541:32:31"},"nodeType":"YulIf","src":"5538:52:31"},{"nodeType":"YulVariableDeclaration","src":"5599:36:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5625:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5612:12:31"},"nodeType":"YulFunctionCall","src":"5612:23:31"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5603:5:31","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5669:5:31"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5644:24:31"},"nodeType":"YulFunctionCall","src":"5644:31:31"},"nodeType":"YulExpressionStatement","src":"5644:31:31"},{"nodeType":"YulAssignment","src":"5684:15:31","value":{"name":"value","nodeType":"YulIdentifier","src":"5694:5:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5684:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"5708:47:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5740:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"5751:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5736:3:31"},"nodeType":"YulFunctionCall","src":"5736:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5723:12:31"},"nodeType":"YulFunctionCall","src":"5723:32:31"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"5712:7:31","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"5789:7:31"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5764:24:31"},"nodeType":"YulFunctionCall","src":"5764:33:31"},"nodeType":"YulExpressionStatement","src":"5764:33:31"},{"nodeType":"YulAssignment","src":"5806:17:31","value":{"name":"value_1","nodeType":"YulIdentifier","src":"5816:7:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5806:6:31"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5486:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5497:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5509:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5517:6:31","type":""}],"src":"5441:388:31"},{"body":{"nodeType":"YulBlock","src":"5991:812:31","statements":[{"body":{"nodeType":"YulBlock","src":"6038:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6047:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6050:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6040:6:31"},"nodeType":"YulFunctionCall","src":"6040:12:31"},"nodeType":"YulExpressionStatement","src":"6040:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6012:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"6021:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6008:3:31"},"nodeType":"YulFunctionCall","src":"6008:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"6033:3:31","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6004:3:31"},"nodeType":"YulFunctionCall","src":"6004:33:31"},"nodeType":"YulIf","src":"6001:53:31"},{"nodeType":"YulVariableDeclaration","src":"6063:36:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6089:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6076:12:31"},"nodeType":"YulFunctionCall","src":"6076:23:31"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6067:5:31","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6133:5:31"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6108:24:31"},"nodeType":"YulFunctionCall","src":"6108:31:31"},"nodeType":"YulExpressionStatement","src":"6108:31:31"},{"nodeType":"YulAssignment","src":"6148:15:31","value":{"name":"value","nodeType":"YulIdentifier","src":"6158:5:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6148:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"6172:47:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6204:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"6215:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6200:3:31"},"nodeType":"YulFunctionCall","src":"6200:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6187:12:31"},"nodeType":"YulFunctionCall","src":"6187:32:31"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"6176:7:31","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"6253:7:31"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6228:24:31"},"nodeType":"YulFunctionCall","src":"6228:33:31"},"nodeType":"YulExpressionStatement","src":"6228:33:31"},{"nodeType":"YulAssignment","src":"6270:17:31","value":{"name":"value_1","nodeType":"YulIdentifier","src":"6280:7:31"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6270:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"6296:47:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6328:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"6339:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6324:3:31"},"nodeType":"YulFunctionCall","src":"6324:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6311:12:31"},"nodeType":"YulFunctionCall","src":"6311:32:31"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"6300:7:31","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"6377:7:31"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6352:24:31"},"nodeType":"YulFunctionCall","src":"6352:33:31"},"nodeType":"YulExpressionStatement","src":"6352:33:31"},{"nodeType":"YulAssignment","src":"6394:17:31","value":{"name":"value_2","nodeType":"YulIdentifier","src":"6404:7:31"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6394:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"6420:47:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6452:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"6463:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6448:3:31"},"nodeType":"YulFunctionCall","src":"6448:18:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6435:12:31"},"nodeType":"YulFunctionCall","src":"6435:32:31"},"variables":[{"name":"value_3","nodeType":"YulTypedName","src":"6424:7:31","type":""}]},{"expression":{"arguments":[{"name":"value_3","nodeType":"YulIdentifier","src":"6501:7:31"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6476:24:31"},"nodeType":"YulFunctionCall","src":"6476:33:31"},"nodeType":"YulExpressionStatement","src":"6476:33:31"},{"nodeType":"YulAssignment","src":"6518:17:31","value":{"name":"value_3","nodeType":"YulIdentifier","src":"6528:7:31"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6518:6:31"}]},{"nodeType":"YulVariableDeclaration","src":"6544:47:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6575:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"6586:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6571:3:31"},"nodeType":"YulFunctionCall","src":"6571:19:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6558:12:31"},"nodeType":"YulFunctionCall","src":"6558:33:31"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6548:6:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"6634:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6643:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6646:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6636:6:31"},"nodeType":"YulFunctionCall","src":"6636:12:31"},"nodeType":"YulExpressionStatement","src":"6636:12:31"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6606:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"6614:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6603:2:31"},"nodeType":"YulFunctionCall","src":"6603:30:31"},"nodeType":"YulIf","src":"6600:50:31"},{"nodeType":"YulVariableDeclaration","src":"6659:84:31","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6715:9:31"},{"name":"offset","nodeType":"YulIdentifier","src":"6726:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6711:3:31"},"nodeType":"YulFunctionCall","src":"6711:22:31"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6735:7:31"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"6685:25:31"},"nodeType":"YulFunctionCall","src":"6685:58:31"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"6663:8:31","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"6673:8:31","type":""}]},{"nodeType":"YulAssignment","src":"6752:18:31","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"6762:8:31"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6752:6:31"}]},{"nodeType":"YulAssignment","src":"6779:18:31","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"6789:8:31"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"6779:6:31"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_addresst_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5917:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5928:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5940:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5948:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5956:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5964:6:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5972:6:31","type":""},{"name":"value5","nodeType":"YulTypedName","src":"5980:6:31","type":""}],"src":"5834:969:31"},{"body":{"nodeType":"YulBlock","src":"6876:205:31","statements":[{"body":{"nodeType":"YulBlock","src":"6922:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6931:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6934:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6924:6:31"},"nodeType":"YulFunctionCall","src":"6924:12:31"},"nodeType":"YulExpressionStatement","src":"6924:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6897:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"6906:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6893:3:31"},"nodeType":"YulFunctionCall","src":"6893:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"6918:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6889:3:31"},"nodeType":"YulFunctionCall","src":"6889:32:31"},"nodeType":"YulIf","src":"6886:52:31"},{"nodeType":"YulVariableDeclaration","src":"6947:36:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6973:9:31"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6960:12:31"},"nodeType":"YulFunctionCall","src":"6960:23:31"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6951:5:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"7035:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7044:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7047:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7037:6:31"},"nodeType":"YulFunctionCall","src":"7037:12:31"},"nodeType":"YulExpressionStatement","src":"7037:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7005:5:31"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7023:1:31","type":"","value":"2"},{"name":"value","nodeType":"YulIdentifier","src":"7026:5:31"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"7012:10:31"},"nodeType":"YulFunctionCall","src":"7012:20:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7002:2:31"},"nodeType":"YulFunctionCall","src":"7002:31:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6995:6:31"},"nodeType":"YulFunctionCall","src":"6995:39:31"},"nodeType":"YulIf","src":"6992:59:31"},{"nodeType":"YulAssignment","src":"7060:15:31","value":{"name":"value","nodeType":"YulIdentifier","src":"7070:5:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7060:6:31"}]}]},"name":"abi_decode_tuple_t_int24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6842:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6853:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6865:6:31","type":""}],"src":"6808:273:31"},{"body":{"nodeType":"YulBlock","src":"7243:250:31","statements":[{"nodeType":"YulAssignment","src":"7253:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7265:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7276:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7261:3:31"},"nodeType":"YulFunctionCall","src":"7261:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7253:4:31"}]},{"nodeType":"YulVariableDeclaration","src":"7288:52:31","value":{"kind":"number","nodeType":"YulLiteral","src":"7298:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7292:2:31","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7356:9:31"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7371:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"7379:2:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7367:3:31"},"nodeType":"YulFunctionCall","src":"7367:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7349:6:31"},"nodeType":"YulFunctionCall","src":"7349:34:31"},"nodeType":"YulExpressionStatement","src":"7349:34:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7403:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7414:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7399:3:31"},"nodeType":"YulFunctionCall","src":"7399:18:31"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7423:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"7431:2:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7419:3:31"},"nodeType":"YulFunctionCall","src":"7419:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7392:6:31"},"nodeType":"YulFunctionCall","src":"7392:43:31"},"nodeType":"YulExpressionStatement","src":"7392:43:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7455:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"7466:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7451:3:31"},"nodeType":"YulFunctionCall","src":"7451:18:31"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7475:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"7483:2:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7471:3:31"},"nodeType":"YulFunctionCall","src":"7471:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7444:6:31"},"nodeType":"YulFunctionCall","src":"7444:43:31"},"nodeType":"YulExpressionStatement","src":"7444:43:31"}]},"name":"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7196:9:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7207:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7215:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7223:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7234:4:31","type":""}],"src":"7086:407:31"},{"body":{"nodeType":"YulBlock","src":"7774:315:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7791:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"7796:66:31","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7784:6:31"},"nodeType":"YulFunctionCall","src":"7784:79:31"},"nodeType":"YulExpressionStatement","src":"7784:79:31"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7883:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"7888:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7879:3:31"},"nodeType":"YulFunctionCall","src":"7879:11:31"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7900:2:31","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"7904:6:31"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7896:3:31"},"nodeType":"YulFunctionCall","src":"7896:15:31"},{"kind":"number","nodeType":"YulLiteral","src":"7913:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7892:3:31"},"nodeType":"YulFunctionCall","src":"7892:88:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7872:6:31"},"nodeType":"YulFunctionCall","src":"7872:109:31"},"nodeType":"YulExpressionStatement","src":"7872:109:31"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8001:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"8006:2:31","type":"","value":"21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7997:3:31"},"nodeType":"YulFunctionCall","src":"7997:12:31"},{"name":"value1","nodeType":"YulIdentifier","src":"8011:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7990:6:31"},"nodeType":"YulFunctionCall","src":"7990:28:31"},"nodeType":"YulExpressionStatement","src":"7990:28:31"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8038:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"8043:2:31","type":"","value":"53"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8034:3:31"},"nodeType":"YulFunctionCall","src":"8034:12:31"},{"name":"value2","nodeType":"YulIdentifier","src":"8048:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8027:6:31"},"nodeType":"YulFunctionCall","src":"8027:28:31"},"nodeType":"YulExpressionStatement","src":"8027:28:31"},{"nodeType":"YulAssignment","src":"8064:19:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8075:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"8080:2:31","type":"","value":"85"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8071:3:31"},"nodeType":"YulFunctionCall","src":"8071:12:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8064:3:31"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7734:3:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7739:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7747:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7755:6:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7766:3:31","type":""}],"src":"7498:591:31"},{"body":{"nodeType":"YulBlock","src":"8268:237:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8285:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"8296:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8278:6:31"},"nodeType":"YulFunctionCall","src":"8278:21:31"},"nodeType":"YulExpressionStatement","src":"8278:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8319:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"8330:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8315:3:31"},"nodeType":"YulFunctionCall","src":"8315:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"8335:2:31","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8308:6:31"},"nodeType":"YulFunctionCall","src":"8308:30:31"},"nodeType":"YulExpressionStatement","src":"8308:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8358:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"8369:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8354:3:31"},"nodeType":"YulFunctionCall","src":"8354:18:31"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"8374:34:31","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8347:6:31"},"nodeType":"YulFunctionCall","src":"8347:62:31"},"nodeType":"YulExpressionStatement","src":"8347:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8429:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"8440:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8425:3:31"},"nodeType":"YulFunctionCall","src":"8425:18:31"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"8445:17:31","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8418:6:31"},"nodeType":"YulFunctionCall","src":"8418:45:31"},"nodeType":"YulExpressionStatement","src":"8418:45:31"},{"nodeType":"YulAssignment","src":"8472:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8484:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"8495:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8480:3:31"},"nodeType":"YulFunctionCall","src":"8480:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8472:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8245:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8259:4:31","type":""}],"src":"8094:411:31"},{"body":{"nodeType":"YulBlock","src":"8542:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8559:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8562:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8552:6:31"},"nodeType":"YulFunctionCall","src":"8552:88:31"},"nodeType":"YulExpressionStatement","src":"8552:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8656:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8659:4:31","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8649:6:31"},"nodeType":"YulFunctionCall","src":"8649:15:31"},"nodeType":"YulExpressionStatement","src":"8649:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8680:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8683:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8673:6:31"},"nodeType":"YulFunctionCall","src":"8673:15:31"},"nodeType":"YulExpressionStatement","src":"8673:15:31"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8510:184:31"},{"body":{"nodeType":"YulBlock","src":"8747:77:31","statements":[{"nodeType":"YulAssignment","src":"8757:16:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8768:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"8771:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8764:3:31"},"nodeType":"YulFunctionCall","src":"8764:9:31"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"8757:3:31"}]},{"body":{"nodeType":"YulBlock","src":"8796:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8798:16:31"},"nodeType":"YulFunctionCall","src":"8798:18:31"},"nodeType":"YulExpressionStatement","src":"8798:18:31"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8788:1:31"},{"name":"sum","nodeType":"YulIdentifier","src":"8791:3:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8785:2:31"},"nodeType":"YulFunctionCall","src":"8785:10:31"},"nodeType":"YulIf","src":"8782:36:31"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8730:1:31","type":""},{"name":"y","nodeType":"YulTypedName","src":"8733:1:31","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"8739:3:31","type":""}],"src":"8699:125:31"},{"body":{"nodeType":"YulBlock","src":"8958:119:31","statements":[{"nodeType":"YulAssignment","src":"8968:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8980:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"8991:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8976:3:31"},"nodeType":"YulFunctionCall","src":"8976:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8968:4:31"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9010:9:31"},{"name":"value0","nodeType":"YulIdentifier","src":"9021:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9003:6:31"},"nodeType":"YulFunctionCall","src":"9003:25:31"},"nodeType":"YulExpressionStatement","src":"9003:25:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9048:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9059:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9044:3:31"},"nodeType":"YulFunctionCall","src":"9044:18:31"},{"name":"value1","nodeType":"YulIdentifier","src":"9064:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9037:6:31"},"nodeType":"YulFunctionCall","src":"9037:34:31"},"nodeType":"YulExpressionStatement","src":"9037:34:31"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8919:9:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8930:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8938:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8949:4:31","type":""}],"src":"8829:248:31"},{"body":{"nodeType":"YulBlock","src":"9131:79:31","statements":[{"nodeType":"YulAssignment","src":"9141:17:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9153:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"9156:1:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9149:3:31"},"nodeType":"YulFunctionCall","src":"9149:9:31"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"9141:4:31"}]},{"body":{"nodeType":"YulBlock","src":"9182:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9184:16:31"},"nodeType":"YulFunctionCall","src":"9184:18:31"},"nodeType":"YulExpressionStatement","src":"9184:18:31"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"9173:4:31"},{"name":"x","nodeType":"YulIdentifier","src":"9179:1:31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9170:2:31"},"nodeType":"YulFunctionCall","src":"9170:11:31"},"nodeType":"YulIf","src":"9167:37:31"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9113:1:31","type":""},{"name":"y","nodeType":"YulTypedName","src":"9116:1:31","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"9122:4:31","type":""}],"src":"9082:128:31"},{"body":{"nodeType":"YulBlock","src":"9389:231:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9406:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9417:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9399:6:31"},"nodeType":"YulFunctionCall","src":"9399:21:31"},"nodeType":"YulExpressionStatement","src":"9399:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9440:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9451:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9436:3:31"},"nodeType":"YulFunctionCall","src":"9436:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"9456:2:31","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9429:6:31"},"nodeType":"YulFunctionCall","src":"9429:30:31"},"nodeType":"YulExpressionStatement","src":"9429:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9479:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9490:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9475:3:31"},"nodeType":"YulFunctionCall","src":"9475:18:31"},{"hexValue":"4f776e61626c6532537465703a2063616c6c6572206973206e6f742074686520","kind":"string","nodeType":"YulLiteral","src":"9495:34:31","type":"","value":"Ownable2Step: caller is not the "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9468:6:31"},"nodeType":"YulFunctionCall","src":"9468:62:31"},"nodeType":"YulExpressionStatement","src":"9468:62:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9550:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9561:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9546:3:31"},"nodeType":"YulFunctionCall","src":"9546:18:31"},{"hexValue":"6e6577206f776e6572","kind":"string","nodeType":"YulLiteral","src":"9566:11:31","type":"","value":"new owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9539:6:31"},"nodeType":"YulFunctionCall","src":"9539:39:31"},"nodeType":"YulExpressionStatement","src":"9539:39:31"},{"nodeType":"YulAssignment","src":"9587:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9599:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9610:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9595:3:31"},"nodeType":"YulFunctionCall","src":"9595:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9587:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9366:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9380:4:31","type":""}],"src":"9215:405:31"},{"body":{"nodeType":"YulBlock","src":"9754:198:31","statements":[{"nodeType":"YulAssignment","src":"9764:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9776:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9787:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9772:3:31"},"nodeType":"YulFunctionCall","src":"9772:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9764:4:31"}]},{"nodeType":"YulVariableDeclaration","src":"9799:52:31","value":{"kind":"number","nodeType":"YulLiteral","src":"9809:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9803:2:31","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9867:9:31"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9882:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"9890:2:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9878:3:31"},"nodeType":"YulFunctionCall","src":"9878:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9860:6:31"},"nodeType":"YulFunctionCall","src":"9860:34:31"},"nodeType":"YulExpressionStatement","src":"9860:34:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9914:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"9925:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9910:3:31"},"nodeType":"YulFunctionCall","src":"9910:18:31"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9934:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"9942:2:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9930:3:31"},"nodeType":"YulFunctionCall","src":"9930:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9903:6:31"},"nodeType":"YulFunctionCall","src":"9903:43:31"},"nodeType":"YulExpressionStatement","src":"9903:43:31"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9715:9:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9726:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9734:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9745:4:31","type":""}],"src":"9625:327:31"},{"body":{"nodeType":"YulBlock","src":"10131:175:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10148:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"10159:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10141:6:31"},"nodeType":"YulFunctionCall","src":"10141:21:31"},"nodeType":"YulExpressionStatement","src":"10141:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10182:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"10193:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10178:3:31"},"nodeType":"YulFunctionCall","src":"10178:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"10198:2:31","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10171:6:31"},"nodeType":"YulFunctionCall","src":"10171:30:31"},"nodeType":"YulExpressionStatement","src":"10171:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10221:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"10232:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10217:3:31"},"nodeType":"YulFunctionCall","src":"10217:18:31"},{"hexValue":"43616e60742063726561746520637573746f6d20706f6f6c73","kind":"string","nodeType":"YulLiteral","src":"10237:27:31","type":"","value":"Can`t create custom pools"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10210:6:31"},"nodeType":"YulFunctionCall","src":"10210:55:31"},"nodeType":"YulExpressionStatement","src":"10210:55:31"},{"nodeType":"YulAssignment","src":"10274:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10286:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"10297:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10282:3:31"},"nodeType":"YulFunctionCall","src":"10282:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10274:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_4923848de4258787551fdf161f1836f7adecfca5e0948f14f6ef0465d225420b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10108:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10122:4:31","type":""}],"src":"9957:349:31"},{"body":{"nodeType":"YulBlock","src":"10485:182:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10502:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"10513:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10495:6:31"},"nodeType":"YulFunctionCall","src":"10495:21:31"},"nodeType":"YulExpressionStatement","src":"10495:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10536:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"10547:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10532:3:31"},"nodeType":"YulFunctionCall","src":"10532:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"10552:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10525:6:31"},"nodeType":"YulFunctionCall","src":"10525:30:31"},"nodeType":"YulExpressionStatement","src":"10525:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10575:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"10586:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10571:3:31"},"nodeType":"YulFunctionCall","src":"10571:18:31"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"10591:34:31","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10564:6:31"},"nodeType":"YulFunctionCall","src":"10564:62:31"},"nodeType":"YulExpressionStatement","src":"10564:62:31"},{"nodeType":"YulAssignment","src":"10635:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10647:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"10658:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10643:3:31"},"nodeType":"YulFunctionCall","src":"10643:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10635:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10462:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10476:4:31","type":""}],"src":"10311:356:31"},{"body":{"nodeType":"YulBlock","src":"10846:181:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10863:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"10874:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10856:6:31"},"nodeType":"YulFunctionCall","src":"10856:21:31"},"nodeType":"YulExpressionStatement","src":"10856:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10897:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"10908:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10893:3:31"},"nodeType":"YulFunctionCall","src":"10893:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"10913:2:31","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10886:6:31"},"nodeType":"YulFunctionCall","src":"10886:30:31"},"nodeType":"YulExpressionStatement","src":"10886:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10936:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"10947:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10932:3:31"},"nodeType":"YulFunctionCall","src":"10932:18:31"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"10952:33:31","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10925:6:31"},"nodeType":"YulFunctionCall","src":"10925:61:31"},"nodeType":"YulExpressionStatement","src":"10925:61:31"},{"nodeType":"YulAssignment","src":"10995:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11007:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"11018:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11003:3:31"},"nodeType":"YulFunctionCall","src":"11003:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10995:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10823:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10837:4:31","type":""}],"src":"10672:355:31"},{"body":{"nodeType":"YulBlock","src":"11098:184:31","statements":[{"nodeType":"YulVariableDeclaration","src":"11108:10:31","value":{"kind":"number","nodeType":"YulLiteral","src":"11117:1:31","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11112:1:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"11177:63:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11202:3:31"},{"name":"i","nodeType":"YulIdentifier","src":"11207:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11198:3:31"},"nodeType":"YulFunctionCall","src":"11198:11:31"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11221:3:31"},{"name":"i","nodeType":"YulIdentifier","src":"11226:1:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11217:3:31"},"nodeType":"YulFunctionCall","src":"11217:11:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11211:5:31"},"nodeType":"YulFunctionCall","src":"11211:18:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11191:6:31"},"nodeType":"YulFunctionCall","src":"11191:39:31"},"nodeType":"YulExpressionStatement","src":"11191:39:31"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11138:1:31"},{"name":"length","nodeType":"YulIdentifier","src":"11141:6:31"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11135:2:31"},"nodeType":"YulFunctionCall","src":"11135:13:31"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11149:19:31","statements":[{"nodeType":"YulAssignment","src":"11151:15:31","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11160:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"11163:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11156:3:31"},"nodeType":"YulFunctionCall","src":"11156:10:31"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11151:1:31"}]}]},"pre":{"nodeType":"YulBlock","src":"11131:3:31","statements":[]},"src":"11127:113:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11260:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"11265:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11256:3:31"},"nodeType":"YulFunctionCall","src":"11256:16:31"},{"kind":"number","nodeType":"YulLiteral","src":"11274:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11249:6:31"},"nodeType":"YulFunctionCall","src":"11249:27:31"},"nodeType":"YulExpressionStatement","src":"11249:27:31"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11076:3:31","type":""},{"name":"dst","nodeType":"YulTypedName","src":"11081:3:31","type":""},{"name":"length","nodeType":"YulTypedName","src":"11086:6:31","type":""}],"src":"11032:250:31"},{"body":{"nodeType":"YulBlock","src":"11336:280:31","statements":[{"nodeType":"YulVariableDeclaration","src":"11346:26:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11366:5:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11360:5:31"},"nodeType":"YulFunctionCall","src":"11360:12:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11350:6:31","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11388:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"11393:6:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11381:6:31"},"nodeType":"YulFunctionCall","src":"11381:19:31"},"nodeType":"YulExpressionStatement","src":"11381:19:31"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11448:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"11455:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11444:3:31"},"nodeType":"YulFunctionCall","src":"11444:16:31"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11466:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"11471:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11462:3:31"},"nodeType":"YulFunctionCall","src":"11462:14:31"},{"name":"length","nodeType":"YulIdentifier","src":"11478:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11409:34:31"},"nodeType":"YulFunctionCall","src":"11409:76:31"},"nodeType":"YulExpressionStatement","src":"11409:76:31"},{"nodeType":"YulAssignment","src":"11494:116:31","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11509:3:31"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11522:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"11530:2:31","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11518:3:31"},"nodeType":"YulFunctionCall","src":"11518:15:31"},{"kind":"number","nodeType":"YulLiteral","src":"11535:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11514:3:31"},"nodeType":"YulFunctionCall","src":"11514:88:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11505:3:31"},"nodeType":"YulFunctionCall","src":"11505:98:31"},{"kind":"number","nodeType":"YulLiteral","src":"11605:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11501:3:31"},"nodeType":"YulFunctionCall","src":"11501:109:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11494:3:31"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11313:5:31","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11320:3:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11328:3:31","type":""}],"src":"11287:329:31"},{"body":{"nodeType":"YulBlock","src":"11880:423:31","statements":[{"nodeType":"YulVariableDeclaration","src":"11890:52:31","value":{"kind":"number","nodeType":"YulLiteral","src":"11900:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11894:2:31","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11958:9:31"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11973:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"11981:2:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11969:3:31"},"nodeType":"YulFunctionCall","src":"11969:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11951:6:31"},"nodeType":"YulFunctionCall","src":"11951:34:31"},"nodeType":"YulExpressionStatement","src":"11951:34:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12005:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12016:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12001:3:31"},"nodeType":"YulFunctionCall","src":"12001:18:31"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12025:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"12033:2:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12021:3:31"},"nodeType":"YulFunctionCall","src":"12021:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11994:6:31"},"nodeType":"YulFunctionCall","src":"11994:43:31"},"nodeType":"YulExpressionStatement","src":"11994:43:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12057:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12068:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12053:3:31"},"nodeType":"YulFunctionCall","src":"12053:18:31"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12077:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"12085:2:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12073:3:31"},"nodeType":"YulFunctionCall","src":"12073:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12046:6:31"},"nodeType":"YulFunctionCall","src":"12046:43:31"},"nodeType":"YulExpressionStatement","src":"12046:43:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12109:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12120:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12105:3:31"},"nodeType":"YulFunctionCall","src":"12105:18:31"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12129:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"12137:2:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12125:3:31"},"nodeType":"YulFunctionCall","src":"12125:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12098:6:31"},"nodeType":"YulFunctionCall","src":"12098:43:31"},"nodeType":"YulExpressionStatement","src":"12098:43:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12161:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12172:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12157:3:31"},"nodeType":"YulFunctionCall","src":"12157:19:31"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"12182:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"12190:2:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12178:3:31"},"nodeType":"YulFunctionCall","src":"12178:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12150:6:31"},"nodeType":"YulFunctionCall","src":"12150:44:31"},"nodeType":"YulExpressionStatement","src":"12150:44:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12214:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12225:3:31","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12210:3:31"},"nodeType":"YulFunctionCall","src":"12210:19:31"},{"kind":"number","nodeType":"YulLiteral","src":"12231:3:31","type":"","value":"192"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12203:6:31"},"nodeType":"YulFunctionCall","src":"12203:32:31"},"nodeType":"YulExpressionStatement","src":"12203:32:31"},{"nodeType":"YulAssignment","src":"12244:53:31","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"12269:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12281:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12292:3:31","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12277:3:31"},"nodeType":"YulFunctionCall","src":"12277:19:31"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"12252:16:31"},"nodeType":"YulFunctionCall","src":"12252:45:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12244:4:31"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_address_t_address_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_address_t_address_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11809:9:31","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11820:6:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11828:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11836:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11844:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11852:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11860:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11871:4:31","type":""}],"src":"11621:682:31"},{"body":{"nodeType":"YulBlock","src":"12389:170:31","statements":[{"body":{"nodeType":"YulBlock","src":"12435:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12444:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12447:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12437:6:31"},"nodeType":"YulFunctionCall","src":"12437:12:31"},"nodeType":"YulExpressionStatement","src":"12437:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12410:7:31"},{"name":"headStart","nodeType":"YulIdentifier","src":"12419:9:31"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12406:3:31"},"nodeType":"YulFunctionCall","src":"12406:23:31"},{"kind":"number","nodeType":"YulLiteral","src":"12431:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12402:3:31"},"nodeType":"YulFunctionCall","src":"12402:32:31"},"nodeType":"YulIf","src":"12399:52:31"},{"nodeType":"YulVariableDeclaration","src":"12460:29:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12479:9:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12473:5:31"},"nodeType":"YulFunctionCall","src":"12473:16:31"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12464:5:31","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12523:5:31"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"12498:24:31"},"nodeType":"YulFunctionCall","src":"12498:31:31"},"nodeType":"YulExpressionStatement","src":"12498:31:31"},{"nodeType":"YulAssignment","src":"12538:15:31","value":{"name":"value","nodeType":"YulIdentifier","src":"12548:5:31"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12538:6:31"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12355:9:31","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12366:7:31","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12378:6:31","type":""}],"src":"12308:251:31"},{"body":{"nodeType":"YulBlock","src":"12749:303:31","statements":[{"nodeType":"YulAssignment","src":"12759:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12771:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12782:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12767:3:31"},"nodeType":"YulFunctionCall","src":"12767:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12759:4:31"}]},{"nodeType":"YulVariableDeclaration","src":"12795:52:31","value":{"kind":"number","nodeType":"YulLiteral","src":"12805:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12799:2:31","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12863:9:31"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12878:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"12886:2:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12874:3:31"},"nodeType":"YulFunctionCall","src":"12874:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12856:6:31"},"nodeType":"YulFunctionCall","src":"12856:34:31"},"nodeType":"YulExpressionStatement","src":"12856:34:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12910:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12921:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12906:3:31"},"nodeType":"YulFunctionCall","src":"12906:18:31"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12930:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"12938:2:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12926:3:31"},"nodeType":"YulFunctionCall","src":"12926:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12899:6:31"},"nodeType":"YulFunctionCall","src":"12899:43:31"},"nodeType":"YulExpressionStatement","src":"12899:43:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12962:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"12973:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12958:3:31"},"nodeType":"YulFunctionCall","src":"12958:18:31"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12982:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"12990:2:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12978:3:31"},"nodeType":"YulFunctionCall","src":"12978:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12951:6:31"},"nodeType":"YulFunctionCall","src":"12951:43:31"},"nodeType":"YulExpressionStatement","src":"12951:43:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13014:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13025:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13010:3:31"},"nodeType":"YulFunctionCall","src":"13010:18:31"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13034:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"13042:2:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13030:3:31"},"nodeType":"YulFunctionCall","src":"13030:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13003:6:31"},"nodeType":"YulFunctionCall","src":"13003:43:31"},"nodeType":"YulExpressionStatement","src":"13003:43:31"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12694:9:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12705:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12713:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12721:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12729:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12740:4:31","type":""}],"src":"12564:488:31"},{"body":{"nodeType":"YulBlock","src":"13270:356:31","statements":[{"nodeType":"YulAssignment","src":"13280:27:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13292:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13303:3:31","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13288:3:31"},"nodeType":"YulFunctionCall","src":"13288:19:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13280:4:31"}]},{"nodeType":"YulVariableDeclaration","src":"13316:52:31","value":{"kind":"number","nodeType":"YulLiteral","src":"13326:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13320:2:31","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13384:9:31"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13399:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"13407:2:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13395:3:31"},"nodeType":"YulFunctionCall","src":"13395:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13377:6:31"},"nodeType":"YulFunctionCall","src":"13377:34:31"},"nodeType":"YulExpressionStatement","src":"13377:34:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13431:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13442:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13427:3:31"},"nodeType":"YulFunctionCall","src":"13427:18:31"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13451:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"13459:2:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13447:3:31"},"nodeType":"YulFunctionCall","src":"13447:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13420:6:31"},"nodeType":"YulFunctionCall","src":"13420:43:31"},"nodeType":"YulExpressionStatement","src":"13420:43:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13483:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13494:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13479:3:31"},"nodeType":"YulFunctionCall","src":"13479:18:31"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13503:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"13511:2:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13499:3:31"},"nodeType":"YulFunctionCall","src":"13499:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13472:6:31"},"nodeType":"YulFunctionCall","src":"13472:43:31"},"nodeType":"YulExpressionStatement","src":"13472:43:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13535:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13546:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13531:3:31"},"nodeType":"YulFunctionCall","src":"13531:18:31"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13555:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"13563:2:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13551:3:31"},"nodeType":"YulFunctionCall","src":"13551:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13524:6:31"},"nodeType":"YulFunctionCall","src":"13524:43:31"},"nodeType":"YulExpressionStatement","src":"13524:43:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13587:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"13598:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13583:3:31"},"nodeType":"YulFunctionCall","src":"13583:19:31"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"13608:6:31"},{"name":"_1","nodeType":"YulIdentifier","src":"13616:2:31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13604:3:31"},"nodeType":"YulFunctionCall","src":"13604:15:31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13576:6:31"},"nodeType":"YulFunctionCall","src":"13576:44:31"},"nodeType":"YulExpressionStatement","src":"13576:44:31"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13207:9:31","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13218:6:31","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13226:6:31","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13234:6:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13242:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13250:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13261:4:31","type":""}],"src":"13057:569:31"},{"body":{"nodeType":"YulBlock","src":"14020:423:31","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14037:3:31"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"14042:25:31","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14030:6:31"},"nodeType":"YulFunctionCall","src":"14030:38:31"},"nodeType":"YulExpressionStatement","src":"14030:38:31"},{"nodeType":"YulVariableDeclaration","src":"14077:27:31","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14097:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14091:5:31"},"nodeType":"YulFunctionCall","src":"14091:13:31"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14081:6:31","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14152:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"14160:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14148:3:31"},"nodeType":"YulFunctionCall","src":"14148:17:31"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14171:3:31"},{"kind":"number","nodeType":"YulLiteral","src":"14176:2:31","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14167:3:31"},"nodeType":"YulFunctionCall","src":"14167:12:31"},{"name":"length","nodeType":"YulIdentifier","src":"14181:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"14113:34:31"},"nodeType":"YulFunctionCall","src":"14113:75:31"},"nodeType":"YulExpressionStatement","src":"14113:75:31"},{"nodeType":"YulVariableDeclaration","src":"14197:26:31","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14211:3:31"},{"name":"length","nodeType":"YulIdentifier","src":"14216:6:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14207:3:31"},"nodeType":"YulFunctionCall","src":"14207:16:31"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14201:2:31","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"14243:2:31"},{"kind":"number","nodeType":"YulLiteral","src":"14247:2:31","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14239:3:31"},"nodeType":"YulFunctionCall","src":"14239:11:31"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"14252:19:31","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14232:6:31"},"nodeType":"YulFunctionCall","src":"14232:40:31"},"nodeType":"YulExpressionStatement","src":"14232:40:31"},{"nodeType":"YulVariableDeclaration","src":"14281:29:31","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14303:6:31"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14297:5:31"},"nodeType":"YulFunctionCall","src":"14297:13:31"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"14285:8:31","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14358:6:31"},{"kind":"number","nodeType":"YulLiteral","src":"14366:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14354:3:31"},"nodeType":"YulFunctionCall","src":"14354:17:31"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"14377:2:31"},{"kind":"number","nodeType":"YulLiteral","src":"14381:2:31","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14373:3:31"},"nodeType":"YulFunctionCall","src":"14373:11:31"},{"name":"length_1","nodeType":"YulIdentifier","src":"14386:8:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"14319:34:31"},"nodeType":"YulFunctionCall","src":"14319:76:31"},"nodeType":"YulExpressionStatement","src":"14319:76:31"},{"nodeType":"YulAssignment","src":"14404:33:31","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"14419:2:31"},{"name":"length_1","nodeType":"YulIdentifier","src":"14423:8:31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14415:3:31"},"nodeType":"YulFunctionCall","src":"14415:17:31"},{"kind":"number","nodeType":"YulLiteral","src":"14434:2:31","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14411:3:31"},"nodeType":"YulFunctionCall","src":"14411:26:31"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14404:3:31"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13988:3:31","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13993:6:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14001:6:31","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14012:3:31","type":""}],"src":"13631:812:31"},{"body":{"nodeType":"YulBlock","src":"14569:98:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14586:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"14597:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14579:6:31"},"nodeType":"YulFunctionCall","src":"14579:21:31"},"nodeType":"YulExpressionStatement","src":"14579:21:31"},{"nodeType":"YulAssignment","src":"14609:52:31","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14634:6:31"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14646:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"14657:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14642:3:31"},"nodeType":"YulFunctionCall","src":"14642:18:31"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"14617:16:31"},"nodeType":"YulFunctionCall","src":"14617:44:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14609:4:31"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14538:9:31","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14549:6:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14560:4:31","type":""}],"src":"14448:219:31"},{"body":{"nodeType":"YulBlock","src":"14704:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14721:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14724:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14714:6:31"},"nodeType":"YulFunctionCall","src":"14714:88:31"},"nodeType":"YulExpressionStatement","src":"14714:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14818:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14821:4:31","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14811:6:31"},"nodeType":"YulFunctionCall","src":"14811:15:31"},"nodeType":"YulExpressionStatement","src":"14811:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14842:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14845:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14835:6:31"},"nodeType":"YulFunctionCall","src":"14835:15:31"},"nodeType":"YulExpressionStatement","src":"14835:15:31"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"14672:184:31"},{"body":{"nodeType":"YulBlock","src":"14913:116:31","statements":[{"nodeType":"YulAssignment","src":"14923:20:31","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14938:1:31"},{"name":"y","nodeType":"YulIdentifier","src":"14941:1:31"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14934:3:31"},"nodeType":"YulFunctionCall","src":"14934:9:31"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"14923:7:31"}]},{"body":{"nodeType":"YulBlock","src":"15001:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15003:16:31"},"nodeType":"YulFunctionCall","src":"15003:18:31"},"nodeType":"YulExpressionStatement","src":"15003:18:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14972:1:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14965:6:31"},"nodeType":"YulFunctionCall","src":"14965:9:31"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14979:1:31"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"14986:7:31"},{"name":"x","nodeType":"YulIdentifier","src":"14995:1:31"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14982:3:31"},"nodeType":"YulFunctionCall","src":"14982:15:31"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14976:2:31"},"nodeType":"YulFunctionCall","src":"14976:22:31"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"14962:2:31"},"nodeType":"YulFunctionCall","src":"14962:37:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14955:6:31"},"nodeType":"YulFunctionCall","src":"14955:45:31"},"nodeType":"YulIf","src":"14952:71:31"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14892:1:31","type":""},{"name":"y","nodeType":"YulTypedName","src":"14895:1:31","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"14901:7:31","type":""}],"src":"14861:168:31"},{"body":{"nodeType":"YulBlock","src":"15066:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15083:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15086:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15076:6:31"},"nodeType":"YulFunctionCall","src":"15076:88:31"},"nodeType":"YulExpressionStatement","src":"15076:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15180:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15183:4:31","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15173:6:31"},"nodeType":"YulFunctionCall","src":"15173:15:31"},"nodeType":"YulExpressionStatement","src":"15173:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15204:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15207:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15197:6:31"},"nodeType":"YulFunctionCall","src":"15197:15:31"},"nodeType":"YulExpressionStatement","src":"15197:15:31"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"15034:184:31"},{"body":{"nodeType":"YulBlock","src":"15270:149:31","statements":[{"body":{"nodeType":"YulBlock","src":"15297:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15299:16:31"},"nodeType":"YulFunctionCall","src":"15299:18:31"},"nodeType":"YulExpressionStatement","src":"15299:18:31"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15290:5:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15283:6:31"},"nodeType":"YulFunctionCall","src":"15283:13:31"},"nodeType":"YulIf","src":"15280:39:31"},{"nodeType":"YulAssignment","src":"15328:85:31","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15339:5:31"},{"kind":"number","nodeType":"YulLiteral","src":"15346:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15335:3:31"},"nodeType":"YulFunctionCall","src":"15335:78:31"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"15328:3:31"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15252:5:31","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"15262:3:31","type":""}],"src":"15223:196:31"},{"body":{"nodeType":"YulBlock","src":"15598:182:31","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15615:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"15626:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15608:6:31"},"nodeType":"YulFunctionCall","src":"15608:21:31"},"nodeType":"YulExpressionStatement","src":"15608:21:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15649:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"15660:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15645:3:31"},"nodeType":"YulFunctionCall","src":"15645:18:31"},{"kind":"number","nodeType":"YulLiteral","src":"15665:2:31","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15638:6:31"},"nodeType":"YulFunctionCall","src":"15638:30:31"},"nodeType":"YulExpressionStatement","src":"15638:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15688:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"15699:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15684:3:31"},"nodeType":"YulFunctionCall","src":"15684:18:31"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"15704:34:31","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15677:6:31"},"nodeType":"YulFunctionCall","src":"15677:62:31"},"nodeType":"YulExpressionStatement","src":"15677:62:31"},{"nodeType":"YulAssignment","src":"15748:26:31","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15760:9:31"},{"kind":"number","nodeType":"YulLiteral","src":"15771:2:31","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15756:3:31"},"nodeType":"YulFunctionCall","src":"15756:18:31"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15748:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15575:9:31","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15589:4:31","type":""}],"src":"15424:356:31"},{"body":{"nodeType":"YulBlock","src":"15817:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15834:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15837:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15827:6:31"},"nodeType":"YulFunctionCall","src":"15827:88:31"},"nodeType":"YulExpressionStatement","src":"15827:88:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15931:1:31","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15934:4:31","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15924:6:31"},"nodeType":"YulFunctionCall","src":"15924:15:31"},"nodeType":"YulExpressionStatement","src":"15924:15:31"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15955:1:31","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15958:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15948:6:31"},"nodeType":"YulFunctionCall","src":"15948:15:31"},"nodeType":"YulExpressionStatement","src":"15948:15:31"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"15785:184:31"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint16_t_int24_t_uint16__to_t_uint16_t_int24_t_uint16__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), signextend(2, value1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_int24__to_t_int24__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, signextend(2, value0))\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IAlgebraPluginFactory_$4422__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IAlgebraVaultFactory_$5184__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := calldataload(add(headStart, 96))\n        validator_revert_address(value_3)\n        value3 := value_3\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_decode_tuple_t_int24(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, signextend(2, value))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, 0xff00000000000000000000000000000000000000000000000000000000000000)\n        mstore(add(pos, 1), and(shl(96, value0), 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000))\n        mstore(add(pos, 21), value1)\n        mstore(add(pos, 53), value2)\n        end := add(pos, 85)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Ownable2Step: caller is not the \")\n        mstore(add(headStart, 96), \"new owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_4923848de4258787551fdf161f1836f7adecfca5e0948f14f6ef0465d225420b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Can`t create custom pools\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_address_t_address_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_address_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), 192)\n        tail := abi_encode_bytes(value5, add(headStart, 192))\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}","id":31,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3218":[{"length":32,"start":1133},{"length":32,"start":1951},{"length":32,"start":3859},{"length":32,"start":6118}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106102ad5760003560e01c8063773265841161017b578063d547741f116100d8578063dc6fd8ab1161008c578063e8ae2b6911610071578063e8ae2b69146106d2578063f09489ac146106e5578063f2fde38b146106f857600080fd5b8063dc6fd8ab1461068d578063e30c3978146106b457600080fd5b8063d8ed2241116100bd578063d8ed224114610626578063d9a641e114610639578063dbbf3db41461067a57600080fd5b8063d547741f146105f3578063d8a06f731461060657600080fd5b806391d148541161012f578063b500a48b11610114578063b500a48b14610599578063ca15c873146105c0578063d0ad2792146105d357600080fd5b806391d148541461054b578063a217fddf1461059157600080fd5b80638d5a8711116101605780638d5a8711146105075780638da5cb5b1461051a5780639010d07c1461053857600080fd5b806377326584146104ec57806379ba5097146104ff57600080fd5b806329bc34461161022957806336568abe116101dd578063469388c4116101c2578063469388c4146104c85780635a6c72d0146104d0578063715018a6146104e457600080fd5b806336568abe146104a25780633ea7fbdb146104b557600080fd5b80632f8a39dd1161020e5780632f8a39dd146104475780633119049a14610468578063321935c61461048f57600080fd5b806329bc34461461040c5780632f2ff15d1461043457600080fd5b8063238a1d7411610280578063248a9ca311610265578063248a9ca3146103a157806325b355d6146103c45780632939dd97146103f957600080fd5b8063238a1d741461035057806323da36cc1461035a57600080fd5b806301ffc9a7146102b257806307810754146102da578063084bfff91461030f5780631ba89df414610318575b600080fd5b6102c56102c036600461242c565b61070b565b60405190151581526020015b60405180910390f35b6103017fc9cf812513d9983585eb40fcfe6fd49fbb6a45815663ec33b30a6c6c7de3683b81565b6040519081526020016102d1565b61030160065481565b61032b610326366004612490565b610767565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102d1565b6103586108c4565b005b61032b610368366004612490565b600a60209081526000938452604080852082529284528284209052825290205473ffffffffffffffffffffffffffffffffffffffff1681565b6103016103af3660046124db565b60009081526002602052604090206001015490565b6005546040805161ffff8084168252640100000000840460020b602083015262010000909304909216908201526060016102d1565b6103586104073660046124f4565b610916565b60055461042190640100000000900460020b81565b60405160029190910b81526020016102d1565b610358610442366004612511565b6109c0565b6005546104559061ffff1681565b60405161ffff90911681526020016102d1565b61032b7f000000000000000000000000000000000000000000000000000000000000000081565b61032b61049d36600461258a565b6109ea565b6103586104b0366004612511565b610a4c565b6103586104c33660046124f4565b610b04565b610358610bd3565b6005546104559062010000900461ffff1681565b610358610c32565b6103586104fa3660046125ef565b610ca3565b610358610d42565b6103586105153660046125ef565b610df7565b60005473ffffffffffffffffffffffffffffffffffffffff1661032b565b61032b610546366004612613565b610eb4565b6102c5610559366004612511565b600091825260026020908152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b610301600081565b6103017fb73ce166ead2f8e9add217713a7989e4edfba9625f71dfd2516204bb67ad344281565b6103016105ce3660046124db565b610ed3565b60075461032b9073ffffffffffffffffffffffffffffffffffffffff1681565b610358610601366004612511565b610eea565b60085461032b9073ffffffffffffffffffffffffffffffffffffffff1681565b61032b610634366004612635565b610f0f565b61032b610647366004612635565b600960209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b61032b610688366004612663565b611068565b6103017fb3fc09be5eb433d99b1ec89fd8435aaf5ffea75c1879e19028aa2414a14b3c8581565b60015473ffffffffffffffffffffffffffffffffffffffff1661032b565b6102c56106e0366004612511565b611163565b6103586106f33660046126f1565b6111f0565b6103586107063660046124f4565b6112a5565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f5a05180f000000000000000000000000000000000000000000000000000000001480610761575061076182611354565b92915050565b6040805173ffffffffffffffffffffffffffffffffffffffff80861660208301528085169282019290925290821660608201526000907f000000000000000000000000000000000000000000000000000000000000000090608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290528051602091820120610886939290917fb3fc09be5eb433d99b1ec89fd8435aaf5ffea75c1879e19028aa2414a14b3c8591017fff00000000000000000000000000000000000000000000000000000000000000815260609390931b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660018401526015830191909152603582015260550190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528051602090910120949350505050565b6108cc6113eb565b6006546000036108db57600080fd5b60006006556040514281527fa2492902a0a1d28dc73e6ab22e473239ef077bb7bc8174dc7dab9fc0818e7135906020015b60405180910390a1565b61091e6113eb565b60075473ffffffffffffffffffffffffffffffffffffffff9081169082160361094657600080fd5b600780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f5e38e259ec1f8a38b98fc65a27e266bb9cc87c76eb8c96c957450d1cff4591ef906020015b60405180910390a150565b6000828152600260205260409020600101546109db8161146e565b6109e58383611478565b505050565b60006109f461149a565b610a38600033878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061150d92505050565b9050610a446001600455565b949350505050565b73ffffffffffffffffffffffffffffffffffffffff81163314610af6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b610b008282611c4c565b5050565b610b0c6113eb565b60085473ffffffffffffffffffffffffffffffffffffffff90811690821603610b3457600080fd5b73ffffffffffffffffffffffffffffffffffffffff8116610b605760055461ffff1615610b6057600080fd5b600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527fa006ea05a14783821b0248e75d2342cd1681b07509e10a0f08487b080c29dea8906020016109b5565b610bdb6113eb565b60065415610be857600080fd5b4260068190557fcd60f5d54996130c21c3f063279b39230bcbafc12f763a1ac1dfaec2e9b61d2990610c1d6201518082612743565b6040805192835260208301919091520161090c565b610c3a6113eb565b600654600003610c4957600080fd5b6201518060065442610c5b9190612756565b1015610c6657600080fd5b6000600655610c73611c6e565b6040514281527fa24203c457ce43a097fa0c491fc9cf5e0a893af87a5e0a9785f29491deb11e239060200161090c565b610cab6113eb565b61c35061ffff82161115610cbe57600080fd5b60055461ffff808316620100009092041603610cd957600080fd5b600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffff166201000061ffff8416908102919091179091556040519081527fddc0c6f0b581e0d51bfe90ff138e4a548f94515c4dbcb12f5e98fdf0f7503983906020016109b5565b600154339073ffffffffffffffffffffffffffffffffffffffff168114610deb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060448201527f6e6577206f776e657200000000000000000000000000000000000000000000006064820152608401610aed565b610df481611c7c565b50565b610dff6113eb565b6103e861ffff82161115610e1257600080fd5b60055461ffff808316911603610e2757600080fd5b61ffff811615610e535760085473ffffffffffffffffffffffffffffffffffffffff16610e5357600080fd5b600580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff83169081179091556040519081527f6b5c342391f543846fce47a925e7eba910f7bec232b08633308ca93fdd0fdf0d906020016109b5565b6000828152600360205260408120610ecc9083611cf5565b9392505050565b600081815260036020526040812061076190611d01565b600082815260026020526040902060010154610f058161146e565b6109e58383611c4c565b60007f00000000000000000000000000000000000000000000000000000000000000008383604051602001610f6792919073ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052805160209182012061102b939290917fb3fc09be5eb433d99b1ec89fd8435aaf5ffea75c1879e19028aa2414a14b3c8591017fff00000000000000000000000000000000000000000000000000000000000000815260609390931b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660018401526015830191909152603582015260550190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209392505050565b600061107261149a565b3360009081527ff0b6a659b4f9a079190983c4f36c4a657949efea5d5056930e1cd964655ed049602052604090205460ff1661110a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f43616e60742063726561746520637573746f6d20706f6f6c73000000000000006044820152606401610aed565b61114d8787878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061150d92505050565b90506111596001600455565b9695505050505050565b60008173ffffffffffffffffffffffffffffffffffffffff1661119b60005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff161480610ecc5750600083815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915290205460ff16610ecc565b6111f86113eb565b6001600282900b121561120a57600080fd5b6101f4600282900b131561121d57600080fd5b6005546401000000009004600290810b9082900b0361123b57600080fd5b600580547fffffffffffffffffffffffffffffffffffffffffffffffffff000000ffffffff1664010000000062ffffff841602179055604051600282900b81527f7d7979096f943139ebee59f01c077a0f0766d06c40c86d596f23ed2561547cce906020016109b5565b6112ad6113eb565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915561130f60005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061076157507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610761565b60005473ffffffffffffffffffffffffffffffffffffffff16331461146c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610aed565b565b610df48133611d0b565b6114828282611dc5565b60008281526003602052604090206109e59082611eb9565b600260045403611506576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610aed565b6002600455565b60008273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361154757600080fd5b6000808473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1610611584578486611587565b85855b909250905073ffffffffffffffffffffffffffffffffffffffff82166115ac57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff8916156115f45773ffffffffffffffffffffffffffffffffffffffff89166000908152600a602052604090206115f7565b60095b73ffffffffffffffffffffffffffffffffffffffff8481166000908152602083815260408083208785168452909152902054919250161561163757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff8a1661170c5760075473ffffffffffffffffffffffffffffffffffffffff16156117075760075473ffffffffffffffffffffffffffffffffffffffff16631d0338d961169a8686610f0f565b8b600088888c6040518763ffffffff1660e01b81526004016116c1969594939291906127d7565b6020604051808303816000875af11580156116e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117049190612834565b90505b611789565b33631d0338d961171d8c8787610767565b8b8d88888c6040518763ffffffff1660e01b8152600401611743969594939291906127d7565b6020604051808303816000875af1158015611762573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117869190612834565b90505b6040517ffd82b73a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8281166004830152858116602483015284811660448301528b811660648301527f0000000000000000000000000000000000000000000000000000000000000000169063fd82b73a906084016020604051808303816000875af115801561182f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118539190612834565b945073ffffffffffffffffffffffffffffffffffffffff8a166119295760075473ffffffffffffffffffffffffffffffffffffffff1615611924576007546040517f8d5ef8d100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015287811660248301528c8116604483015290911690638d5ef8d190606401600060405180830381600087803b15801561190b57600080fd5b505af115801561191f573d6000803e3d6000fd5b505050505b6119b9565b6040517f8d5ef8d100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808316600483015280871660248301528b1660448201523390638d5ef8d190606401600060405180830381600087803b1580156119a057600080fd5b505af11580156119b4573d6000803e3d6000fd5b505050505b73ffffffffffffffffffffffffffffffffffffffff808516600081815260208581526040808320888616845282528083208054868c167fffffffffffffffffffffffff000000000000000000000000000000000000000091821681179092558884528285209585529490925290912080549092161790558a16611a8d5760405173ffffffffffffffffffffffffffffffffffffffff868116825280851691908616907f91ccaa7a278130b65168c3a0c8d3bcae84cf5e43704342bd3ec0b59e59c036db9060200160405180910390a3611ae3565b60405173ffffffffffffffffffffffffffffffffffffffff868116825280851691868216918d16907f8a5f030f5fc13b04a1e4ef7c47177e3d76b0e80e1d9be9843db37caa5b7b9b8f9060200160405180910390a45b60085473ffffffffffffffffffffffffffffffffffffffff1615611c3f576008546040517fb8a1d3c600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301528b811660248301528c8116604483015286811660648301528581166084830152600092169063b8a1d3c69060a4016020604051808303816000875af1158015611b94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb89190612834565b6040517fd8544cf300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192509087169063d8544cf390602401600060405180830381600087803b158015611c2557600080fd5b505af1158015611c39573d6000803e3d6000fd5b50505050505b5050505095945050505050565b611c568282611edb565b60008281526003602052604090206109e59082611f96565b611c766113eb565b61146c60005b611ca56000611ca060005473ffffffffffffffffffffffffffffffffffffffff1690565b611c4c565b611cae81611fb8565b60005473ffffffffffffffffffffffffffffffffffffffff1615610df457610df46000611cf060005473ffffffffffffffffffffffffffffffffffffffff1690565b611478565b6000610ecc8383611fe9565b6000610761825490565b600082815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610b0057611d4b81612013565b611d56836020612032565b604051602001611d67929190612851565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a0000000000000000000000000000000000000000000000000000000008252610aed916004016128d2565b600082815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610b0057600082815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055611e5b3390565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610ecc8373ffffffffffffffffffffffffffffffffffffffff8416612275565b600082815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff1615610b0057600082815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610ecc8373ffffffffffffffffffffffffffffffffffffffff84166122c4565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055610df4816123b7565b6000826000018281548110612000576120006128e5565b9060005260206000200154905092915050565b606061076173ffffffffffffffffffffffffffffffffffffffff831660145b60606000612041836002612914565b61204c906002612743565b67ffffffffffffffff8111156120645761206461292b565b6040519080825280601f01601f19166020018201604052801561208e576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106120c5576120c56128e5565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110612128576121286128e5565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000612164846002612914565b61216f906001612743565b90505b600181111561220c577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106121b0576121b06128e5565b1a60f81b8282815181106121c6576121c66128e5565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c936122058161295a565b9050612172565b508315610ecc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610aed565b60008181526001830160205260408120546122bc57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610761565b506000610761565b600081815260018301602052604081205480156123ad5760006122e8600183612756565b85549091506000906122fc90600190612756565b905081811461236157600086600001828154811061231c5761231c6128e5565b906000526020600020015490508087600001848154811061233f5761233f6128e5565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806123725761237261298f565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610761565b6000915050610761565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561243e57600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610ecc57600080fd5b73ffffffffffffffffffffffffffffffffffffffff81168114610df457600080fd5b6000806000606084860312156124a557600080fd5b83356124b08161246e565b925060208401356124c08161246e565b915060408401356124d08161246e565b809150509250925092565b6000602082840312156124ed57600080fd5b5035919050565b60006020828403121561250657600080fd5b8135610ecc8161246e565b6000806040838503121561252457600080fd5b8235915060208301356125368161246e565b809150509250929050565b60008083601f84011261255357600080fd5b50813567ffffffffffffffff81111561256b57600080fd5b60208301915083602082850101111561258357600080fd5b9250929050565b600080600080606085870312156125a057600080fd5b84356125ab8161246e565b935060208501356125bb8161246e565b9250604085013567ffffffffffffffff8111156125d757600080fd5b6125e387828801612541565b95989497509550505050565b60006020828403121561260157600080fd5b813561ffff81168114610ecc57600080fd5b6000806040838503121561262657600080fd5b50508035926020909101359150565b6000806040838503121561264857600080fd5b82356126538161246e565b915060208301356125368161246e565b60008060008060008060a0878903121561267c57600080fd5b86356126878161246e565b955060208701356126978161246e565b945060408701356126a78161246e565b935060608701356126b78161246e565b9250608087013567ffffffffffffffff8111156126d357600080fd5b6126df89828a01612541565b979a9699509497509295939492505050565b60006020828403121561270357600080fd5b81358060020b8114610ecc57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561076157610761612714565b8181038181111561076157610761612714565b60005b8381101561278457818101518382015260200161276c565b50506000910152565b600081518084526127a5816020860160208601612769565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600073ffffffffffffffffffffffffffffffffffffffff808916835280881660208401528087166040840152808616606084015280851660808401525060c060a083015261282860c083018461278d565b98975050505050505050565b60006020828403121561284657600080fd5b8151610ecc8161246e565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612889816017850160208801612769565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516128c6816028840160208801612769565b01602801949350505050565b602081526000610ecc602083018461278d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b808202811582820484141761076157610761612714565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008161296957612969612714565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2AD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x77326584 GT PUSH2 0x17B JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0xDC6FD8AB GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xE8AE2B69 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE8AE2B69 EQ PUSH2 0x6D2 JUMPI DUP1 PUSH4 0xF09489AC EQ PUSH2 0x6E5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDC6FD8AB EQ PUSH2 0x68D JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x6B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD8ED2241 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xD8ED2241 EQ PUSH2 0x626 JUMPI DUP1 PUSH4 0xD9A641E1 EQ PUSH2 0x639 JUMPI DUP1 PUSH4 0xDBBF3DB4 EQ PUSH2 0x67A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD547741F EQ PUSH2 0x5F3 JUMPI DUP1 PUSH4 0xD8A06F73 EQ PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0x12F JUMPI DUP1 PUSH4 0xB500A48B GT PUSH2 0x114 JUMPI DUP1 PUSH4 0xB500A48B EQ PUSH2 0x599 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0xD0AD2792 EQ PUSH2 0x5D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8D5A8711 GT PUSH2 0x160 JUMPI DUP1 PUSH4 0x8D5A8711 EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x77326584 EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29BC3446 GT PUSH2 0x229 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x469388C4 GT PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x469388C4 EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0x5A6C72D0 EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0x3EA7FBDB EQ PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F8A39DD GT PUSH2 0x20E JUMPI DUP1 PUSH4 0x2F8A39DD EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0x3119049A EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x321935C6 EQ PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29BC3446 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x238A1D74 GT PUSH2 0x280 JUMPI DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x265 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x25B355D6 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x2939DD97 EQ PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x238A1D74 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0x23DA36CC EQ PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x7810754 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x84BFFF9 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x1BA89DF4 EQ PUSH2 0x318 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C5 PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x242C JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x301 PUSH32 0xC9CF812513D9983585EB40FCFE6FD49FBB6A45815663EC33B30A6C6C7DE3683B DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D1 JUMP JUMPDEST PUSH2 0x301 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x32B PUSH2 0x326 CALLDATASIZE PUSH1 0x4 PUSH2 0x2490 JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D1 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x8C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32B PUSH2 0x368 CALLDATASIZE PUSH1 0x4 PUSH2 0x2490 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP3 MSTORE SWAP3 DUP5 MSTORE DUP3 DUP5 KECCAK256 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x301 PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH5 0x100000000 DUP5 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x10000 SWAP1 SWAP4 DIV SWAP1 SWAP3 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x2D1 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x407 CALLDATASIZE PUSH1 0x4 PUSH2 0x24F4 JUMP JUMPDEST PUSH2 0x916 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x421 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x2 SWAP2 SWAP1 SWAP2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D1 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x442 CALLDATASIZE PUSH1 0x4 PUSH2 0x2511 JUMP JUMPDEST PUSH2 0x9C0 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x455 SWAP1 PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D1 JUMP JUMPDEST PUSH2 0x32B PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x32B PUSH2 0x49D CALLDATASIZE PUSH1 0x4 PUSH2 0x258A JUMP JUMPDEST PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x358 PUSH2 0x4B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2511 JUMP JUMPDEST PUSH2 0xA4C JUMP JUMPDEST PUSH2 0x358 PUSH2 0x4C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x24F4 JUMP JUMPDEST PUSH2 0xB04 JUMP JUMPDEST PUSH2 0x358 PUSH2 0xBD3 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x455 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x358 PUSH2 0xC32 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x4FA CALLDATASIZE PUSH1 0x4 PUSH2 0x25EF JUMP JUMPDEST PUSH2 0xCA3 JUMP JUMPDEST PUSH2 0x358 PUSH2 0xD42 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x515 CALLDATASIZE PUSH1 0x4 PUSH2 0x25EF JUMP JUMPDEST PUSH2 0xDF7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x32B JUMP JUMPDEST PUSH2 0x32B PUSH2 0x546 CALLDATASIZE PUSH1 0x4 PUSH2 0x2613 JUMP JUMPDEST PUSH2 0xEB4 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x559 CALLDATASIZE PUSH1 0x4 PUSH2 0x2511 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x301 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x301 PUSH32 0xB73CE166EAD2F8E9ADD217713A7989E4EDFBA9625F71DFD2516204BB67AD3442 DUP2 JUMP JUMPDEST PUSH2 0x301 PUSH2 0x5CE CALLDATASIZE PUSH1 0x4 PUSH2 0x24DB JUMP JUMPDEST PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x32B SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x601 CALLDATASIZE PUSH1 0x4 PUSH2 0x2511 JUMP JUMPDEST PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x32B SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x32B PUSH2 0x634 CALLDATASIZE PUSH1 0x4 PUSH2 0x2635 JUMP JUMPDEST PUSH2 0xF0F JUMP JUMPDEST PUSH2 0x32B PUSH2 0x647 CALLDATASIZE PUSH1 0x4 PUSH2 0x2635 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x32B PUSH2 0x688 CALLDATASIZE PUSH1 0x4 PUSH2 0x2663 JUMP JUMPDEST PUSH2 0x1068 JUMP JUMPDEST PUSH2 0x301 PUSH32 0xB3FC09BE5EB433D99B1EC89FD8435AAF5FFEA75C1879E19028AA2414A14B3C85 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x32B JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x6E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2511 JUMP JUMPDEST PUSH2 0x1163 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x6F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x26F1 JUMP JUMPDEST PUSH2 0x11F0 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x706 CALLDATASIZE PUSH1 0x4 PUSH2 0x24F4 JUMP JUMPDEST PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x761 JUMPI POP PUSH2 0x761 DUP3 PUSH2 0x1354 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 DUP6 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH2 0x886 SWAP4 SWAP3 SWAP1 SWAP2 PUSH32 0xB3FC09BE5EB433D99B1EC89FD8435AAF5FFEA75C1879E19028AA2414A14B3C85 SWAP2 ADD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH1 0x1 DUP5 ADD MSTORE PUSH1 0x15 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x35 DUP3 ADD MSTORE PUSH1 0x55 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x8CC PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SUB PUSH2 0x8DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0xA2492902A0A1D28DC73E6AB22E473239EF077BB7BC8174DC7DAB9FC0818E7135 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x91E PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP3 AND SUB PUSH2 0x946 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x5E38E259EC1F8A38B98FC65A27E266BB9CC87C76EB8C96C957450D1CFF4591EF SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x9DB DUP2 PUSH2 0x146E JUMP JUMPDEST PUSH2 0x9E5 DUP4 DUP4 PUSH2 0x1478 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F4 PUSH2 0x149A JUMP JUMPDEST PUSH2 0xA38 PUSH1 0x0 CALLER DUP8 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x150D SWAP3 POP POP POP JUMP JUMPDEST SWAP1 POP PUSH2 0xA44 PUSH1 0x1 PUSH1 0x4 SSTORE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND CALLER EQ PUSH2 0xAF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB00 DUP3 DUP3 PUSH2 0x1C4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB0C PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP3 AND SUB PUSH2 0xB34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xB60 JUMPI PUSH1 0x5 SLOAD PUSH2 0xFFFF AND ISZERO PUSH2 0xB60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xA006EA05A14783821B0248E75D2342CD1681B07509E10A0F08487B080C29DEA8 SWAP1 PUSH1 0x20 ADD PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0xBDB PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x6 SLOAD ISZERO PUSH2 0xBE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH32 0xCD60F5D54996130C21C3F063279B39230BCBAFC12F763A1AC1DFAEC2E9B61D29 SWAP1 PUSH2 0xC1D PUSH3 0x15180 DUP3 PUSH2 0x2743 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x90C JUMP JUMPDEST PUSH2 0xC3A PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SUB PUSH2 0xC49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x15180 PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0xC5B SWAP2 SWAP1 PUSH2 0x2756 JUMP JUMPDEST LT ISZERO PUSH2 0xC66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 SSTORE PUSH2 0xC73 PUSH2 0x1C6E JUMP JUMPDEST PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0xA24203C457CE43A097FA0C491FC9CF5E0A893AF87A5E0A9785F29491DEB11E23 SWAP1 PUSH1 0x20 ADD PUSH2 0x90C JUMP JUMPDEST PUSH2 0xCAB PUSH2 0x13EB JUMP JUMPDEST PUSH2 0xC350 PUSH2 0xFFFF DUP3 AND GT ISZERO PUSH2 0xCBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xFFFF DUP1 DUP4 AND PUSH3 0x10000 SWAP1 SWAP3 DIV AND SUB PUSH2 0xCD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFF AND PUSH3 0x10000 PUSH2 0xFFFF DUP5 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDC0C6F0B581E0D51BFE90FF138E4A548F94515C4DBCB12F5E98FDF0F7503983 SWAP1 PUSH1 0x20 ADD PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLER SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 EQ PUSH2 0xDEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6577206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAED JUMP JUMPDEST PUSH2 0xDF4 DUP2 PUSH2 0x1C7C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xDFF PUSH2 0x13EB JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xFFFF DUP3 AND GT ISZERO PUSH2 0xE12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xFFFF DUP1 DUP4 AND SWAP2 AND SUB PUSH2 0xE27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFFFF DUP2 AND ISZERO PUSH2 0xE53 JUMPI PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 AND PUSH2 0xFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x6B5C342391F543846FCE47A925E7EBA910F7BEC232B08633308CA93FDD0FDF0D SWAP1 PUSH1 0x20 ADD PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xECC SWAP1 DUP4 PUSH2 0x1CF5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x761 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xF05 DUP2 PUSH2 0x146E JUMP JUMPDEST PUSH2 0x9E5 DUP4 DUP4 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF67 SWAP3 SWAP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH2 0x102B SWAP4 SWAP3 SWAP1 SWAP2 PUSH32 0xB3FC09BE5EB433D99B1EC89FD8435AAF5FFEA75C1879E19028AA2414A14B3C85 SWAP2 ADD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH1 0x1 DUP5 ADD MSTORE PUSH1 0x15 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x35 DUP3 ADD MSTORE PUSH1 0x55 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1072 PUSH2 0x149A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xF0B6A659B4F9A079190983C4F36C4A657949EFEA5D5056930E1CD964655ED049 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x110A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E60742063726561746520637573746F6D20706F6F6C7300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAED JUMP JUMPDEST PUSH2 0x114D DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x150D SWAP3 POP POP POP JUMP JUMPDEST SWAP1 POP PUSH2 0x1159 PUSH1 0x1 PUSH1 0x4 SSTORE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x119B PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xECC JUMPI POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xECC JUMP JUMPDEST PUSH2 0x11F8 PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP3 SWAP1 SIGNEXTEND SLT ISZERO PUSH2 0x120A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F4 PUSH1 0x2 DUP3 SWAP1 SIGNEXTEND SGT ISZERO PUSH2 0x121D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SUB PUSH2 0x123B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000FFFFFFFF AND PUSH5 0x100000000 PUSH3 0xFFFFFF DUP5 AND MUL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x2 DUP3 SWAP1 SIGNEXTEND DUP2 MSTORE PUSH32 0x7D7979096F943139EBEE59F01C077A0F0766D06C40C86D596F23ED2561547CCE SWAP1 PUSH1 0x20 ADD PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x12AD PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x130F PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x761 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ PUSH2 0x761 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x146C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAED JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDF4 DUP2 CALLER PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0x1482 DUP3 DUP3 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x9E5 SWAP1 DUP3 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 SLOAD SUB PUSH2 0x1506 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAED JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x1584 JUMPI DUP5 DUP7 PUSH2 0x1587 JUMP JUMPDEST DUP6 DUP6 JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x15AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND ISZERO PUSH2 0x15F4 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x15F7 JUMP JUMPDEST PUSH1 0x9 JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP3 POP AND ISZERO PUSH2 0x1637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH2 0x170C JUMPI PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x1707 JUMPI PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D0338D9 PUSH2 0x169A DUP7 DUP7 PUSH2 0xF0F JUMP JUMPDEST DUP12 PUSH1 0x0 DUP9 DUP9 DUP13 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C1 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1704 SWAP2 SWAP1 PUSH2 0x2834 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1789 JUMP JUMPDEST CALLER PUSH4 0x1D0338D9 PUSH2 0x171D DUP13 DUP8 DUP8 PUSH2 0x767 JUMP JUMPDEST DUP12 DUP14 DUP9 DUP9 DUP13 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1743 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1762 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1786 SWAP2 SWAP1 PUSH2 0x2834 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFD82B73A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE DUP12 DUP2 AND PUSH1 0x64 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xFD82B73A SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x182F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1853 SWAP2 SWAP1 PUSH2 0x2834 JUMP JUMPDEST SWAP5 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH2 0x1929 JUMPI PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x1924 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH32 0x8D5EF8D100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP13 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x8D5EF8D1 SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x190B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x191F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8D5EF8D100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP1 DUP8 AND PUSH1 0x24 DUP4 ADD MSTORE DUP12 AND PUSH1 0x44 DUP3 ADD MSTORE CALLER SWAP1 PUSH4 0x8D5EF8D1 SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP7 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 DUP13 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE DUP9 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 DUP6 MSTORE SWAP5 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE DUP11 AND PUSH2 0x1A8D JUMPI PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND DUP3 MSTORE DUP1 DUP6 AND SWAP2 SWAP1 DUP7 AND SWAP1 PUSH32 0x91CCAA7A278130B65168C3A0C8D3BCAE84CF5E43704342BD3EC0B59E59C036DB SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND DUP3 MSTORE DUP1 DUP6 AND SWAP2 DUP7 DUP3 AND SWAP2 DUP14 AND SWAP1 PUSH32 0x8A5F030F5FC13B04A1E4EF7C47177E3D76B0E80E1D9BE9843DB37CAA5B7B9B8F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x1C3F JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH32 0xB8A1D3C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP13 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x64 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xB8A1D3C6 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BB8 SWAP2 SWAP1 PUSH2 0x2834 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD8544CF300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP8 AND SWAP1 PUSH4 0xD8544CF3 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1C56 DUP3 DUP3 PUSH2 0x1EDB JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x9E5 SWAP1 DUP3 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0x1C76 PUSH2 0x13EB JUMP JUMPDEST PUSH2 0x146C PUSH1 0x0 JUMPDEST PUSH2 0x1CA5 PUSH1 0x0 PUSH2 0x1CA0 PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x1CAE DUP2 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0xDF4 JUMPI PUSH2 0xDF4 PUSH1 0x0 PUSH2 0x1CF0 PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECC DUP4 DUP4 PUSH2 0x1FE9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x761 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB00 JUMPI PUSH2 0x1D4B DUP2 PUSH2 0x2013 JUMP JUMPDEST PUSH2 0x1D56 DUP4 PUSH1 0x20 PUSH2 0x2032 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D67 SWAP3 SWAP2 SWAP1 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH2 0xAED SWAP2 PUSH1 0x4 ADD PUSH2 0x28D2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB00 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1E5B CALLER SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECC DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x2275 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB00 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECC DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE PUSH2 0xDF4 DUP2 PUSH2 0x23B7 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2000 JUMPI PUSH2 0x2000 PUSH2 0x28E5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x761 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2041 DUP4 PUSH1 0x2 PUSH2 0x2914 JUMP JUMPDEST PUSH2 0x204C SWAP1 PUSH1 0x2 PUSH2 0x2743 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2064 JUMPI PUSH2 0x2064 PUSH2 0x292B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x208E JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x20C5 JUMPI PUSH2 0x20C5 PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2128 JUMPI PUSH2 0x2128 PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x2164 DUP5 PUSH1 0x2 PUSH2 0x2914 JUMP JUMPDEST PUSH2 0x216F SWAP1 PUSH1 0x1 PUSH2 0x2743 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x220C JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x21B0 JUMPI PUSH2 0x21B0 PUSH2 0x28E5 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x21C6 JUMPI PUSH2 0x21C6 PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x2205 DUP2 PUSH2 0x295A JUMP JUMPDEST SWAP1 POP PUSH2 0x2172 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xECC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAED JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x22BC JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x761 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x23AD JUMPI PUSH1 0x0 PUSH2 0x22E8 PUSH1 0x1 DUP4 PUSH2 0x2756 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x22FC SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2756 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x2361 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x231C JUMPI PUSH2 0x231C PUSH2 0x28E5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x233F JUMPI PUSH2 0x233F PUSH2 0x28E5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x2372 JUMPI PUSH2 0x2372 PUSH2 0x298F JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x761 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x761 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x243E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0xECC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xDF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x24B0 DUP2 PUSH2 0x246E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x24C0 DUP2 PUSH2 0x246E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x24D0 DUP2 PUSH2 0x246E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xECC DUP2 PUSH2 0x246E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2536 DUP2 PUSH2 0x246E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x256B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x25A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x25AB DUP2 PUSH2 0x246E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x25BB DUP2 PUSH2 0x246E JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25E3 DUP8 DUP3 DUP9 ADD PUSH2 0x2541 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0xECC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2653 DUP2 PUSH2 0x246E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2536 DUP2 PUSH2 0x246E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x267C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2687 DUP2 PUSH2 0x246E JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x2697 DUP2 PUSH2 0x246E JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x26A7 DUP2 PUSH2 0x246E JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x26B7 DUP2 PUSH2 0x246E JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26DF DUP10 DUP3 DUP11 ADD PUSH2 0x2541 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 PUSH1 0x2 SIGNEXTEND DUP2 EQ PUSH2 0xECC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x761 JUMPI PUSH2 0x761 PUSH2 0x2714 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x761 JUMPI PUSH2 0x761 PUSH2 0x2714 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2784 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x276C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x27A5 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2769 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP10 AND DUP4 MSTORE DUP1 DUP9 AND PUSH1 0x20 DUP5 ADD MSTORE DUP1 DUP8 AND PUSH1 0x40 DUP5 ADD MSTORE DUP1 DUP7 AND PUSH1 0x60 DUP5 ADD MSTORE DUP1 DUP6 AND PUSH1 0x80 DUP5 ADD MSTORE POP PUSH1 0xC0 PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x2828 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x278D JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xECC DUP2 PUSH2 0x246E JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x2889 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2769 JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x28C6 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2769 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xECC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x278D JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x761 JUMPI PUSH2 0x761 PUSH2 0x2714 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2969 JUMPI PUSH2 0x2969 PUSH2 0x2714 JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"690:9018:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;634:212:1;;;;;;:::i;:::-;;:::i;:::-;;;516:14:31;;509:22;491:41;;479:2;464:18;634:212:1;;;;;;;;1010:89:15;;1066:33;1010:89;;;;;689:25:31;;;677:2;662:18;1010:89:15;543:177:31;1455:55:15;;;;;;3570:317;;;;;;:::i;:::-;;:::i;:::-;;;1776:42:31;1764:55;;;1746:74;;1734:2;1719:18;3570:317:15;1600:226:31;8532:207:15;;;:::i;:::-;;1960:100;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4504:129:0;;;;;;:::i;:::-;4578:7;4604:12;;;:6;:12;;;;;:22;;;;4504:129;3041:194:15;3178:19;;3041:194;;;3178:19;;;;2235:34:31;;3199:18:15;;;;;2300:2:31;2285:18;;2278:49;3219:10:15;;;;;;;2343:18:31;;;2336:43;2198:2;2183:18;3041:194:15;2016:369:31;7508:301:15;;;;;;:::i;:::-;;:::i;1376:40::-;;;;;;;;;;;;;;;2813:1:31;2802:21;;;;2784:40;;2772:2;2757:18;1376:40:15;2642:188:31;4929:145:0;;;;;;:::i;:::-;;:::i;1223:42:15:-;;;;;;;;;;;;3329:6:31;3317:19;;;3299:38;;3287:2;3272:18;1223:42:15;3155:188:31;1138:46:15;;;;;3925:202;;;;;;:::i;:::-;;:::i;6038:214:0:-;;;;;;:::i;:::-;;:::i;7847:310:15:-;;;;;;:::i;:::-;;:::i;8195:299::-;;;:::i;1304:33::-;;;;;;;;;;;;9009:327;;;:::i;6804:245::-;;;;;;:::i;:::-;;:::i;1734:212:5:-;;;:::i;6355:411:15:-;;;;;;:::i;:::-;;:::i;2691:113::-;2764:7;1273:6:4;;;2691:113:15;;1431:151:1;;;;;;:::i;:::-;;:::i;3021:145:0:-;;;;;;:::i;:::-;3107:4;3130:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;;;;;;3021:145;2153:49;;2198:4;2153:49;;827:92:15;;887:32;827:92;;1750:140:1;;;;;;:::i;:::-;;:::i;1680:49:15:-;;;;;;;;;5354:147:0;;;;;;:::i;:::-;;:::i;1768:40:15:-;;;;;;;;;3273:259;;;;;;:::i;:::-;;:::i;1847:74::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4165:353;;;;;;:::i;:::-;;:::i;2197:112::-;;2243:66;2197:112;;847:99:5;926:13;;;;847:99;;2842:161:15;;;;;;:::i;:::-;;:::i;7087:383::-;;;;;;:::i;:::-;;:::i;1139:178:5:-;;;;;;:::i;:::-;;:::i;634:212:1:-;719:4;742:57;;;757:42;742:57;;:97;;;803:36;827:11;803:23;:36::i;:::-;735:104;634:212;-1:-1:-1;;634:212:1:o;3570:317:15:-;3814:36;;;7298:42:31;7367:15;;;3814:36:15;;;7349:34:31;7419:15;;;7399:18;;;7392:43;;;;7471:15;;;7451:18;;;7444:43;3684:18:15;;3790:12;;7261:18:31;;3814:36:15;;;;;;;;;;;;;;3804:47;;3814:36;3804:47;;;;3764:109;;;3804:47;;2243:66;;3764:109;7796:66:31;7784:79;;7900:2;7896:15;;;;7913:66;7892:88;7888:1;7879:11;;7872:109;8006:2;7997:12;;7990:28;;;;8043:2;8034:12;;8027:28;8080:2;8071:12;;7498:591;3764:109:15;;;;;;;;;;;;;;3754:120;;3764:109;3754:120;;;;;3570:317;-1:-1:-1;;;;3570:317:15:o;8532:207::-;1094:13:4;:11;:13::i;:::-;8607:31:15::1;;8642:1;8607:36:::0;8599:45:::1;;;::::0;::::1;;8684:1;8650:31;:35:::0;8696:38:::1;::::0;8718:15:::1;689:25:31::0;;8696:38:15::1;::::0;677:2:31;662:18;8696:38:15::1;;;;;;;;8532:207::o:0;7508:301::-;1094:13:4;:11;:13::i;:::-;7651:20:15::1;::::0;::::1;::::0;;::::1;7616:56:::0;;::::1;::::0;7608:65:::1;;;::::0;::::1;;7679:20;:69:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;7759:45:::1;::::0;1746:74:31;;;7759:45:15::1;::::0;1734:2:31;1719:18;7759:45:15::1;;;;;;;;7508:301:::0;:::o;4929:145:0:-;4578:7;4604:12;;;:6;:12;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;3925:202:15:-;4038:12;2261:21:6;:19;:21::i;:::-;4065:57:15::1;4085:1;4089:10;4101:6;4109;4117:4;;4065:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;4065:11:15::1;::::0;-1:-1:-1;;;4065:57:15:i:1;:::-;4058:64;;2303:20:6::0;1716:1;2809:7;:22;2629:209;2303:20;3925:202:15;;;;;;:::o;6038:214:0:-;6133:23;;;719:10:7;6133:23:0;6125:83;;;;;;;8296:2:31;6125:83:0;;;8278:21:31;8335:2;8315:18;;;8308:30;8374:34;8354:18;;;8347:62;8445:17;8425:18;;;8418:45;8480:19;;6125:83:0;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;7847:310:15:-;1094:13:4;:11;:13::i;:::-;7966:12:15::1;::::0;::::1;::::0;;::::1;7939:40:::0;;::::1;::::0;7931:49:::1;;;::::0;::::1;;7990:29;::::0;::::1;7986:68;;8029:19;::::0;::::1;;:24:::0;8021:33:::1;;;::::0;::::1;;8060:12;:52:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;8123:29:::1;::::0;1746:74:31;;;8123:29:15::1;::::0;1734:2:31;1719:18;8123:29:15::1;1600:226:31::0;8195:299:15;1094:13:4;:11;:13::i;:::-;8271:31:15::1;::::0;:36;8263:45:::1;;;::::0;::::1;;8348:15;8314:31;:49:::0;;;8374:115:::1;::::0;8430:58:::1;1635:6;8348:15:::0;8430:58:::1;:::i;:::-;8374:115;::::0;;9003:25:31;;;9059:2;9044:18;;9037:34;;;;8976:18;8374:115:15::1;8829:248:31::0;9009:327:15;1094:13:4;:11;:13::i;:::-;9078:31:15::1;;9113:1;9078:36:::0;9070:45:::1;;;::::0;::::1;;1635:6;9147:31;;9129:15;:49;;;;:::i;:::-;:77;;9121:86;;;::::0;::::1;;9247:1;9213:31;:35:::0;9255:25:::1;:23;:25::i;:::-;9291:40;::::0;9315:15:::1;689:25:31::0;;9291:40:15::1;::::0;677:2:31;662:18;9291:40:15::1;543:177:31::0;6804:245:15;1094:13:4;:11;:13::i;:::-;702:3:28::1;6891:42:15;::::0;::::1;;;6883:51;;;::::0;::::1;;6948:10;::::0;:27:::1;::::0;;::::1;:10:::0;;;::::1;;:27:::0;6940:36:::1;;;::::0;::::1;;6982:10;:26:::0;;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;7019:25:::1;::::0;3299:38:31;;;7019:25:15::1;::::0;3287:2:31;3272:18;7019:25:15::1;3155:188:31::0;1734:212:5;926:13;;719:10:7;;1833:24:5;926:13;1833:24;;1825:78;;;;;;;9417:2:31;1825:78:5;;;9399:21:31;9456:2;9436:18;;;9429:30;9495:34;9475:18;;;9468:62;9566:11;9546:18;;;9539:39;9595:19;;1825:78:5;9215:405:31;1825:78:5;1913:26;1932:6;1913:18;:26::i;:::-;1776:170;1734:212::o;6355:411:15:-;1094:13:4;:11;:13::i;:::-;1241:3:28::1;6460:53:15;::::0;::::1;;;6452:62;;;::::0;::::1;;6528:19;::::0;:45:::1;::::0;;::::1;:19:::0;::::1;:45:::0;6520:54:::1;;;::::0;::::1;;6584:27;::::0;::::1;::::0;6580:77:::1;;6629:12;::::0;6621:35:::1;6629:12;6613:44;;;::::0;::::1;;6663:19;:44:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;6718:43:::1;::::0;3299:38:31;;;6718:43:15::1;::::0;3287:2:31;3272:18;6718:43:15::1;3155:188:31::0;1431:151:1;1521:7;1547:18;;;:12;:18;;;;;:28;;1569:5;1547:21;:28::i;:::-;1540:35;1431:151;-1:-1:-1;;;1431:151:1:o;1750:140::-;1830:7;1856:18;;;:12;:18;;;;;:27;;:25;:27::i;5354:147:0:-;4578:7;4604:12;;;:6;:12;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;3273:259:15:-:0;3363:12;3450;3485:6;3493;3474:26;;;;;;;;9809:42:31;9878:15;;;9860:34;;9930:15;;9925:2;9910:18;;9903:43;9787:2;9772:18;;9625:327;3474:26:15;;;;;;;;;;;;;;;3464:37;;3474:26;3464:37;;;;3424:99;;;3464:37;;2243:66;;3424:99;7796:66:31;7784:79;;7900:2;7896:15;;;;7913:66;7892:88;7888:1;7879:11;;7872:109;8006:2;7997:12;;7990:28;;;;8043:2;8034:12;;8027:28;8080:2;8071:12;;7498:591;3424:99:15;;;;;;;;;;;;;;3414:110;;3424:99;3414:110;;;;;3273:259;-1:-1:-1;;;3273:259:15:o;4165:353::-;4343:18;2261:21:6;:19;:21::i;:::-;4407:10:15::1;3107:4:0::0;3130:29;;;:12;;:29;:12;:29;;;;;4369:79:15::1;;;::::0;::::1;::::0;;10159:2:31;4369:79:15::1;::::0;::::1;10141:21:31::0;10198:2;10178:18;;;10171:30;10237:27;10217:18;;;10210:55;10282:18;;4369:79:15::1;9957:349:31::0;4369:79:15::1;4461:52;4473:8;4483:7;4492:6;4500;4508:4;;4461:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;4461:11:15::1;::::0;-1:-1:-1;;;4461:52:15:i:1;:::-;4454:59;;2303:20:6::0;1716:1;2809:7;:22;2629:209;2303:20;4165:353:15;;;;;;;;:::o;2842:161::-;2927:4;2958:7;2947:18;;:7;2764;1273:6:4;;;;2691:113:15;2947:7;:18;;;:50;;;-1:-1:-1;3107:4:0;3130:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;;;2969:28:15;3021:145:0;7087:383:15;1094:13:4;:11;:13::i;:::-;914:1:28::1;7189:51:15;::::0;;::::1;;;7181:60;;;::::0;::::1;;864:3:28;7255:51:15;::::0;;::::1;;;7247:60;;;::::0;::::1;;7346:18;::::0;;;::::1;;::::0;;::::1;7321:43:::0;;;::::1;::::0;7313:52:::1;;;::::0;::::1;;7371:18;:42:::0;;;::::1;::::0;::::1;::::0;;::::1;;::::0;;7424:41:::1;::::0;2813:1:31;2802:21;;;2784:40;;7424:41:15::1;::::0;2772:2:31;2757:18;7424:41:15::1;2642:188:31::0;1139:178:5;1094:13:4;:11;:13::i;:::-;1228::5::1;:24:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;1292:7:::1;2764::15::0;1273:6:4;;;;2691:113:15;1292:7:5::1;1267:43;;;;;;;;;;;;1139:178:::0;:::o;2732:202:0:-;2817:4;2840:47;;;2855:32;2840:47;;:87;;-1:-1:-1;952:25:9;937:40;;;;2891:36:0;829:155:9;1359:130:4;2764:7:15;1273:6:4;1422:23;1273:6;719:10:7;1422:23:4;1414:68;;;;;;;10513:2:31;1414:68:4;;;10495:21:31;;;10532:18;;;10525:30;10591:34;10571:18;;;10564:62;10643:18;;1414:68:4;10311:356:31;1414:68:4;1359:130::o;3460:103:0:-;3526:30;3537:4;719:10:7;3526::0;:30::i;1978:166:1:-;2065:31;2082:4;2088:7;2065:16;:31::i;:::-;2106:18;;;;:12;:18;;;;;:31;;2129:7;2106:22;:31::i;2336:287:6:-;1759:1;2468:7;;:19;2460:63;;;;;;;10874:2:31;2460:63:6;;;10856:21:31;10913:2;10893:18;;;10886:30;10952:33;10932:18;;;10925:61;11003:18;;2460:63:6;10672:355:31;2460:63:6;1759:1;2598:7;:18;2336:287::o;4522:1795:15:-;4646:12;4684:6;4674:16;;:6;:16;;;4666:25;;;;;;4698:14;4714;4741:6;4732:15;;:6;:15;;;:53;;4770:6;4778;4732:53;;;4751:6;4759;4732:53;4697:88;;-1:-1:-1;4697:88:15;-1:-1:-1;4799:20:15;;;4791:29;;;;;;4827:67;4897:22;;;;:64;;4935:26;;;;;;;:16;:26;;;;;4897:64;;;4922:10;4897:64;4975:41;:19;;;5014:1;4975:19;;;;;;;;;;;:27;;;;;;;;;;;4827:134;;-1:-1:-1;4975:27:15;:41;4967:50;;;;;;5024:14;5048:22;;;5044:472;;5092:20;;5084:43;5092:20;5084:43;5080:197;;5148:20;;;;:41;5190:34;5209:6;5217;5190:18;:34::i;:::-;5226:7;5243:1;5247:6;5255;5263:4;5148:120;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5139:129;;5080:197;5044:472;;;5328:10;5306:54;5370:50;5395:8;5405:6;5413;5370:24;:50::i;:::-;5430:7;5447:8;5465:6;5481;5497:4;5306:203;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5297:212;;5044:472;5529:75;;;;;:41;12874:15:31;;;5529:75:15;;;12856:34:31;12926:15;;;12906:18;;;12899:43;12978:15;;;12958:18;;;12951:43;13030:15;;;13010:18;;;13003:43;5550:12:15;5529:41;;;;12767:19:31;;5529:75:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5522:82;-1:-1:-1;5615:22:15;;;5611:272;;5659:20;;5651:43;5659:20;5651:43;5647:132;;5706:20;;:64;;;;;:20;7367:15:31;;;5706:64:15;;;7349:34:31;7419:15;;;7399:18;;;7392:43;7471:15;;;7451:18;;;7444:43;5706:20:15;;;;:40;;7261:18:31;;5706:64:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5647:132;5611:272;;;5799:77;;;;;7298:42:31;7367:15;;;5799:77:15;;;7349:34:31;7419:15;;;7399:18;;;7392:43;7471:15;;7451:18;;;7444:43;5821:10:15;;5799:53;;7261:18:31;;5799:77:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5611:272;5889:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;:34;;;;;;;;;;;;;;5929:19;;;;;;:27;;;;;;;;;;:34;;;;;;;;5974:22;;5970:142;;6011:26;;;1764:55:31;;;1746:74;;6011:26:15;;;;;;;;;;1734:2:31;1719:18;6011:26:15;;;;;;;5970:142;;;6063:42;;;1764:55:31;;;1746:74;;6063:42:15;;;;;;;;;;;;;1734:2:31;1719:18;6063:42:15;;;;;;;5970:142;6130:12;;6122:35;6130:12;6122:35;6118:195;;6183:12;;:72;;;;;:12;13395:15:31;;;6183:72:15;;;13377:34:31;13447:15;;;13427:18;;;13420:43;13499:15;;;13479:18;;;13472:43;13551:15;;;13531:18;;;13524:43;13604:15;;;13583:19;;;13576:44;6167:13:15;;6183:12;;:31;;13288:19:31;;6183:72:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6263:43;;;;;:36;1764:55:31;;;6263:43:15;;;1746:74:31;6167:88:15;;-1:-1:-1;6263:36:15;;;;;;1719:18:31;;6263:43:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6159:154;6118:195;4660:1657;;;;4522:1795;;;;;;;:::o;2233:171:1:-;2321:32;2339:4;2345:7;2321:17;:32::i;:::-;2363:18;;;;:12;:18;;;;;:34;;2389:7;2363:25;:34::i;1824:101:4:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;9465:241:15::0;9535:40;2198:4:0;9567:7:15;2764;1273:6:4;;;;2691:113:15;9567:7;9535:11;:40::i;:::-;9581:34;9606:8;9581:24;:34::i;:::-;9644:1;1273:6:4;;;9625:21:15;9621:81;;9656:39;2198:4:0;9687:7:15;2764;1273:6:4;;;;2691:113:15;9687:7;9656:10;:39::i;9563:156:13:-;9637:7;9687:22;9691:3;9703:5;9687:3;:22::i;9106:115::-;9169:7;9195:19;9203:3;4545:18;;4463:107;3844:479:0;3107:4;3130:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;;;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;3970:336;;;;;;;;:::i;7587:233::-;3107:4;3130:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;;;7665:149;;7708:12;;;;:6;:12;;;;;;;;:29;;;;;;;;;;:36;;;;7740:4;7708:36;;;7790:12;719:10:7;;640:96;7790:12:0;7763:40;;7781:7;7763:40;;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;8305:150:13:-;8375:4;8398:50;8403:3;8423:23;;;8398:4;:50::i;7991:234:0:-;3107:4;3130:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;;;8070:149;;;8144:5;8112:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;:37;;;;;;8168:40;719:10:7;;8112:12:0;;8168:40;;8144:5;8168:40;7991:234;;:::o;8623:156:13:-;8696:4;8719:53;8727:3;8747:23;;;8719:7;:53::i;1501:153:5:-;1590:13;1583:20;;;;;;1613:34;1638:8;1613:24;:34::i;4912:118:13:-;4979:7;5005:3;:11;;5017:5;5005:18;;;;;;;;:::i;:::-;;;;;;;;;4998:25;;4912:118;;;;:::o;2407:149:8:-;2465:13;2497:52;2509:22;;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:8;;1918:47;;1975:15;:6;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;;;;;;;;;;;2000;:6;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;;;;;;;;;;-1:-1:-1;2030:9:8;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;2096:8;2105:5;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;;;;;;;;;;-1:-1:-1;2141:1:8;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:8;;2162:55;;;;;;;15626:2:31;2162:55:8;;;15608:21:31;;;15645:18;;;15638:30;15704:34;15684:18;;;15677:62;15756:18;;2162:55:8;15424:356:31;2214:404:13;2277:4;4351:19;;;:12;;;:19;;;;;;2293:319;;-1:-1:-1;2335:23:13;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:13;2589:12;;2786:1388;2852:4;2989:19;;;:12;;;:19;;;;;;3023:15;;3019:1149;;3392:21;3416:14;3429:1;3416:10;:14;:::i;:::-;3464:18;;3392:38;;-1:-1:-1;3444:17:13;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3805:23;;;:12;;;:23;;;;;:36;;;3501:398;3977:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;;;2426:187:4;2499:16;2518:6;;;2534:17;;;;;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:332:31:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;907:154;993:42;986:5;982:54;975:5;972:65;962:93;;1051:1;1048;1041:12;1066:529;1143:6;1151;1159;1212:2;1200:9;1191:7;1187:23;1183:32;1180:52;;;1228:1;1225;1218:12;1180:52;1267:9;1254:23;1286:31;1311:5;1286:31;:::i;:::-;1336:5;-1:-1:-1;1393:2:31;1378:18;;1365:32;1406:33;1365:32;1406:33;:::i;:::-;1458:7;-1:-1:-1;1517:2:31;1502:18;;1489:32;1530:33;1489:32;1530:33;:::i;:::-;1582:7;1572:17;;;1066:529;;;;;:::o;1831:180::-;1890:6;1943:2;1931:9;1922:7;1918:23;1914:32;1911:52;;;1959:1;1956;1949:12;1911:52;-1:-1:-1;1982:23:31;;1831:180;-1:-1:-1;1831:180:31:o;2390:247::-;2449:6;2502:2;2490:9;2481:7;2477:23;2473:32;2470:52;;;2518:1;2515;2508:12;2470:52;2557:9;2544:23;2576:31;2601:5;2576:31;:::i;2835:315::-;2903:6;2911;2964:2;2952:9;2943:7;2939:23;2935:32;2932:52;;;2980:1;2977;2970:12;2932:52;3016:9;3003:23;2993:33;;3076:2;3065:9;3061:18;3048:32;3089:31;3114:5;3089:31;:::i;:::-;3139:5;3129:15;;;2835:315;;;;;:::o;3348:347::-;3399:8;3409:6;3463:3;3456:4;3448:6;3444:17;3440:27;3430:55;;3481:1;3478;3471:12;3430:55;-1:-1:-1;3504:20:31;;3547:18;3536:30;;3533:50;;;3579:1;3576;3569:12;3533:50;3616:4;3608:6;3604:17;3592:29;;3668:3;3661:4;3652:6;3644;3640:19;3636:30;3633:39;3630:59;;;3685:1;3682;3675:12;3630:59;3348:347;;;;;:::o;3700:685::-;3788:6;3796;3804;3812;3865:2;3853:9;3844:7;3840:23;3836:32;3833:52;;;3881:1;3878;3871:12;3833:52;3920:9;3907:23;3939:31;3964:5;3939:31;:::i;:::-;3989:5;-1:-1:-1;4046:2:31;4031:18;;4018:32;4059:33;4018:32;4059:33;:::i;:::-;4111:7;-1:-1:-1;4169:2:31;4154:18;;4141:32;4196:18;4185:30;;4182:50;;;4228:1;4225;4218:12;4182:50;4267:58;4317:7;4308:6;4297:9;4293:22;4267:58;:::i;:::-;3700:685;;;;-1:-1:-1;4344:8:31;-1:-1:-1;;;;3700:685:31:o;4390:272::-;4448:6;4501:2;4489:9;4480:7;4476:23;4472:32;4469:52;;;4517:1;4514;4507:12;4469:52;4556:9;4543:23;4606:6;4599:5;4595:18;4588:5;4585:29;4575:57;;4628:1;4625;4618:12;4667:248;4735:6;4743;4796:2;4784:9;4775:7;4771:23;4767:32;4764:52;;;4812:1;4809;4802:12;4764:52;-1:-1:-1;;4835:23:31;;;4905:2;4890:18;;;4877:32;;-1:-1:-1;4667:248:31:o;5441:388::-;5509:6;5517;5570:2;5558:9;5549:7;5545:23;5541:32;5538:52;;;5586:1;5583;5576:12;5538:52;5625:9;5612:23;5644:31;5669:5;5644:31;:::i;:::-;5694:5;-1:-1:-1;5751:2:31;5736:18;;5723:32;5764:33;5723:32;5764:33;:::i;5834:969::-;5940:6;5948;5956;5964;5972;5980;6033:3;6021:9;6012:7;6008:23;6004:33;6001:53;;;6050:1;6047;6040:12;6001:53;6089:9;6076:23;6108:31;6133:5;6108:31;:::i;:::-;6158:5;-1:-1:-1;6215:2:31;6200:18;;6187:32;6228:33;6187:32;6228:33;:::i;:::-;6280:7;-1:-1:-1;6339:2:31;6324:18;;6311:32;6352:33;6311:32;6352:33;:::i;:::-;6404:7;-1:-1:-1;6463:2:31;6448:18;;6435:32;6476:33;6435:32;6476:33;:::i;:::-;6528:7;-1:-1:-1;6586:3:31;6571:19;;6558:33;6614:18;6603:30;;6600:50;;;6646:1;6643;6636:12;6600:50;6685:58;6735:7;6726:6;6715:9;6711:22;6685:58;:::i;:::-;5834:969;;;;-1:-1:-1;5834:969:31;;-1:-1:-1;5834:969:31;;6762:8;;5834:969;-1:-1:-1;;;5834:969:31:o;6808:273::-;6865:6;6918:2;6906:9;6897:7;6893:23;6889:32;6886:52;;;6934:1;6931;6924:12;6886:52;6973:9;6960:23;7026:5;7023:1;7012:20;7005:5;7002:31;6992:59;;7047:1;7044;7037:12;8510:184;8562:77;8559:1;8552:88;8659:4;8656:1;8649:15;8683:4;8680:1;8673:15;8699:125;8764:9;;;8785:10;;;8782:36;;;8798:18;;:::i;9082:128::-;9149:9;;;9170:11;;;9167:37;;;9184:18;;:::i;11032:250::-;11117:1;11127:113;11141:6;11138:1;11135:13;11127:113;;;11217:11;;;11211:18;11198:11;;;11191:39;11163:2;11156:10;11127:113;;;-1:-1:-1;;11274:1:31;11256:16;;11249:27;11032:250::o;11287:329::-;11328:3;11366:5;11360:12;11393:6;11388:3;11381:19;11409:76;11478:6;11471:4;11466:3;11462:14;11455:4;11448:5;11444:16;11409:76;:::i;:::-;11530:2;11518:15;11535:66;11514:88;11505:98;;;;11605:4;11501:109;;11287:329;-1:-1:-1;;11287:329:31:o;11621:682::-;11871:4;11900:42;11981:2;11973:6;11969:15;11958:9;11951:34;12033:2;12025:6;12021:15;12016:2;12005:9;12001:18;11994:43;12085:2;12077:6;12073:15;12068:2;12057:9;12053:18;12046:43;12137:2;12129:6;12125:15;12120:2;12109:9;12105:18;12098:43;12190:2;12182:6;12178:15;12172:3;12161:9;12157:19;12150:44;;12231:3;12225;12214:9;12210:19;12203:32;12252:45;12292:3;12281:9;12277:19;12269:6;12252:45;:::i;:::-;12244:53;11621:682;-1:-1:-1;;;;;;;;11621:682:31:o;12308:251::-;12378:6;12431:2;12419:9;12410:7;12406:23;12402:32;12399:52;;;12447:1;12444;12437:12;12399:52;12479:9;12473:16;12498:31;12523:5;12498:31;:::i;13631:812::-;14042:25;14037:3;14030:38;14012:3;14097:6;14091:13;14113:75;14181:6;14176:2;14171:3;14167:12;14160:4;14152:6;14148:17;14113:75;:::i;:::-;14252:19;14247:2;14207:16;;;14239:11;;;14232:40;14297:13;;14319:76;14297:13;14381:2;14373:11;;14366:4;14354:17;;14319:76;:::i;:::-;14415:17;14434:2;14411:26;;13631:812;-1:-1:-1;;;;13631:812:31:o;14448:219::-;14597:2;14586:9;14579:21;14560:4;14617:44;14657:2;14646:9;14642:18;14634:6;14617:44;:::i;14672:184::-;14724:77;14721:1;14714:88;14821:4;14818:1;14811:15;14845:4;14842:1;14835:15;14861:168;14934:9;;;14965;;14982:15;;;14976:22;;14962:37;14952:71;;15003:18;;:::i;15034:184::-;15086:77;15083:1;15076:88;15183:4;15180:1;15173:15;15207:4;15204:1;15197:15;15223:196;15262:3;15290:5;15280:39;;15299:18;;:::i;:::-;-1:-1:-1;15346:66:31;15335:78;;15223:196::o;15785:184::-;15837:77;15834:1;15827:88;15934:4;15931:1;15924:15;15958:4;15955:1;15948:15"},"methodIdentifiers":{"CUSTOM_POOL_DEPLOYER()":"07810754","DEFAULT_ADMIN_ROLE()":"a217fddf","POOLS_ADMINISTRATOR_ROLE()":"b500a48b","POOL_INIT_CODE_HASH()":"dc6fd8ab","acceptOwnership()":"79ba5097","computeCustomPoolAddress(address,address,address)":"1ba89df4","computePoolAddress(address,address)":"d8ed2241","createCustomPool(address,address,address,address,bytes)":"dbbf3db4","createPool(address,address,bytes)":"321935c6","customPoolByPair(address,address,address)":"23da36cc","defaultCommunityFee()":"2f8a39dd","defaultConfigurationForPool()":"25b355d6","defaultFee()":"5a6c72d0","defaultPluginFactory()":"d0ad2792","defaultTickspacing()":"29bc3446","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","hasRoleOrOwner(bytes32,address)":"e8ae2b69","owner()":"8da5cb5b","pendingOwner()":"e30c3978","poolByPair(address,address)":"d9a641e1","poolDeployer()":"3119049a","renounceOwnership()":"715018a6","renounceOwnershipStartTimestamp()":"084bfff9","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setDefaultCommunityFee(uint16)":"8d5a8711","setDefaultFee(uint16)":"77326584","setDefaultPluginFactory(address)":"2939dd97","setDefaultTickspacing(int24)":"f09489ac","setVaultFactory(address)":"3ea7fbdb","startRenounceOwnership()":"469388c4","stopRenounceOwnership()":"238a1d74","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b","vaultFactory()":"d8a06f73"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolDeployer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"CustomPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newDefaultCommunityFee\",\"type\":\"uint16\"}],\"name\":\"DefaultCommunityFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newDefaultFee\",\"type\":\"uint16\"}],\"name\":\"DefaultFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"defaultPluginFactoryAddress\",\"type\":\"address\"}],\"name\":\"DefaultPluginFactory\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"newDefaultTickspacing\",\"type\":\"int24\"}],\"name\":\"DefaultTickspacing\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"Pool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RenounceOwnershipFinish\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"finishTimestamp\",\"type\":\"uint256\"}],\"name\":\"RenounceOwnershipStart\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RenounceOwnershipStop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newVaultFactory\",\"type\":\"address\"}],\"name\":\"VaultFactory\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CUSTOM_POOL_DEPLOYER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOLS_ADMINISTRATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOL_INIT_CODE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"computeCustomPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"customPool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"computePoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"createCustomPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"customPool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"customPoolByPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultCommunityFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultConfigurationForPool\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"communityFee\",\"type\":\"uint16\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"fee\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultPluginFactory\",\"outputs\":[{\"internalType\":\"contract IAlgebraPluginFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultTickspacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleOrOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolByPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnershipStartTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newDefaultCommunityFee\",\"type\":\"uint16\"}],\"name\":\"setDefaultCommunityFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newDefaultFee\",\"type\":\"uint16\"}],\"name\":\"setDefaultFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDefaultPluginFactory\",\"type\":\"address\"}],\"name\":\"setDefaultPluginFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"newDefaultTickspacing\",\"type\":\"int24\"}],\"name\":\"setDefaultTickspacing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newVaultFactory\",\"type\":\"address\"}],\"name\":\"setVaultFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startRenounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopRenounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultFactory\",\"outputs\":[{\"internalType\":\"contract IAlgebraVaultFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Version: Algebra Integral 1.2\",\"events\":{\"CustomPool(address,address,address,address)\":{\"params\":{\"deployer\":\"The corresponding custom deployer contract\",\"pool\":\"The address of the created pool\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}},\"DefaultCommunityFee(uint16)\":{\"params\":{\"newDefaultCommunityFee\":\"The new default community fee value\"}},\"DefaultFee(uint16)\":{\"params\":{\"newDefaultFee\":\"The new default fee value\"}},\"DefaultPluginFactory(address)\":{\"params\":{\"defaultPluginFactoryAddress\":\"The new defaultPluginFactory address\"}},\"DefaultTickspacing(int24)\":{\"params\":{\"newDefaultTickspacing\":\"The new default tickspacing value\"}},\"Pool(address,address,address)\":{\"params\":{\"pool\":\"The address of the created pool\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}},\"RenounceOwnershipFinish(uint256)\":{\"params\":{\"timestamp\":\"The timestamp of ownership renouncement\"}},\"RenounceOwnershipStart(uint256,uint256)\":{\"params\":{\"finishTimestamp\":\"The timestamp when ownership renounce will be possible to finish\",\"timestamp\":\"The timestamp of event\"}},\"RenounceOwnershipStop(uint256)\":{\"params\":{\"timestamp\":\"The timestamp of event\"}},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"VaultFactory(address)\":{\"params\":{\"newVaultFactory\":\"The new vaultFactory address\"}}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"computeCustomPoolAddress(address,address,address)\":{\"details\":\"The method does not check if such a pool has been created\",\"params\":{\"customDeployer\":\"the address of custom plugin deployer\",\"token0\":\"first token\",\"token1\":\"second token\"},\"returns\":{\"customPool\":\"The contract address of the Algebra pool\"}},\"computePoolAddress(address,address)\":{\"details\":\"The method does not check if such a pool has been created\",\"params\":{\"token0\":\"first token\",\"token1\":\"second token\"},\"returns\":{\"pool\":\"The contract address of the Algebra pool\"}},\"createCustomPool(address,address,address,address,bytes)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. The call will revert if the pool already exists or the token arguments are invalid.\",\"params\":{\"creator\":\"The initiator of custom pool creation\",\"data\":\"The additional data bytes\",\"deployer\":\"The address of plugin deployer, also used for custom pool address calculation\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"customPool\":\"The address of the newly created custom pool\"}},\"createPool(address,address,bytes)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. The call will revert if the pool already exists or the token arguments are invalid.\",\"params\":{\"data\":\"Data for plugin creation\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"defaultConfigurationForPool()\":{\"returns\":{\"communityFee\":\"which will be set at the creation of the pool\",\"fee\":\"which will be set at the creation of the pool\",\"tickSpacing\":\"which will be set at the creation of the pool\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"hasRoleOrOwner(bytes32,address)\":{\"params\":{\"account\":\"The address for which the role is checked\",\"role\":\"The hash corresponding to the role\"},\"returns\":{\"_0\":\"bool Whether the address has this role or the owner role or not\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via transferOwnership(address newOwner)\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner if RENOUNCE_OWNERSHIP_DELAY seconds have passed since the call to the startRenounceOwnership() function.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setDefaultCommunityFee(uint16)\":{\"details\":\"updates default community fee for new pools\",\"params\":{\"newDefaultCommunityFee\":\"The new community fee, _must_ be <= MAX_COMMUNITY_FEE\"}},\"setDefaultFee(uint16)\":{\"details\":\"updates default fee for new pools\",\"params\":{\"newDefaultFee\":\"The new  fee, _must_ be <= MAX_DEFAULT_FEE\"}},\"setDefaultPluginFactory(address)\":{\"details\":\"updates pluginFactory address\",\"params\":{\"newDefaultPluginFactory\":\"address of new plugin factory\"}},\"setDefaultTickspacing(int24)\":{\"details\":\"updates default tickspacing for new pools\",\"params\":{\"newDefaultTickspacing\":\"The new tickspacing, _must_ be <= MAX_TICK_SPACING and >= MIN_TICK_SPACING\"}},\"setVaultFactory(address)\":{\"details\":\"updates vaultFactory address\",\"params\":{\"newVaultFactory\":\"address of new vault factory\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"stateVariables\":{\"CUSTOM_POOL_DEPLOYER\":{\"return\":\"The hash corresponding to this role\",\"returns\":{\"_0\":\"The hash corresponding to this role\"}},\"POOLS_ADMINISTRATOR_ROLE\":{\"return\":\"The hash corresponding to this role\",\"returns\":{\"_0\":\"The hash corresponding to this role\"}},\"POOL_INIT_CODE_HASH\":{\"details\":\"keccak256 of AlgebraPool init bytecode. Used to compute pool address deterministically\",\"return\":\"Keccak256 hash of AlgebraPool contract init bytecode\",\"returns\":{\"_0\":\"Keccak256 hash of AlgebraPool contract init bytecode\"}},\"RENOUNCE_OWNERSHIP_DELAY\":{\"details\":\"time delay before ownership renouncement can be finished\"},\"customPoolByPair\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"customDeployer\":\"The address of custom plugin deployer\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"return\":\"The pool address\",\"returns\":{\"_0\":\"The pool address\"}},\"defaultCommunityFee\":{\"return\":\"Fee which will be set at the creation of the pool\",\"returns\":{\"_0\":\"Fee which will be set at the creation of the pool\"}},\"defaultFee\":{\"return\":\"Fee which will be set at the creation of the pool\",\"returns\":{\"_0\":\"Fee which will be set at the creation of the pool\"}},\"defaultPluginFactory\":{\"details\":\"This contract is used to automatically set a plugin address in new liquidity pools\",\"return\":\"Algebra plugin factory\",\"returns\":{\"_0\":\"Algebra plugin factory\"}},\"defaultTickspacing\":{\"return\":\"Tickspacing which will be set at the creation of the pool\",\"returns\":{\"_0\":\"Tickspacing which will be set at the creation of the pool\"}},\"poolByPair\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"return\":\"The pool address\",\"returns\":{\"_0\":\"The pool address\"}},\"poolDeployer\":{\"return\":\"The address of the poolDeployer\",\"returns\":{\"_0\":\"The address of the poolDeployer\"}},\"renounceOwnershipStartTimestamp\":{\"return\":\"The timestamp of the beginning of the renounceOwnership process\",\"returns\":{\"_0\":\"The timestamp of the beginning of the renounceOwnership process\"}},\"vaultFactory\":{\"details\":\"This contract is used to automatically set a vault address in new liquidity pools\",\"return\":\"Algebra vault factory\",\"returns\":{\"_0\":\"Algebra vault factory\"}}},\"title\":\"Algebra factory\",\"version\":1},\"userdoc\":{\"events\":{\"CustomPool(address,address,address,address)\":{\"notice\":\"Emitted when a pool is created\"},\"DefaultCommunityFee(uint16)\":{\"notice\":\"Emitted when the default community fee is changed\"},\"DefaultFee(uint16)\":{\"notice\":\"Emitted when the default fee is changed\"},\"DefaultPluginFactory(address)\":{\"notice\":\"Emitted when the defaultPluginFactory address is changed\"},\"DefaultTickspacing(int24)\":{\"notice\":\"Emitted when the default tickspacing is changed\"},\"Pool(address,address,address)\":{\"notice\":\"Emitted when a pool is created\"},\"RenounceOwnershipFinish(uint256)\":{\"notice\":\"Emitted when a process of ownership renounce finished\"},\"RenounceOwnershipStart(uint256,uint256)\":{\"notice\":\"Emitted when a process of ownership renounce is started\"},\"RenounceOwnershipStop(uint256)\":{\"notice\":\"Emitted when a process of ownership renounce cancelled\"},\"VaultFactory(address)\":{\"notice\":\"Emitted when the vaultFactory address is changed\"}},\"kind\":\"user\",\"methods\":{\"CUSTOM_POOL_DEPLOYER()\":{\"notice\":\"role that can call `createCustomPool` function\"},\"POOLS_ADMINISTRATOR_ROLE()\":{\"notice\":\"role that can change communityFee and tickspacing in pools\"},\"POOL_INIT_CODE_HASH()\":{\"notice\":\"returns keccak256 of AlgebraPool init bytecode.\"},\"computeCustomPoolAddress(address,address,address)\":{\"notice\":\"Deterministically computes the custom pool address given the customDeployer, token0 and token1\"},\"computePoolAddress(address,address)\":{\"notice\":\"Deterministically computes the pool address given the token0 and token1\"},\"createCustomPool(address,address,address,address,bytes)\":{\"notice\":\"Creates a custom pool for the given two tokens using `deployer` contract\"},\"createPool(address,address,bytes)\":{\"notice\":\"Creates a pool for the given two tokens\"},\"customPoolByPair(address,address,address)\":{\"notice\":\"Returns the custom pool address for a customDeployer and a given pair of tokens, or address 0 if it does not exist\"},\"defaultCommunityFee()\":{\"notice\":\"Returns the default community fee\"},\"defaultConfigurationForPool()\":{\"notice\":\"Returns the default communityFee, tickspacing, fee and communityFeeVault for pool\"},\"defaultFee()\":{\"notice\":\"Returns the default fee\"},\"defaultPluginFactory()\":{\"notice\":\"Return the current pluginFactory address\"},\"defaultTickspacing()\":{\"notice\":\"Returns the default tickspacing\"},\"hasRoleOrOwner(bytes32,address)\":{\"notice\":\"Returns `true` if `account` has been granted `role` or `account` is owner.\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"poolByPair(address,address)\":{\"notice\":\"Returns the pool address for a given pair of tokens, or address 0 if it does not exist\"},\"poolDeployer()\":{\"notice\":\"Returns the current poolDeployerAddress\"},\"startRenounceOwnership()\":{\"notice\":\"Starts process of renounceOwnership. After that, a certain period of time must pass before the ownership renounce can be completed.\"},\"stopRenounceOwnership()\":{\"notice\":\"Stops process of renounceOwnership and removes timer.\"},\"vaultFactory()\":{\"notice\":\"Return the current vaultFactory address\"}},\"notice\":\"Is used to deploy pools and its plugins\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AlgebraFactory.sol\":\"AlgebraFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xde231558366826d7cb61725af8147965a61c53b77a352cc8c9af38fc5a92ac3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd55624076bf61d44af5ff351919e32dda748567acfbdd6ba3d6c7be61c758e\",\"dweb:/ipfs/QmSki4dTrf4GPm7MTpG3fk8mC7rnjwd2zMomLp6jLuF63Q\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"contracts/AlgebraCommunityVault.sol\":{\"keccak256\":\"0x27d1ddce8b90e2f151a76b69e403c7044e53531724fcef4f684bb87b7e5b74f7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e97f105d96a5d613c56ac31f66f80f2131fbf6cd41e9d4c9577079f0140543c9\",\"dweb:/ipfs/QmTW88xeoYf7nGEW1mR24Fy5MA8F1xTve8ZXFHHgoDFrv4\"]},\"contracts/AlgebraFactory.sol\":{\"keccak256\":\"0xdfc0b4cc1f43806b10602c8d34328206a618f3abbd2693a562c2cd8475411ac8\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://01fba653b5393255c44f6a269e091b6e264caae1de65d0b29cfbc18b473846a1\",\"dweb:/ipfs/QmPn6HpE7eRgufXf8iywZsXt4rG6FPkTMkyK9JPDbofqvJ\"]},\"contracts/interfaces/IAlgebraFactory.sol\":{\"keccak256\":\"0xb87bef911483f054559e6567a5a958200131b5101fbcee1ed7daefcfc082faf7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://46c8f76cde3c16aed0446e98dc61ddb196288652f6a8735ed87d6e53a13b4142\",\"dweb:/ipfs/Qmd7omugWuFrjrCcwfeRQbeUS1FhqvhscTij4xtqCmjNKG\"]},\"contracts/interfaces/IAlgebraPool.sol\":{\"keccak256\":\"0x1d8bb94007c874be2640401aeed6219392c07e8b2e779fa24c618adc58bd7ae0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://55d37783d81c98cb58ed41e6d7283af5fb07261b676a833f632cd6d128fc2e04\",\"dweb:/ipfs/QmXiJ63fWeBfkfJkLzBv1zLDyCjn5shW44ugYv44CqtTca\"]},\"contracts/interfaces/IAlgebraPoolDeployer.sol\":{\"keccak256\":\"0xab62d83c8573717084e5ca9016a65c01fe2a950d855b23a4c3d4fdf74e72149a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7a8c9ca01ad16fc3c7db1199cb9c89b3ecd5323f713144853f700c601c76b794\",\"dweb:/ipfs/QmVSZLQsMqWAUZykbu8ES4vRN7N6M78XYa6Kg5UkKcwM1N\"]},\"contracts/interfaces/plugin/IAlgebraPluginFactory.sol\":{\"keccak256\":\"0xf1cc5f09fc738bf41381fdf6864919c07965f25e715af6982df54605ce3a32fc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6fa8803e45159a6c404fd714321bc2ba0e010e76e3755594628f0c0bc9204182\",\"dweb:/ipfs/QmSAtmyH38VtzgycYTjGF3Y5aWG6DPjWD3JDjGVAn4fi2m\"]},\"contracts/interfaces/pool/IAlgebraPoolActions.sol\":{\"keccak256\":\"0x4f9b70282bac671383d001cffca1479dd64f507db84cdab16da886804c64a60c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b1bc8b774ab5027d97625c3ac01ee3f4bbdefcd012ff0bb0e4c9752096bd9562\",\"dweb:/ipfs/Qmcn5kGihMiZAMjwpY1f12nTSWMyrLqmXLvoifaqPtQYYo\"]},\"contracts/interfaces/pool/IAlgebraPoolErrors.sol\":{\"keccak256\":\"0x5ee2c56b4acc88f0c4649e39ebb0f8452381e13305bd297b53358cbe32c16069\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d25e93950215a98988cf189d2eb1cd0bc41c91d7f190b7e3c5cdfb92651dcfd5\",\"dweb:/ipfs/QmXkA7xk83yJtooAqJSRwUfR7V6iwjsiwbvEfATyasuiEM\"]},\"contracts/interfaces/pool/IAlgebraPoolEvents.sol\":{\"keccak256\":\"0x7cb9c22922bd9b9fadde18d3f4bb799792c9c54db9c6f55940f44460bdb8b283\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a97a65a2ad9c39ef9534f733d9a5d14675ba7d14d437cbef1e51ca8344f493da\",\"dweb:/ipfs/QmSFMgSpbF9TyYwGyQyJQRfBAVGsq55z1LoRCmrcj3HszD\"]},\"contracts/interfaces/pool/IAlgebraPoolImmutables.sol\":{\"keccak256\":\"0x02d0fb9c64fba4c4dd0509bb9333825c801a0587d5b957c46f5cb1c610acc447\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8480784b2654829c0958b00aa3109249ce9088dbe94b6eadeaf8e9138829a764\",\"dweb:/ipfs/QmeFG5AsPUQfhMPtvYC3f9BhGu7sVm71wj2PgXDczaM7XP\"]},\"contracts/interfaces/pool/IAlgebraPoolPermissionedActions.sol\":{\"keccak256\":\"0xbd9faad7e7599c61c3141cfe2dd2e423ad4746a6119f047b0ae6d2eccb77bc9c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0df4bed6cf34a8c0f6b971fb71411373b4d204afda35eabe8555d8cbe67e291\",\"dweb:/ipfs/QmY6z3BseKy3tEvmLVjhL7VFrNJRuQgDXJXNAFBkBQ218A\"]},\"contracts/interfaces/pool/IAlgebraPoolState.sol\":{\"keccak256\":\"0xe061f0f9b5b16934173b1127efe13ccfe80465db17156d91c04e018b31e993fa\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c607033ec09828f4a8667e7fd2e562814ec689d5806d95b4a248f57e0eff9d38\",\"dweb:/ipfs/QmbGBxBMSzPKitHmRjYJwGGEZVsXDQB6emSsZ19hjy6LUz\"]},\"contracts/interfaces/vault/IAlgebraCommunityVault.sol\":{\"keccak256\":\"0x24fad3648346700d372d65ca449494553db47dcb03d2cd0acaf7677a5f7b1391\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c15473dd606ee905423bf27fba68ce7d9964b43f728611db22468dd36581caf4\",\"dweb:/ipfs/QmSa7ratHBjLQ3xrAoNXvM3pBhtLYBqRuMx8rnYy5S2se4\"]},\"contracts/interfaces/vault/IAlgebraVaultFactory.sol\":{\"keccak256\":\"0xcdaae6cd6af79c4f344e673fe886a980ef5203b15b49f7a466c336c0152ce6ae\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fa2d3073bd4ca013e2769cf0fa5b68f32cec4fa53a6cc66adb59d86e6293cf15\",\"dweb:/ipfs/QmcwveJdf3JLAPfFZShijKTTxMTP4joDDuSuFboXBe711S\"]},\"contracts/libraries/Constants.sol\":{\"keccak256\":\"0x43f5e9ef4088f1301bc80f6446114ab1f3bdd58063fc6b107f8b1598b80e4915\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://496cb38eedc163919d59a6a196d2e566771e711b6e5e4a80a11efaa7b903c03a\",\"dweb:/ipfs/QmVf5trKkBGeXeuDsiuzXDGPVEpJRvaQsdL5Dr2HZ8ZePq\"]},\"contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x6e562130eac2d18d5527fc12115e83a3aa0955f6be89531b6d0d5977f0784cf7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5226566361b64a277a523430449d398434aa9956ec53ab96120bdb5eed0d36c\",\"dweb:/ipfs/QmdmE85FDGgaZBFb9WDamJQpvSx6BrpYUutudSzoRVmxMv\"]},\"contracts/libraries/SafeTransfer.sol\":{\"keccak256\":\"0x14e91c94e35c50efcd97e13609f686499c1dfa726ee0b3f6078fa4b99bde9a0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d9a7efa21d03180ded0e99d7ba05abd5c8ebedf2439a5a78091b679eadc4064\",\"dweb:/ipfs/QmVUZPhYPTb2yY9381AL242tfVsb3iWxmE2XwqcN9HG6eW\"]}},\"version\":1}"}},"contracts/interfaces/IAlgebraFactory.sol":{"IAlgebraFactory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"deployer","type":"address"},{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":false,"internalType":"address","name":"pool","type":"address"}],"name":"CustomPool","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"newDefaultCommunityFee","type":"uint16"}],"name":"DefaultCommunityFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"newDefaultFee","type":"uint16"}],"name":"DefaultFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"defaultPluginFactoryAddress","type":"address"}],"name":"DefaultPluginFactory","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int24","name":"newDefaultTickspacing","type":"int24"}],"name":"DefaultTickspacing","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":false,"internalType":"address","name":"pool","type":"address"}],"name":"Pool","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"RenounceOwnershipFinish","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"finishTimestamp","type":"uint256"}],"name":"RenounceOwnershipStart","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"RenounceOwnershipStop","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newVaultFactory","type":"address"}],"name":"VaultFactory","type":"event"},{"inputs":[],"name":"CUSTOM_POOL_DEPLOYER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"POOLS_ADMINISTRATOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"POOL_INIT_CODE_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"customDeployer","type":"address"},{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"}],"name":"computeCustomPoolAddress","outputs":[{"internalType":"address","name":"customPool","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"}],"name":"computePoolAddress","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"address","name":"creator","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"createCustomPool","outputs":[{"internalType":"address","name":"customPool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"customDeployer","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"name":"customPoolByPair","outputs":[{"internalType":"address","name":"customPool","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultCommunityFee","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultConfigurationForPool","outputs":[{"internalType":"uint16","name":"communityFee","type":"uint16"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"uint16","name":"fee","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultFee","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultPluginFactory","outputs":[{"internalType":"contract IAlgebraPluginFactory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultTickspacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRoleOrOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"name":"poolByPair","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolDeployer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnershipStartTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"newDefaultCommunityFee","type":"uint16"}],"name":"setDefaultCommunityFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"newDefaultFee","type":"uint16"}],"name":"setDefaultFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newDefaultPluginFactory","type":"address"}],"name":"setDefaultPluginFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int24","name":"newDefaultTickspacing","type":"int24"}],"name":"setDefaultTickspacing","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newVaultFactory","type":"address"}],"name":"setVaultFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startRenounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stopRenounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vaultFactory","outputs":[{"internalType":"contract IAlgebraVaultFactory","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CUSTOM_POOL_DEPLOYER()":"07810754","POOLS_ADMINISTRATOR_ROLE()":"b500a48b","POOL_INIT_CODE_HASH()":"dc6fd8ab","computeCustomPoolAddress(address,address,address)":"1ba89df4","computePoolAddress(address,address)":"d8ed2241","createCustomPool(address,address,address,address,bytes)":"dbbf3db4","createPool(address,address,bytes)":"321935c6","customPoolByPair(address,address,address)":"23da36cc","defaultCommunityFee()":"2f8a39dd","defaultConfigurationForPool()":"25b355d6","defaultFee()":"5a6c72d0","defaultPluginFactory()":"d0ad2792","defaultTickspacing()":"29bc3446","hasRoleOrOwner(bytes32,address)":"e8ae2b69","owner()":"8da5cb5b","poolByPair(address,address)":"d9a641e1","poolDeployer()":"3119049a","renounceOwnershipStartTimestamp()":"084bfff9","setDefaultCommunityFee(uint16)":"8d5a8711","setDefaultFee(uint16)":"77326584","setDefaultPluginFactory(address)":"2939dd97","setDefaultTickspacing(int24)":"f09489ac","setVaultFactory(address)":"3ea7fbdb","startRenounceOwnership()":"469388c4","stopRenounceOwnership()":"238a1d74","vaultFactory()":"d8a06f73"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"CustomPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newDefaultCommunityFee\",\"type\":\"uint16\"}],\"name\":\"DefaultCommunityFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newDefaultFee\",\"type\":\"uint16\"}],\"name\":\"DefaultFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"defaultPluginFactoryAddress\",\"type\":\"address\"}],\"name\":\"DefaultPluginFactory\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"newDefaultTickspacing\",\"type\":\"int24\"}],\"name\":\"DefaultTickspacing\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"Pool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RenounceOwnershipFinish\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"finishTimestamp\",\"type\":\"uint256\"}],\"name\":\"RenounceOwnershipStart\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RenounceOwnershipStop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newVaultFactory\",\"type\":\"address\"}],\"name\":\"VaultFactory\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CUSTOM_POOL_DEPLOYER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOLS_ADMINISTRATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOL_INIT_CODE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"customDeployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"computeCustomPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"customPool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"computePoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"createCustomPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"customPool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"customDeployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"customPoolByPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"customPool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultCommunityFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultConfigurationForPool\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"communityFee\",\"type\":\"uint16\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"fee\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultPluginFactory\",\"outputs\":[{\"internalType\":\"contract IAlgebraPluginFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultTickspacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleOrOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"poolByPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnershipStartTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newDefaultCommunityFee\",\"type\":\"uint16\"}],\"name\":\"setDefaultCommunityFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newDefaultFee\",\"type\":\"uint16\"}],\"name\":\"setDefaultFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDefaultPluginFactory\",\"type\":\"address\"}],\"name\":\"setDefaultPluginFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"newDefaultTickspacing\",\"type\":\"int24\"}],\"name\":\"setDefaultTickspacing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newVaultFactory\",\"type\":\"address\"}],\"name\":\"setVaultFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startRenounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopRenounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultFactory\",\"outputs\":[{\"internalType\":\"contract IAlgebraVaultFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Credit to Uniswap Labs under GPL-2.0-or-later license: https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\",\"events\":{\"CustomPool(address,address,address,address)\":{\"params\":{\"deployer\":\"The corresponding custom deployer contract\",\"pool\":\"The address of the created pool\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}},\"DefaultCommunityFee(uint16)\":{\"params\":{\"newDefaultCommunityFee\":\"The new default community fee value\"}},\"DefaultFee(uint16)\":{\"params\":{\"newDefaultFee\":\"The new default fee value\"}},\"DefaultPluginFactory(address)\":{\"params\":{\"defaultPluginFactoryAddress\":\"The new defaultPluginFactory address\"}},\"DefaultTickspacing(int24)\":{\"params\":{\"newDefaultTickspacing\":\"The new default tickspacing value\"}},\"Pool(address,address,address)\":{\"params\":{\"pool\":\"The address of the created pool\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}},\"RenounceOwnershipFinish(uint256)\":{\"params\":{\"timestamp\":\"The timestamp of ownership renouncement\"}},\"RenounceOwnershipStart(uint256,uint256)\":{\"params\":{\"finishTimestamp\":\"The timestamp when ownership renounce will be possible to finish\",\"timestamp\":\"The timestamp of event\"}},\"RenounceOwnershipStop(uint256)\":{\"params\":{\"timestamp\":\"The timestamp of event\"}},\"VaultFactory(address)\":{\"params\":{\"newVaultFactory\":\"The new vaultFactory address\"}}},\"kind\":\"dev\",\"methods\":{\"CUSTOM_POOL_DEPLOYER()\":{\"returns\":{\"_0\":\"The hash corresponding to this role\"}},\"POOLS_ADMINISTRATOR_ROLE()\":{\"returns\":{\"_0\":\"The hash corresponding to this role\"}},\"POOL_INIT_CODE_HASH()\":{\"details\":\"the hash value changes with any change in the pool bytecode\",\"returns\":{\"_0\":\"Keccak256 hash of AlgebraPool contract init bytecode\"}},\"computeCustomPoolAddress(address,address,address)\":{\"details\":\"The method does not check if such a pool has been created\",\"params\":{\"customDeployer\":\"the address of custom plugin deployer\",\"token0\":\"first token\",\"token1\":\"second token\"},\"returns\":{\"customPool\":\"The contract address of the Algebra pool\"}},\"computePoolAddress(address,address)\":{\"details\":\"The method does not check if such a pool has been created\",\"params\":{\"token0\":\"first token\",\"token1\":\"second token\"},\"returns\":{\"pool\":\"The contract address of the Algebra pool\"}},\"createCustomPool(address,address,address,address,bytes)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. The call will revert if the pool already exists or the token arguments are invalid.\",\"params\":{\"creator\":\"The initiator of custom pool creation\",\"data\":\"The additional data bytes\",\"deployer\":\"The address of plugin deployer, also used for custom pool address calculation\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"customPool\":\"The address of the newly created custom pool\"}},\"createPool(address,address,bytes)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. The call will revert if the pool already exists or the token arguments are invalid.\",\"params\":{\"data\":\"Data for plugin creation\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"customPoolByPair(address,address,address)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"customDeployer\":\"The address of custom plugin deployer\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"customPool\":\"The pool address\"}},\"defaultCommunityFee()\":{\"returns\":{\"_0\":\"Fee which will be set at the creation of the pool\"}},\"defaultConfigurationForPool()\":{\"returns\":{\"communityFee\":\"which will be set at the creation of the pool\",\"fee\":\"which will be set at the creation of the pool\",\"tickSpacing\":\"which will be set at the creation of the pool\"}},\"defaultFee()\":{\"returns\":{\"_0\":\"Fee which will be set at the creation of the pool\"}},\"defaultPluginFactory()\":{\"details\":\"This contract is used to automatically set a plugin address in new liquidity pools\",\"returns\":{\"_0\":\"Algebra plugin factory\"}},\"defaultTickspacing()\":{\"returns\":{\"_0\":\"Tickspacing which will be set at the creation of the pool\"}},\"hasRoleOrOwner(bytes32,address)\":{\"params\":{\"account\":\"The address for which the role is checked\",\"role\":\"The hash corresponding to the role\"},\"returns\":{\"_0\":\"bool Whether the address has this role or the owner role or not\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via transferOwnership(address newOwner)\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"poolByPair(address,address)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"poolDeployer()\":{\"returns\":{\"_0\":\"The address of the poolDeployer\"}},\"renounceOwnershipStartTimestamp()\":{\"returns\":{\"timestamp\":\"The timestamp of the beginning of the renounceOwnership process\"}},\"setDefaultCommunityFee(uint16)\":{\"details\":\"updates default community fee for new pools\",\"params\":{\"newDefaultCommunityFee\":\"The new community fee, _must_ be <= MAX_COMMUNITY_FEE\"}},\"setDefaultFee(uint16)\":{\"details\":\"updates default fee for new pools\",\"params\":{\"newDefaultFee\":\"The new  fee, _must_ be <= MAX_DEFAULT_FEE\"}},\"setDefaultPluginFactory(address)\":{\"details\":\"updates pluginFactory address\",\"params\":{\"newDefaultPluginFactory\":\"address of new plugin factory\"}},\"setDefaultTickspacing(int24)\":{\"details\":\"updates default tickspacing for new pools\",\"params\":{\"newDefaultTickspacing\":\"The new tickspacing, _must_ be <= MAX_TICK_SPACING and >= MIN_TICK_SPACING\"}},\"setVaultFactory(address)\":{\"details\":\"updates vaultFactory address\",\"params\":{\"newVaultFactory\":\"address of new vault factory\"}},\"vaultFactory()\":{\"details\":\"This contract is used to automatically set a vault address in new liquidity pools\",\"returns\":{\"_0\":\"Algebra vault factory\"}}},\"title\":\"The interface for the Algebra Factory\",\"version\":1},\"userdoc\":{\"events\":{\"CustomPool(address,address,address,address)\":{\"notice\":\"Emitted when a pool is created\"},\"DefaultCommunityFee(uint16)\":{\"notice\":\"Emitted when the default community fee is changed\"},\"DefaultFee(uint16)\":{\"notice\":\"Emitted when the default fee is changed\"},\"DefaultPluginFactory(address)\":{\"notice\":\"Emitted when the defaultPluginFactory address is changed\"},\"DefaultTickspacing(int24)\":{\"notice\":\"Emitted when the default tickspacing is changed\"},\"Pool(address,address,address)\":{\"notice\":\"Emitted when a pool is created\"},\"RenounceOwnershipFinish(uint256)\":{\"notice\":\"Emitted when a process of ownership renounce finished\"},\"RenounceOwnershipStart(uint256,uint256)\":{\"notice\":\"Emitted when a process of ownership renounce is started\"},\"RenounceOwnershipStop(uint256)\":{\"notice\":\"Emitted when a process of ownership renounce cancelled\"},\"VaultFactory(address)\":{\"notice\":\"Emitted when the vaultFactory address is changed\"}},\"kind\":\"user\",\"methods\":{\"CUSTOM_POOL_DEPLOYER()\":{\"notice\":\"role that can call `createCustomPool` function\"},\"POOLS_ADMINISTRATOR_ROLE()\":{\"notice\":\"role that can change communityFee and tickspacing in pools\"},\"POOL_INIT_CODE_HASH()\":{\"notice\":\"returns keccak256 of AlgebraPool init bytecode.\"},\"computeCustomPoolAddress(address,address,address)\":{\"notice\":\"Deterministically computes the custom pool address given the customDeployer, token0 and token1\"},\"computePoolAddress(address,address)\":{\"notice\":\"Deterministically computes the pool address given the token0 and token1\"},\"createCustomPool(address,address,address,address,bytes)\":{\"notice\":\"Creates a custom pool for the given two tokens using `deployer` contract\"},\"createPool(address,address,bytes)\":{\"notice\":\"Creates a pool for the given two tokens\"},\"customPoolByPair(address,address,address)\":{\"notice\":\"Returns the custom pool address for a customDeployer and a given pair of tokens, or address 0 if it does not exist\"},\"defaultCommunityFee()\":{\"notice\":\"Returns the default community fee\"},\"defaultConfigurationForPool()\":{\"notice\":\"Returns the default communityFee, tickspacing, fee and communityFeeVault for pool\"},\"defaultFee()\":{\"notice\":\"Returns the default fee\"},\"defaultPluginFactory()\":{\"notice\":\"Return the current pluginFactory address\"},\"defaultTickspacing()\":{\"notice\":\"Returns the default tickspacing\"},\"hasRoleOrOwner(bytes32,address)\":{\"notice\":\"Returns `true` if `account` has been granted `role` or `account` is owner.\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"poolByPair(address,address)\":{\"notice\":\"Returns the pool address for a given pair of tokens, or address 0 if it does not exist\"},\"poolDeployer()\":{\"notice\":\"Returns the current poolDeployerAddress\"},\"startRenounceOwnership()\":{\"notice\":\"Starts process of renounceOwnership. After that, a certain period of time must pass before the ownership renounce can be completed.\"},\"stopRenounceOwnership()\":{\"notice\":\"Stops process of renounceOwnership and removes timer.\"},\"vaultFactory()\":{\"notice\":\"Return the current vaultFactory address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAlgebraFactory.sol\":\"IAlgebraFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAlgebraFactory.sol\":{\"keccak256\":\"0xb87bef911483f054559e6567a5a958200131b5101fbcee1ed7daefcfc082faf7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://46c8f76cde3c16aed0446e98dc61ddb196288652f6a8735ed87d6e53a13b4142\",\"dweb:/ipfs/Qmd7omugWuFrjrCcwfeRQbeUS1FhqvhscTij4xtqCmjNKG\"]},\"contracts/interfaces/plugin/IAlgebraPluginFactory.sol\":{\"keccak256\":\"0xf1cc5f09fc738bf41381fdf6864919c07965f25e715af6982df54605ce3a32fc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6fa8803e45159a6c404fd714321bc2ba0e010e76e3755594628f0c0bc9204182\",\"dweb:/ipfs/QmSAtmyH38VtzgycYTjGF3Y5aWG6DPjWD3JDjGVAn4fi2m\"]},\"contracts/interfaces/vault/IAlgebraVaultFactory.sol\":{\"keccak256\":\"0xcdaae6cd6af79c4f344e673fe886a980ef5203b15b49f7a466c336c0152ce6ae\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fa2d3073bd4ca013e2769cf0fa5b68f32cec4fa53a6cc66adb59d86e6293cf15\",\"dweb:/ipfs/QmcwveJdf3JLAPfFZShijKTTxMTP4joDDuSuFboXBe711S\"]}},\"version\":1}"}},"contracts/interfaces/IAlgebraPool.sol":{"IAlgebraPool":{"abi":[{"inputs":[],"name":"alreadyInitialized","type":"error"},{"inputs":[],"name":"arithmeticError","type":"error"},{"inputs":[],"name":"bottomTickLowerThanMIN","type":"error"},{"inputs":[],"name":"dynamicFeeActive","type":"error"},{"inputs":[],"name":"dynamicFeeDisabled","type":"error"},{"inputs":[],"name":"flashInsufficientPaid0","type":"error"},{"inputs":[],"name":"flashInsufficientPaid1","type":"error"},{"inputs":[],"name":"incorrectPluginFee","type":"error"},{"inputs":[],"name":"insufficientInputAmount","type":"error"},{"inputs":[],"name":"invalidAmountRequired","type":"error"},{"inputs":[{"internalType":"bytes4","name":"expectedSelector","type":"bytes4"}],"name":"invalidHookResponse","type":"error"},{"inputs":[],"name":"invalidLimitSqrtPrice","type":"error"},{"inputs":[],"name":"invalidNewCommunityFee","type":"error"},{"inputs":[],"name":"invalidNewTickSpacing","type":"error"},{"inputs":[],"name":"liquidityAdd","type":"error"},{"inputs":[],"name":"liquidityOverflow","type":"error"},{"inputs":[],"name":"liquiditySub","type":"error"},{"inputs":[],"name":"locked","type":"error"},{"inputs":[],"name":"notAllowed","type":"error"},{"inputs":[],"name":"notInitialized","type":"error"},{"inputs":[],"name":"pluginIsNotConnected","type":"error"},{"inputs":[],"name":"priceOutOfRange","type":"error"},{"inputs":[],"name":"tickInvalidLinks","type":"error"},{"inputs":[],"name":"tickIsNotInitialized","type":"error"},{"inputs":[],"name":"tickIsNotSpaced","type":"error"},{"inputs":[],"name":"tickOutOfRange","type":"error"},{"inputs":[],"name":"topTickAboveMAX","type":"error"},{"inputs":[],"name":"topTickLowerOrEqBottomTick","type":"error"},{"inputs":[],"name":"transferFailed","type":"error"},{"inputs":[],"name":"zeroAmountRequired","type":"error"},{"inputs":[],"name":"zeroLiquidityActual","type":"error"},{"inputs":[],"name":"zeroLiquidityDesired","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"bottomTick","type":"int24"},{"indexed":true,"internalType":"int24","name":"topTick","type":"int24"},{"indexed":false,"internalType":"uint128","name":"liquidityAmount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint24","name":"pluginFee","type":"uint24"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"int24","name":"bottomTick","type":"int24"},{"indexed":true,"internalType":"int24","name":"topTick","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"Collect","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"communityFeeNew","type":"uint16"}],"name":"CommunityFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newCommunityVault","type":"address"}],"name":"CommunityVault","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"ExcessTokens","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"fee","type":"uint16"}],"name":"Fee","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid1","type":"uint256"}],"name":"Flash","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint160","name":"price","type":"uint160"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"bottomTick","type":"int24"},{"indexed":true,"internalType":"int24","name":"topTick","type":"int24"},{"indexed":false,"internalType":"uint128","name":"liquidityAmount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newPluginAddress","type":"address"}],"name":"Plugin","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"newPluginConfig","type":"uint8"}],"name":"PluginConfig","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Skim","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"int256","name":"amount0","type":"int256"},{"indexed":false,"internalType":"int256","name":"amount1","type":"int256"},{"indexed":false,"internalType":"uint160","name":"price","type":"uint160"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"},{"indexed":false,"internalType":"uint24","name":"overrideFee","type":"uint24"},{"indexed":false,"internalType":"uint24","name":"pluginFee","type":"uint24"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int24","name":"newTickSpacing","type":"int24"}],"name":"TickSpacing","type":"event"},{"inputs":[{"internalType":"int24","name":"bottomTick","type":"int24"},{"internalType":"int24","name":"topTick","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"bottomTick","type":"int24"},{"internalType":"int24","name":"topTick","type":"int24"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collect","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"communityVault","outputs":[{"internalType":"address","name":"communityVaultAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint16","name":"currentFee","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getCommunityFeePending","outputs":[{"internalType":"uint128","name":"communityFeePending0","type":"uint128"},{"internalType":"uint128","name":"communityFeePending1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPluginFeePending","outputs":[{"internalType":"uint128","name":"pluginFeePending0","type":"uint128"},{"internalType":"uint128","name":"pluginFeePending1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint128","name":"reserve0","type":"uint128"},{"internalType":"uint128","name":"reserve1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"globalState","outputs":[{"internalType":"uint160","name":"price","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint16","name":"lastFee","type":"uint16"},{"internalType":"uint8","name":"pluginConfig","type":"uint8"},{"internalType":"uint16","name":"communityFee","type":"uint16"},{"internalType":"bool","name":"unlocked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint160","name":"initialPrice","type":"uint160"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isUnlocked","outputs":[{"internalType":"bool","name":"unlocked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastFeeTransferTimestamp","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxLiquidityPerTick","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"leftoversRecipient","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"bottomTick","type":"int24"},{"internalType":"int24","name":"topTick","type":"int24"},{"internalType":"uint128","name":"liquidityDesired","type":"uint128"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"uint128","name":"liquidityActual","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"nextTickGlobal","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"plugin","outputs":[{"internalType":"address","name":"pluginAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"name":"positions","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"innerFeeGrowth0Token","type":"uint256"},{"internalType":"uint256","name":"innerFeeGrowth1Token","type":"uint256"},{"internalType":"uint128","name":"fees0","type":"uint128"},{"internalType":"uint128","name":"fees1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"prevTickGlobal","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"safelyGetStateOfAMM","outputs":[{"internalType":"uint160","name":"sqrtPrice","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint16","name":"lastFee","type":"uint16"},{"internalType":"uint8","name":"pluginConfig","type":"uint8"},{"internalType":"uint128","name":"activeLiquidity","type":"uint128"},{"internalType":"int24","name":"nextTick","type":"int24"},{"internalType":"int24","name":"previousTick","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"newCommunityFee","type":"uint16"}],"name":"setCommunityFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newCommunityVault","type":"address"}],"name":"setCommunityVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"newFee","type":"uint16"}],"name":"setFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPluginAddress","type":"address"}],"name":"setPlugin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"newConfig","type":"uint8"}],"name":"setPluginConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int24","name":"newTickSpacing","type":"int24"}],"name":"setTickSpacing","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"skim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroToOne","type":"bool"},{"internalType":"int256","name":"amountRequired","type":"int256"},{"internalType":"uint160","name":"limitSqrtPrice","type":"uint160"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"leftoversRecipient","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroToOne","type":"bool"},{"internalType":"int256","name":"amountToSell","type":"int256"},{"internalType":"uint160","name":"limitSqrtPrice","type":"uint160"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swapWithPaymentInAdvance","outputs":[{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sync","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"tickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int16","name":"wordPosition","type":"int16"}],"name":"tickTable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tickTreeRoot","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int16","name":"","type":"int16"}],"name":"tickTreeSecondLayer","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tick","type":"int24"}],"name":"ticks","outputs":[{"internalType":"uint256","name":"liquidityTotal","type":"uint256"},{"internalType":"int128","name":"liquidityDelta","type":"int128"},{"internalType":"int24","name":"prevTick","type":"int24"},{"internalType":"int24","name":"nextTick","type":"int24"},{"internalType":"uint256","name":"outerFeeGrowth0Token","type":"uint256"},{"internalType":"uint256","name":"outerFeeGrowth1Token","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalFeeGrowth0Token","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalFeeGrowth1Token","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"burn(int24,int24,uint128,bytes)":"3b3bc70e","collect(address,int24,int24,uint128,uint128)":"4f1eb3d8","communityVault()":"53e97868","factory()":"c45a0155","fee()":"ddca3f43","flash(address,uint256,uint256,bytes)":"490e6cbc","getCommunityFeePending()":"7bd78025","getPluginFeePending()":"a1eded87","getReserves()":"0902f1ac","globalState()":"e76c01e4","initialize(uint160)":"f637731d","isUnlocked()":"8380edb7","lastFeeTransferTimestamp()":"77f8c3a9","liquidity()":"1a686502","maxLiquidityPerTick()":"70cf754a","mint(address,address,int24,int24,uint128,bytes)":"aafe29c0","nextTickGlobal()":"d5c35a7e","plugin()":"ef01df4f","positions(bytes32)":"514ea4bf","prevTickGlobal()":"050a4d21","safelyGetStateOfAMM()":"97ce1c51","setCommunityFee(uint16)":"240a875a","setCommunityVault(address)":"d8544cf3","setFee(uint16)":"8e005553","setPlugin(address)":"cc1f97cf","setPluginConfig(uint8)":"bca57f81","setTickSpacing(int24)":"f085a610","skim()":"1dd19cb4","swap(address,bool,int256,uint160,bytes)":"128acb08","swapWithPaymentInAdvance(address,address,bool,int256,uint160,bytes)":"9e4e0227","sync()":"fff6cae9","tickSpacing()":"d0c93a7c","tickTable(int16)":"c677e3e0","tickTreeRoot()":"578b9a36","tickTreeSecondLayer(int16)":"d8619037","ticks(int24)":"f30dba93","token0()":"0dfe1681","token1()":"d21220a7","totalFeeGrowth0Token()":"6378ae44","totalFeeGrowth1Token()":"ecdecf42"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"alreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"arithmeticError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"bottomTickLowerThanMIN\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"dynamicFeeActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"dynamicFeeDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"flashInsufficientPaid0\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"flashInsufficientPaid1\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"incorrectPluginFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"insufficientInputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"invalidAmountRequired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"expectedSelector\",\"type\":\"bytes4\"}],\"name\":\"invalidHookResponse\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"invalidLimitSqrtPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"invalidNewCommunityFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"invalidNewTickSpacing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"liquidityAdd\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"liquidityOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"liquiditySub\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"locked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"notAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"notInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"pluginIsNotConnected\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"priceOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"tickInvalidLinks\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"tickIsNotInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"tickIsNotSpaced\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"tickOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"topTickAboveMAX\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"topTickLowerOrEqBottomTick\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"transferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"zeroAmountRequired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"zeroLiquidityActual\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"zeroLiquidityDesired\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"bottomTick\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"topTick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidityAmount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"pluginFee\",\"type\":\"uint24\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"bottomTick\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"topTick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"communityFeeNew\",\"type\":\"uint16\"}],\"name\":\"CommunityFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCommunityVault\",\"type\":\"address\"}],\"name\":\"CommunityVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"ExcessTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"fee\",\"type\":\"uint16\"}],\"name\":\"Fee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"price\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"bottomTick\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"topTick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidityAmount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPluginAddress\",\"type\":\"address\"}],\"name\":\"Plugin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"newPluginConfig\",\"type\":\"uint8\"}],\"name\":\"PluginConfig\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Skim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"price\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"overrideFee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"pluginFee\",\"type\":\"uint24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"newTickSpacing\",\"type\":\"int24\"}],\"name\":\"TickSpacing\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"bottomTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"topTick\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"bottomTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"topTick\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"communityVaultAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"currentFee\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCommunityFeePending\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"communityFeePending0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"communityFeePending1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPluginFeePending\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"pluginFeePending0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"pluginFeePending1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"reserve0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reserve1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalState\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"price\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"lastFee\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"pluginConfig\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"communityFee\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"initialPrice\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isUnlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastFeeTransferTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"leftoversRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"bottomTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"topTick\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidityDesired\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidityActual\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTickGlobal\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"plugin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pluginAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"innerFeeGrowth0Token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"innerFeeGrowth1Token\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"fees0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"fees1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prevTickGlobal\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"safelyGetStateOfAMM\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPrice\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"lastFee\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"pluginConfig\",\"type\":\"uint8\"},{\"internalType\":\"uint128\",\"name\":\"activeLiquidity\",\"type\":\"uint128\"},{\"internalType\":\"int24\",\"name\":\"nextTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"previousTick\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newCommunityFee\",\"type\":\"uint16\"}],\"name\":\"setCommunityFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCommunityVault\",\"type\":\"address\"}],\"name\":\"setCommunityVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newFee\",\"type\":\"uint16\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPluginAddress\",\"type\":\"address\"}],\"name\":\"setPlugin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"newConfig\",\"type\":\"uint8\"}],\"name\":\"setPluginConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"newTickSpacing\",\"type\":\"int24\"}],\"name\":\"setTickSpacing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroToOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountRequired\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"limitSqrtPrice\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"leftoversRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroToOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountToSell\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"limitSqrtPrice\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swapWithPaymentInAdvance\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickTable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickTreeRoot\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"\",\"type\":\"int16\"}],\"name\":\"tickTreeSecondLayer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityTotal\",\"type\":\"uint256\"},{\"internalType\":\"int128\",\"name\":\"liquidityDelta\",\"type\":\"int128\"},{\"internalType\":\"int24\",\"name\":\"prevTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"nextTick\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"outerFeeGrowth0Token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outerFeeGrowth1Token\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFeeGrowth0Token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFeeGrowth1Token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces. This interface includes custom error definitions and cannot be used in older versions of Solidity. For older versions of Solidity use #IAlgebraPoolLegacy Credit to Uniswap Labs under GPL-2.0-or-later license: https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\",\"errors\":{\"invalidHookResponse(bytes4)\":[{\"params\":{\"expectedSelector\":\"The expected selector\"}}]},\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256,uint24)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"bottomTick\":\"The lower tick of the position\",\"liquidityAmount\":\"The amount of liquidity to remove\",\"owner\":\"The owner of the position for which liquidity is removed\",\"pluginFee\":\"The fee to be sent to the plugin\",\"topTick\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"bottomTick\":\"The lower tick of the position\",\"owner\":\"The owner of the position for which fees are collected\",\"recipient\":\"The address that received fees\",\"topTick\":\"The upper tick of the position\"}},\"CommunityFee(uint16)\":{\"params\":{\"communityFeeNew\":\"The updated value of the community fee in thousandths (1e-3)\"}},\"CommunityVault(address)\":{\"params\":{\"newCommunityVault\":\"New community vault\"}},\"ExcessTokens(uint256,uint256)\":{\"details\":\"Fees after flash also will trigger this event due to mechanics of flash.\",\"params\":{\"amount0\":\"The excess of token0\",\"amount1\":\"The excess of token1\"}},\"Fee(uint16)\":{\"params\":{\"fee\":\"The current fee in hundredths of a bip, i.e. 1e-6\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swaps cannot be emitted by the pool before Initialize\",\"params\":{\"price\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"bottomTick\":\"The lower tick of the position\",\"liquidityAmount\":\"The amount of liquidity minted to the position range\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"topTick\":\"The upper tick of the position\"}},\"Plugin(address)\":{\"params\":{\"newPluginAddress\":\"New plugin address\"}},\"PluginConfig(uint8)\":{\"params\":{\"newPluginConfig\":\"New plugin config\"}},\"Skim(address,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"to\":\"THe receiver of tokens (plugin)\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24,uint24,uint24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"overrideFee\":\"The fee to be applied to the trade\",\"pluginFee\":\"The fee to be sent to the plugin\",\"price\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}},\"TickSpacing(int24)\":{\"params\":{\"newTickSpacing\":\"The updated value of the new tick spacing\"}}},\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128,bytes)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"bottomTick\":\"The lower tick of the position for which to burn liquidity\",\"data\":\"Any data that should be passed through to the plugin\",\"topTick\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"bottomTick\":\"The lower tick of the position for which to collect fees\",\"recipient\":\"The address which should receive the fees collected\",\"topTick\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"communityVault()\":{\"returns\":{\"communityVaultAddress\":\"The communityVault address\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"details\":\"In case dynamic fee is enabled in the pool, this method will call the plugin to get the current fee. If the plugin implements complex fee logic, this method may return an incorrect value or revert. In this case, see the plugin implementation and related documentation.**important security note: caller should check reentrancy lock to prevent read-only reentrancy**\",\"returns\":{\"currentFee\":\"The current pool fee value in hundredths of a bip, i.e. 1e-6\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IAlgebraFlashCallback#algebraFlashCallbackAll excess tokens paid in the callback are distributed to currently in-range liquidity providers as an additional fee. If there are no in-range liquidity providers, the fee will be transferred to the first active provider in the future\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"getCommunityFeePending()\":{\"details\":\"Will be sent FEE_TRANSFER_FREQUENCY after communityFeeLastTimestamp\",\"returns\":{\"communityFeePending0\":\"The amount of token0 that will be sent to the vault\",\"communityFeePending1\":\"The amount of token1 that will be sent to the vault\"}},\"getPluginFeePending()\":{\"details\":\"Will be sent FEE_TRANSFER_FREQUENCY after feeLastTransferTimestamp\",\"returns\":{\"pluginFeePending0\":\"The amount of token0 that will be sent to the plugin\",\"pluginFeePending1\":\"The amount of token1 that will be sent to the plugin\"}},\"getReserves()\":{\"details\":\"If at any time the real balance is larger, the excess will be transferred to liquidity providers as additional fee. If the balance exceeds uint128, the excess will be sent to the communityVault.\",\"returns\":{\"reserve0\":\"The last known reserve of token0\",\"reserve1\":\"The last known reserve of token1\"}},\"globalState()\":{\"details\":\"**important security note: caller should check `unlocked` flag to prevent read-only reentrancy**\",\"returns\":{\"communityFee\":\"The community fee represented as a percent of all collected fee in thousandths, i.e. 1e-3 (so 100 is 10%)\",\"lastFee\":\"The current (last known) pool fee value in hundredths of a bip, i.e. 1e-6 (so '100' is '0.01%'). May be obsolete if using dynamic fee plugin\",\"pluginConfig\":\"The current plugin config as bitmap. Each bit is responsible for enabling/disabling the hooks, the last bit turns on/off dynamic fees logic\",\"price\":\"The current price of the pool as a sqrt(dToken1/dToken0) Q64.96 value\",\"tick\":\"The current tick of the pool, i.e. according to the last tick transition that was run This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(price) if the price is on a tick boundary\",\"unlocked\":\"Reentrancy lock flag, true if the pool currently is unlocked, otherwise - false\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 valueInitialization should be done in one transaction with pool creation to avoid front-running\",\"params\":{\"initialPrice\":\"The initial sqrt price of the pool as a Q64.96\"}},\"isUnlocked()\":{\"details\":\"can be used to prevent read-only reentrancy. This method just returns `globalState.unlocked` value\",\"returns\":{\"unlocked\":\"Reentrancy lock flag, true if the pool currently is unlocked, otherwise - false\"}},\"lastFeeTransferTimestamp()\":{\"returns\":{\"_0\":\"The timestamp truncated to 32 bits\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks. Returned value cannot exceed type(uint128).max**important security note: caller should check reentrancy lock to prevent read-only reentrancy**\",\"returns\":{\"_0\":\"The current in range liquidity\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IAlgebraMintCallback#algebraMintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on bottomTick, topTick, the amount of liquidity, and the current price.\",\"params\":{\"bottomTick\":\"The lower tick of the position in which to add liquidity\",\"data\":\"Any data that should be passed through to the callback\",\"leftoversRecipient\":\"The address which will receive potential surplus of paid tokens\",\"liquidityDesired\":\"The desired amount of liquidity to mint\",\"recipient\":\"The address for which the liquidity will be created\",\"topTick\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"liquidityActual\":\"The actual minted amount of liquidity\"}},\"nextTickGlobal()\":{\"details\":\"**important security note: caller should check reentrancy lock to prevent read-only reentrancy**\",\"returns\":{\"_0\":\"The next initialized tick\"}},\"plugin()\":{\"details\":\"The plugin is subject to change\",\"returns\":{\"pluginAddress\":\"The address of currently used plugin\"}},\"positions(bytes32)\":{\"details\":\"**important security note: caller should check reentrancy lock to prevent read-only reentrancy**\",\"params\":{\"key\":\"The position's key is a packed concatenation of the owner address, bottomTick and topTick indexes\"},\"returns\":{\"fees0\":\"The computed amount of token0 owed to the position as of the last mint/burn/poke\",\"fees1\":\"The computed amount of token1 owed to the position as of the last mint/burn/poke\",\"innerFeeGrowth0Token\":\"Fee growth of token0 inside the tick range as of the last mint/burn/poke\",\"innerFeeGrowth1Token\":\"Fee growth of token1 inside the tick range as of the last mint/burn/poke\",\"liquidity\":\"The amount of liquidity in the position\"}},\"prevTickGlobal()\":{\"details\":\"**important security note: caller should check reentrancy lock to prevent read-only reentrancy**\",\"returns\":{\"_0\":\"The previous initialized tick\"}},\"safelyGetStateOfAMM()\":{\"details\":\"Several values exposed as a single method to save gas when accessed externally. **Important security note: this method checks reentrancy lock and should be preferred in most cases**.\",\"returns\":{\"activeLiquidity\":\" The currently in-range liquidity available to the pool\",\"lastFee\":\"The current (last known) pool fee value in hundredths of a bip, i.e. 1e-6 (so '100' is '0.01%'). May be obsolete if using dynamic fee plugin\",\"nextTick\":\"The next initialized tick after current global tick\",\"pluginConfig\":\"The current plugin config as bitmap. Each bit is responsible for enabling/disabling the hooks, the last bit turns on/off dynamic fees logic\",\"previousTick\":\"The previous initialized tick before (or at) current global tick\",\"sqrtPrice\":\"The current price of the pool as a sqrt(dToken1/dToken0) Q64.96 value\",\"tick\":\"The current global tick of the pool. May not always be equal to SqrtTickMath.getTickAtSqrtRatio(price) if the price is on a tick boundary\"}},\"setCommunityFee(uint16)\":{\"params\":{\"newCommunityFee\":\"The new community fee percent in thousandths (1e-3)\"}},\"setCommunityVault(address)\":{\"details\":\"Community fee vault receives collected community fees. **accumulated but not yet sent to the vault community fees once will be sent to the `newCommunityVault` address**\",\"params\":{\"newCommunityVault\":\"The address of new community fee vault\"}},\"setFee(uint16)\":{\"params\":{\"newFee\":\"The new fee value\"}},\"setPlugin(address)\":{\"params\":{\"newPluginAddress\":\"The new plugin address\"}},\"setPluginConfig(uint8)\":{\"params\":{\"newConfig\":\"In the new configuration of the plugin, each bit of which is responsible for a particular hook.\"}},\"setTickSpacing(int24)\":{\"params\":{\"newTickSpacing\":\"The new tick spacing value\"}},\"skim()\":{\"details\":\"Only plugin can call this function\"},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IAlgebraSwapCallback#algebraSwapCallback\",\"params\":{\"amountRequired\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback. If using the Router it should contain SwapRouter#SwapCallbackData\",\"limitSqrtPrice\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"recipient\":\"The address to receive the output of the swap\",\"zeroToOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"swapWithPaymentInAdvance(address,address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IAlgebraSwapCallback#algebraSwapCallback caller must send tokens in callback before swap calculation the actually sent amount of tokens is used for further calculations\",\"params\":{\"amountToSell\":\"The amount of the swap, only positive (exact input) amount allowed\",\"data\":\"Any data to be passed through to the callback. If using the Router it should contain SwapRouter#SwapCallbackData\",\"leftoversRecipient\":\"The address which will receive potential surplus of paid tokens\",\"limitSqrtPrice\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"recipient\":\"The address to receive the output of the swap\",\"zeroToOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"sync()\":{\"details\":\"Only plugin can call this function\"},\"tickSpacing()\":{\"details\":\"Ticks can only be initialized by new mints at multiples of this value e.g.: a tickSpacing of 60 means ticks can be initialized every 60th tick, i.e., ..., -120, -60, 0, 60, 120, ... However, tickspacing can be changed after the ticks have been initialized. This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The current tick spacing\"}},\"tickTable(int16)\":{\"params\":{\"wordPosition\":\"Index of 256-bits word with ticks\"},\"returns\":{\"_0\":\"The 256-bits word with packed ticks info\"}},\"tickTreeRoot()\":{\"details\":\"Each bit corresponds to one node in the second layer of tick tree: '1' if node has at least one active bit. **important security note: caller should check reentrancy lock to prevent read-only reentrancy**\",\"returns\":{\"_0\":\"The root of tick search tree as bitmap\"}},\"tickTreeSecondLayer(int16)\":{\"details\":\"Each bit in node corresponds to one node in the leafs layer (`tickTable`) of tick tree: '1' if leaf has at least one active bit. **important security note: caller should check reentrancy lock to prevent read-only reentrancy**\",\"returns\":{\"_0\":\"The node of tick search tree second layer\"}},\"ticks(int24)\":{\"details\":\"**important security note: caller should check reentrancy lock to prevent read-only reentrancy**\",\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityDelta\":\"How much liquidity changes when the pool price crosses the tick\",\"liquidityTotal\":\"The total amount of position liquidity that uses the pool either as tick lower or tick upper\",\"nextTick\":\"The next tick in tick list\",\"outerFeeGrowth0Token\":\"The fee growth on the other side of the tick from the current tick in token0\",\"outerFeeGrowth1Token\":\"The fee growth on the other side of the tick from the current tick in token1 In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\",\"prevTick\":\"The previous tick in tick list\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"totalFeeGrowth0Token()\":{\"details\":\"This value can overflow the uint256\",\"returns\":{\"_0\":\"The fee growth accumulator for token0\"}},\"totalFeeGrowth1Token()\":{\"details\":\"This value can overflow the uint256\",\"returns\":{\"_0\":\"The fee growth accumulator for token1\"}}},\"title\":\"The interface for a Algebra Pool\",\"version\":1},\"userdoc\":{\"errors\":{\"alreadyInitialized()\":[{\"notice\":\"Emitted if an attempt is made to initialize the pool twice\"}],\"arithmeticError()\":[{\"notice\":\"Emitted if arithmetic error occurred\"}],\"bottomTickLowerThanMIN()\":[{\"notice\":\"Emitted if the bottomTick param is lower than min allowed value\"}],\"dynamicFeeActive()\":[{\"notice\":\"Emitted if an attempt is made to manually change the fee value, but dynamic fee is enabled\"}],\"dynamicFeeDisabled()\":[{\"notice\":\"Emitted if an attempt is made by plugin to change the fee value, but dynamic fee is disabled\"}],\"flashInsufficientPaid0()\":[{\"notice\":\"Emitted if the pool received fewer tokens0 after flash than it should have\"}],\"flashInsufficientPaid1()\":[{\"notice\":\"Emitted if the pool received fewer tokens1 after flash than it should have\"}],\"incorrectPluginFee()\":[{\"notice\":\"Emitted if plugin fee param greater than fee/override fee\"}],\"insufficientInputAmount()\":[{\"notice\":\"Emitted if the pool received fewer tokens than it should have\"}],\"invalidAmountRequired()\":[{\"notice\":\"Emitted if invalid amount is passed as amountRequired to swap function\"}],\"invalidHookResponse(bytes4)\":[{\"notice\":\"Emitted if a plugin returns invalid selector after hook call\"}],\"invalidLimitSqrtPrice()\":[{\"notice\":\"Emitted if limitSqrtPrice param is incorrect\"}],\"invalidNewCommunityFee()\":[{\"notice\":\"Emitted if new community fee exceeds max allowed value\"}],\"invalidNewTickSpacing()\":[{\"notice\":\"Emitted if new tick spacing exceeds max allowed value\"}],\"liquidityAdd()\":[{\"notice\":\"Emitted if liquidity overflows\"}],\"liquidityOverflow()\":[{\"notice\":\"Emitted if the liquidity value associated with the tick exceeds MAX_LIQUIDITY_PER_TICK\"}],\"liquiditySub()\":[{\"notice\":\"Emitted if liquidity underflows\"}],\"locked()\":[{\"notice\":\"Emitted by the reentrancy guard\"}],\"notAllowed()\":[{\"notice\":\"Emitted if a method is called that is accessible only to the factory owner or dedicated role\"}],\"notInitialized()\":[{\"notice\":\"Emitted if an attempt is made to mint or swap in uninitialized pool\"}],\"pluginIsNotConnected()\":[{\"notice\":\"Emitted if an attempt is made to change the plugin configuration, but the plugin is not connected\"}],\"priceOutOfRange()\":[{\"notice\":\"Emitted if price is greater than the maximum or less than the minimum allowed value\"}],\"tickInvalidLinks()\":[{\"notice\":\"Emitted if there is an attempt to insert a new tick into the list of ticks with incorrect indexes of the previous and next ticks\"}],\"tickIsNotInitialized()\":[{\"notice\":\"Emitted if an attempt is made to interact with an uninitialized tick\"}],\"tickIsNotSpaced()\":[{\"notice\":\"Tick must be divisible by tickspacing\"}],\"tickOutOfRange()\":[{\"notice\":\"Emitted if tick is greater than the maximum or less than the minimum allowed value\"}],\"topTickAboveMAX()\":[{\"notice\":\"Emitted if the topTick param is greater than max allowed value\"}],\"topTickLowerOrEqBottomTick()\":[{\"notice\":\"Emitted if the topTick param not greater then the bottomTick param\"}],\"transferFailed()\":[{\"notice\":\"Emitted if token transfer failed internally\"}],\"zeroAmountRequired()\":[{\"notice\":\"Emitted if 0 is passed as amountRequired to swap function\"}],\"zeroLiquidityActual()\":[{\"notice\":\"Emitted if actual amount of liquidity is zero (due to insufficient amount of tokens received)\"}],\"zeroLiquidityDesired()\":[{\"notice\":\"Emitted if there was an attempt to mint zero liquidity\"}]},\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256,uint24)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CommunityFee(uint16)\":{\"notice\":\"Emitted when the community fee is changed by the pool\"},\"CommunityVault(address)\":{\"notice\":\"Emitted when the community vault address changes\"},\"ExcessTokens(uint256,uint256)\":{\"notice\":\"Emitted when the pool has higher balances than expected. Any excess of tokens will be distributed between liquidity providers as fee.\"},\"Fee(uint16)\":{\"notice\":\"Emitted when the fee changes inside the pool\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"Plugin(address)\":{\"notice\":\"Emitted when the plugin address changes\"},\"PluginConfig(uint8)\":{\"notice\":\"Emitted when the plugin config changes\"},\"Skim(address,uint256,uint256)\":{\"notice\":\"Emitted when the plugin does skim the excess of tokens\"},\"Swap(address,address,int256,int256,uint160,uint128,int24,uint24,uint24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"},\"TickSpacing(int24)\":{\"notice\":\"Emitted when the tick spacing changes\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128,bytes)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"communityVault()\":{\"notice\":\"The contract to which community fees are transferred\"},\"factory()\":{\"notice\":\"The Algebra factory contract, which must adhere to the IAlgebraFactory interface\"},\"fee()\":{\"notice\":\"The current pool fee value\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"getCommunityFeePending()\":{\"notice\":\"The amounts of token0 and token1 that will be sent to the vault\"},\"getPluginFeePending()\":{\"notice\":\"The amounts of token0 and token1 that will be sent to the plugin\"},\"getReserves()\":{\"notice\":\"The tracked token0 and token1 reserves of pool\"},\"globalState()\":{\"notice\":\"The globalState structure in the pool stores many values but requires only one slot and is exposed as a single method to save gas when accessed externally.\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"isUnlocked()\":{\"notice\":\"Allows to easily get current reentrancy lock status\"},\"lastFeeTransferTimestamp()\":{\"notice\":\"The timestamp of the last sending of tokens to vault/plugin\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/bottomTick/topTick position\"},\"nextTickGlobal()\":{\"notice\":\"The next initialized tick after current global tick\"},\"plugin()\":{\"notice\":\"Returns the address of currently used plugin\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"prevTickGlobal()\":{\"notice\":\"The previous initialized tick before (or at) current global tick\"},\"safelyGetStateOfAMM()\":{\"notice\":\"Safely get most important state values of Algebra Integral AMM\"},\"setCommunityFee(uint16)\":{\"notice\":\"Set the community's % share of the fees. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\"},\"setCommunityVault(address)\":{\"notice\":\"Set new community fee vault address. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\"},\"setFee(uint16)\":{\"notice\":\"Set new pool fee. Can be called by owner if dynamic fee is disabled. Called by the plugin if dynamic fee is enabled\"},\"setPlugin(address)\":{\"notice\":\"Set the new plugin address. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\"},\"setPluginConfig(uint8)\":{\"notice\":\"Set new plugin config. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\"},\"setTickSpacing(int24)\":{\"notice\":\"Set the new tick spacing values. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\"},\"skim()\":{\"notice\":\"Forces balances to match reserves. Excessive tokens will be sent to msg.sender\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"swapWithPaymentInAdvance(address,address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0 with prepayment\"},\"sync()\":{\"notice\":\"Forces balances to match reserves. Excessive tokens will be distributed between active LPs\"},\"tickSpacing()\":{\"notice\":\"The current tick spacing\"},\"tickTable(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickTree for more information\"},\"tickTreeRoot()\":{\"notice\":\"The root of tick search tree\"},\"tickTreeSecondLayer(int16)\":{\"notice\":\"The second layer of tick search tree\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"},\"totalFeeGrowth0Token()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"totalFeeGrowth1Token()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAlgebraPool.sol\":\"IAlgebraPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAlgebraPool.sol\":{\"keccak256\":\"0x1d8bb94007c874be2640401aeed6219392c07e8b2e779fa24c618adc58bd7ae0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://55d37783d81c98cb58ed41e6d7283af5fb07261b676a833f632cd6d128fc2e04\",\"dweb:/ipfs/QmXiJ63fWeBfkfJkLzBv1zLDyCjn5shW44ugYv44CqtTca\"]},\"contracts/interfaces/pool/IAlgebraPoolActions.sol\":{\"keccak256\":\"0x4f9b70282bac671383d001cffca1479dd64f507db84cdab16da886804c64a60c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b1bc8b774ab5027d97625c3ac01ee3f4bbdefcd012ff0bb0e4c9752096bd9562\",\"dweb:/ipfs/Qmcn5kGihMiZAMjwpY1f12nTSWMyrLqmXLvoifaqPtQYYo\"]},\"contracts/interfaces/pool/IAlgebraPoolErrors.sol\":{\"keccak256\":\"0x5ee2c56b4acc88f0c4649e39ebb0f8452381e13305bd297b53358cbe32c16069\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d25e93950215a98988cf189d2eb1cd0bc41c91d7f190b7e3c5cdfb92651dcfd5\",\"dweb:/ipfs/QmXkA7xk83yJtooAqJSRwUfR7V6iwjsiwbvEfATyasuiEM\"]},\"contracts/interfaces/pool/IAlgebraPoolEvents.sol\":{\"keccak256\":\"0x7cb9c22922bd9b9fadde18d3f4bb799792c9c54db9c6f55940f44460bdb8b283\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a97a65a2ad9c39ef9534f733d9a5d14675ba7d14d437cbef1e51ca8344f493da\",\"dweb:/ipfs/QmSFMgSpbF9TyYwGyQyJQRfBAVGsq55z1LoRCmrcj3HszD\"]},\"contracts/interfaces/pool/IAlgebraPoolImmutables.sol\":{\"keccak256\":\"0x02d0fb9c64fba4c4dd0509bb9333825c801a0587d5b957c46f5cb1c610acc447\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8480784b2654829c0958b00aa3109249ce9088dbe94b6eadeaf8e9138829a764\",\"dweb:/ipfs/QmeFG5AsPUQfhMPtvYC3f9BhGu7sVm71wj2PgXDczaM7XP\"]},\"contracts/interfaces/pool/IAlgebraPoolPermissionedActions.sol\":{\"keccak256\":\"0xbd9faad7e7599c61c3141cfe2dd2e423ad4746a6119f047b0ae6d2eccb77bc9c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0df4bed6cf34a8c0f6b971fb71411373b4d204afda35eabe8555d8cbe67e291\",\"dweb:/ipfs/QmY6z3BseKy3tEvmLVjhL7VFrNJRuQgDXJXNAFBkBQ218A\"]},\"contracts/interfaces/pool/IAlgebraPoolState.sol\":{\"keccak256\":\"0xe061f0f9b5b16934173b1127efe13ccfe80465db17156d91c04e018b31e993fa\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c607033ec09828f4a8667e7fd2e562814ec689d5806d95b4a248f57e0eff9d38\",\"dweb:/ipfs/QmbGBxBMSzPKitHmRjYJwGGEZVsXDQB6emSsZ19hjy6LUz\"]}},\"version\":1}"}},"contracts/interfaces/IAlgebraPoolDeployer.sol":{"IAlgebraPoolDeployer":{"abi":[{"inputs":[{"internalType":"address","name":"plugin","type":"address"},{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"address","name":"deployer","type":"address"}],"name":"deploy","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getDeployParameters","outputs":[{"internalType":"address","name":"plugin","type":"address"},{"internalType":"address","name":"factory","type":"address"},{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"deploy(address,address,address,address)":"fd82b73a","getDeployParameters()":"04889e26"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeployParameters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is used to avoid having constructor arguments in the pool contract, which results in the init code hash of the pool being constant allowing the CREATE2 address of the pool to be cheaply computed on-chain. Credit to Uniswap Labs under GPL-2.0-or-later license: https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\",\"kind\":\"dev\",\"methods\":{\"deploy(address,address,address,address)\":{\"details\":\"Deploys a pool with the given parameters by transiently setting the parameters in cache.\",\"params\":{\"plugin\":\"The pool associated plugin (if any)\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"},\"returns\":{\"pool\":\"The deployed pool's address\"}},\"getDeployParameters()\":{\"details\":\"Called by the pool constructor to fetch the parameters of the pool\",\"returns\":{\"factory\":\"The Algebra Factory address\",\"plugin\":\"The pool associated plugin (if any)\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"title\":\"An interface for a contract that is capable of deploying Algebra Pools\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getDeployParameters()\":{\"notice\":\"Get the parameters to be used in constructing the pool, set transiently during pool creation.\"}},\"notice\":\"A contract that constructs a pool must implement this to pass arguments to the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAlgebraPoolDeployer.sol\":\"IAlgebraPoolDeployer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAlgebraPoolDeployer.sol\":{\"keccak256\":\"0xab62d83c8573717084e5ca9016a65c01fe2a950d855b23a4c3d4fdf74e72149a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7a8c9ca01ad16fc3c7db1199cb9c89b3ecd5323f713144853f700c601c76b794\",\"dweb:/ipfs/QmVSZLQsMqWAUZykbu8ES4vRN7N6M78XYa6Kg5UkKcwM1N\"]}},\"version\":1}"}},"contracts/interfaces/plugin/IAlgebraPluginFactory.sol":{"IAlgebraPluginFactory":{"abi":[{"inputs":[{"internalType":"address","name":"plugin","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"deployer","type":"address"}],"name":"afterCreatePoolHook","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"creator","type":"address"},{"internalType":"address","name":"deployer","type":"address"},{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"beforeCreatePoolHook","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"afterCreatePoolHook(address,address,address)":"8d5ef8d1","beforeCreatePoolHook(address,address,address,address,address,bytes)":"1d0338d9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"afterCreatePoolHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"beforeCreatePoolHook\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Such a factory can be used for automatic plugin creation for new pools. Also a factory be used as an entry point for custom (additional) pools creation\",\"kind\":\"dev\",\"methods\":{\"afterCreatePoolHook(address,address,address)\":{\"params\":{\"deployer\":\"The address of new plugin deployer contract (0 if not used)\",\"plugin\":\"The plugin address\",\"pool\":\"The address of the new pool\"}},\"beforeCreatePoolHook(address,address,address,address,address,bytes)\":{\"params\":{\"creator\":\"The address that initiated the pool creation\",\"deployer\":\"The address of new plugin deployer contract (0 if not used)\",\"pool\":\"The address of the new pool\",\"token0\":\"First token of the pool\",\"token1\":\"Second token of the pool\"},\"returns\":{\"_0\":\"New plugin address\"}}},\"title\":\"An interface for a contract that is capable of deploying Algebra plugins\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"afterCreatePoolHook(address,address,address)\":{\"notice\":\"Called after the pool is created\"},\"beforeCreatePoolHook(address,address,address,address,address,bytes)\":{\"notice\":\"Deploys new plugin contract for pool\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/plugin/IAlgebraPluginFactory.sol\":\"IAlgebraPluginFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/plugin/IAlgebraPluginFactory.sol\":{\"keccak256\":\"0xf1cc5f09fc738bf41381fdf6864919c07965f25e715af6982df54605ce3a32fc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6fa8803e45159a6c404fd714321bc2ba0e010e76e3755594628f0c0bc9204182\",\"dweb:/ipfs/QmSAtmyH38VtzgycYTjGF3Y5aWG6DPjWD3JDjGVAn4fi2m\"]}},\"version\":1}"}},"contracts/interfaces/pool/IAlgebraPoolActions.sol":{"IAlgebraPoolActions":{"abi":[{"inputs":[{"internalType":"int24","name":"bottomTick","type":"int24"},{"internalType":"int24","name":"topTick","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"bottomTick","type":"int24"},{"internalType":"int24","name":"topTick","type":"int24"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collect","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint160","name":"initialPrice","type":"uint160"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"leftoversRecipient","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"bottomTick","type":"int24"},{"internalType":"int24","name":"topTick","type":"int24"},{"internalType":"uint128","name":"liquidityDesired","type":"uint128"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"uint128","name":"liquidityActual","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroToOne","type":"bool"},{"internalType":"int256","name":"amountRequired","type":"int256"},{"internalType":"uint160","name":"limitSqrtPrice","type":"uint160"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"leftoversRecipient","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroToOne","type":"bool"},{"internalType":"int256","name":"amountToSell","type":"int256"},{"internalType":"uint160","name":"limitSqrtPrice","type":"uint160"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swapWithPaymentInAdvance","outputs":[{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"burn(int24,int24,uint128,bytes)":"3b3bc70e","collect(address,int24,int24,uint128,uint128)":"4f1eb3d8","flash(address,uint256,uint256,bytes)":"490e6cbc","initialize(uint160)":"f637731d","mint(address,address,int24,int24,uint128,bytes)":"aafe29c0","swap(address,bool,int256,uint160,bytes)":"128acb08","swapWithPaymentInAdvance(address,address,bool,int256,uint160,bytes)":"9e4e0227"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"bottomTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"topTick\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"bottomTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"topTick\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"initialPrice\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"leftoversRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"bottomTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"topTick\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidityDesired\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidityActual\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroToOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountRequired\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"limitSqrtPrice\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"leftoversRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroToOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountToSell\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"limitSqrtPrice\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swapWithPaymentInAdvance\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Credit to Uniswap Labs under GPL-2.0-or-later license: https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\",\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128,bytes)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"bottomTick\":\"The lower tick of the position for which to burn liquidity\",\"data\":\"Any data that should be passed through to the plugin\",\"topTick\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"bottomTick\":\"The lower tick of the position for which to collect fees\",\"recipient\":\"The address which should receive the fees collected\",\"topTick\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IAlgebraFlashCallback#algebraFlashCallbackAll excess tokens paid in the callback are distributed to currently in-range liquidity providers as an additional fee. If there are no in-range liquidity providers, the fee will be transferred to the first active provider in the future\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 valueInitialization should be done in one transaction with pool creation to avoid front-running\",\"params\":{\"initialPrice\":\"The initial sqrt price of the pool as a Q64.96\"}},\"mint(address,address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IAlgebraMintCallback#algebraMintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on bottomTick, topTick, the amount of liquidity, and the current price.\",\"params\":{\"bottomTick\":\"The lower tick of the position in which to add liquidity\",\"data\":\"Any data that should be passed through to the callback\",\"leftoversRecipient\":\"The address which will receive potential surplus of paid tokens\",\"liquidityDesired\":\"The desired amount of liquidity to mint\",\"recipient\":\"The address for which the liquidity will be created\",\"topTick\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"liquidityActual\":\"The actual minted amount of liquidity\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IAlgebraSwapCallback#algebraSwapCallback\",\"params\":{\"amountRequired\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback. If using the Router it should contain SwapRouter#SwapCallbackData\",\"limitSqrtPrice\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"recipient\":\"The address to receive the output of the swap\",\"zeroToOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"swapWithPaymentInAdvance(address,address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IAlgebraSwapCallback#algebraSwapCallback caller must send tokens in callback before swap calculation the actually sent amount of tokens is used for further calculations\",\"params\":{\"amountToSell\":\"The amount of the swap, only positive (exact input) amount allowed\",\"data\":\"Any data to be passed through to the callback. If using the Router it should contain SwapRouter#SwapCallbackData\",\"leftoversRecipient\":\"The address which will receive potential surplus of paid tokens\",\"limitSqrtPrice\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"recipient\":\"The address to receive the output of the swap\",\"zeroToOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128,bytes)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/bottomTick/topTick position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"swapWithPaymentInAdvance(address,address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0 with prepayment\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/pool/IAlgebraPoolActions.sol\":\"IAlgebraPoolActions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/pool/IAlgebraPoolActions.sol\":{\"keccak256\":\"0x4f9b70282bac671383d001cffca1479dd64f507db84cdab16da886804c64a60c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b1bc8b774ab5027d97625c3ac01ee3f4bbdefcd012ff0bb0e4c9752096bd9562\",\"dweb:/ipfs/Qmcn5kGihMiZAMjwpY1f12nTSWMyrLqmXLvoifaqPtQYYo\"]}},\"version\":1}"}},"contracts/interfaces/pool/IAlgebraPoolErrors.sol":{"IAlgebraPoolErrors":{"abi":[{"inputs":[],"name":"alreadyInitialized","type":"error"},{"inputs":[],"name":"arithmeticError","type":"error"},{"inputs":[],"name":"bottomTickLowerThanMIN","type":"error"},{"inputs":[],"name":"dynamicFeeActive","type":"error"},{"inputs":[],"name":"dynamicFeeDisabled","type":"error"},{"inputs":[],"name":"flashInsufficientPaid0","type":"error"},{"inputs":[],"name":"flashInsufficientPaid1","type":"error"},{"inputs":[],"name":"incorrectPluginFee","type":"error"},{"inputs":[],"name":"insufficientInputAmount","type":"error"},{"inputs":[],"name":"invalidAmountRequired","type":"error"},{"inputs":[{"internalType":"bytes4","name":"expectedSelector","type":"bytes4"}],"name":"invalidHookResponse","type":"error"},{"inputs":[],"name":"invalidLimitSqrtPrice","type":"error"},{"inputs":[],"name":"invalidNewCommunityFee","type":"error"},{"inputs":[],"name":"invalidNewTickSpacing","type":"error"},{"inputs":[],"name":"liquidityAdd","type":"error"},{"inputs":[],"name":"liquidityOverflow","type":"error"},{"inputs":[],"name":"liquiditySub","type":"error"},{"inputs":[],"name":"locked","type":"error"},{"inputs":[],"name":"notAllowed","type":"error"},{"inputs":[],"name":"notInitialized","type":"error"},{"inputs":[],"name":"pluginIsNotConnected","type":"error"},{"inputs":[],"name":"priceOutOfRange","type":"error"},{"inputs":[],"name":"tickInvalidLinks","type":"error"},{"inputs":[],"name":"tickIsNotInitialized","type":"error"},{"inputs":[],"name":"tickIsNotSpaced","type":"error"},{"inputs":[],"name":"tickOutOfRange","type":"error"},{"inputs":[],"name":"topTickAboveMAX","type":"error"},{"inputs":[],"name":"topTickLowerOrEqBottomTick","type":"error"},{"inputs":[],"name":"transferFailed","type":"error"},{"inputs":[],"name":"zeroAmountRequired","type":"error"},{"inputs":[],"name":"zeroLiquidityActual","type":"error"},{"inputs":[],"name":"zeroLiquidityDesired","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"alreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"arithmeticError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"bottomTickLowerThanMIN\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"dynamicFeeActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"dynamicFeeDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"flashInsufficientPaid0\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"flashInsufficientPaid1\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"incorrectPluginFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"insufficientInputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"invalidAmountRequired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"expectedSelector\",\"type\":\"bytes4\"}],\"name\":\"invalidHookResponse\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"invalidLimitSqrtPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"invalidNewCommunityFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"invalidNewTickSpacing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"liquidityAdd\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"liquidityOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"liquiditySub\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"locked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"notAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"notInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"pluginIsNotConnected\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"priceOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"tickInvalidLinks\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"tickIsNotInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"tickIsNotSpaced\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"tickOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"topTickAboveMAX\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"topTickLowerOrEqBottomTick\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"transferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"zeroAmountRequired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"zeroLiquidityActual\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"zeroLiquidityDesired\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Custom errors are separated from the common pool interface for compatibility with older versions of Solidity\",\"errors\":{\"invalidHookResponse(bytes4)\":[{\"params\":{\"expectedSelector\":\"The expected selector\"}}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"Errors emitted by a pool\",\"version\":1},\"userdoc\":{\"errors\":{\"alreadyInitialized()\":[{\"notice\":\"Emitted if an attempt is made to initialize the pool twice\"}],\"arithmeticError()\":[{\"notice\":\"Emitted if arithmetic error occurred\"}],\"bottomTickLowerThanMIN()\":[{\"notice\":\"Emitted if the bottomTick param is lower than min allowed value\"}],\"dynamicFeeActive()\":[{\"notice\":\"Emitted if an attempt is made to manually change the fee value, but dynamic fee is enabled\"}],\"dynamicFeeDisabled()\":[{\"notice\":\"Emitted if an attempt is made by plugin to change the fee value, but dynamic fee is disabled\"}],\"flashInsufficientPaid0()\":[{\"notice\":\"Emitted if the pool received fewer tokens0 after flash than it should have\"}],\"flashInsufficientPaid1()\":[{\"notice\":\"Emitted if the pool received fewer tokens1 after flash than it should have\"}],\"incorrectPluginFee()\":[{\"notice\":\"Emitted if plugin fee param greater than fee/override fee\"}],\"insufficientInputAmount()\":[{\"notice\":\"Emitted if the pool received fewer tokens than it should have\"}],\"invalidAmountRequired()\":[{\"notice\":\"Emitted if invalid amount is passed as amountRequired to swap function\"}],\"invalidHookResponse(bytes4)\":[{\"notice\":\"Emitted if a plugin returns invalid selector after hook call\"}],\"invalidLimitSqrtPrice()\":[{\"notice\":\"Emitted if limitSqrtPrice param is incorrect\"}],\"invalidNewCommunityFee()\":[{\"notice\":\"Emitted if new community fee exceeds max allowed value\"}],\"invalidNewTickSpacing()\":[{\"notice\":\"Emitted if new tick spacing exceeds max allowed value\"}],\"liquidityAdd()\":[{\"notice\":\"Emitted if liquidity overflows\"}],\"liquidityOverflow()\":[{\"notice\":\"Emitted if the liquidity value associated with the tick exceeds MAX_LIQUIDITY_PER_TICK\"}],\"liquiditySub()\":[{\"notice\":\"Emitted if liquidity underflows\"}],\"locked()\":[{\"notice\":\"Emitted by the reentrancy guard\"}],\"notAllowed()\":[{\"notice\":\"Emitted if a method is called that is accessible only to the factory owner or dedicated role\"}],\"notInitialized()\":[{\"notice\":\"Emitted if an attempt is made to mint or swap in uninitialized pool\"}],\"pluginIsNotConnected()\":[{\"notice\":\"Emitted if an attempt is made to change the plugin configuration, but the plugin is not connected\"}],\"priceOutOfRange()\":[{\"notice\":\"Emitted if price is greater than the maximum or less than the minimum allowed value\"}],\"tickInvalidLinks()\":[{\"notice\":\"Emitted if there is an attempt to insert a new tick into the list of ticks with incorrect indexes of the previous and next ticks\"}],\"tickIsNotInitialized()\":[{\"notice\":\"Emitted if an attempt is made to interact with an uninitialized tick\"}],\"tickIsNotSpaced()\":[{\"notice\":\"Tick must be divisible by tickspacing\"}],\"tickOutOfRange()\":[{\"notice\":\"Emitted if tick is greater than the maximum or less than the minimum allowed value\"}],\"topTickAboveMAX()\":[{\"notice\":\"Emitted if the topTick param is greater than max allowed value\"}],\"topTickLowerOrEqBottomTick()\":[{\"notice\":\"Emitted if the topTick param not greater then the bottomTick param\"}],\"transferFailed()\":[{\"notice\":\"Emitted if token transfer failed internally\"}],\"zeroAmountRequired()\":[{\"notice\":\"Emitted if 0 is passed as amountRequired to swap function\"}],\"zeroLiquidityActual()\":[{\"notice\":\"Emitted if actual amount of liquidity is zero (due to insufficient amount of tokens received)\"}],\"zeroLiquidityDesired()\":[{\"notice\":\"Emitted if there was an attempt to mint zero liquidity\"}]},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains custom errors emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/pool/IAlgebraPoolErrors.sol\":\"IAlgebraPoolErrors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/pool/IAlgebraPoolErrors.sol\":{\"keccak256\":\"0x5ee2c56b4acc88f0c4649e39ebb0f8452381e13305bd297b53358cbe32c16069\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d25e93950215a98988cf189d2eb1cd0bc41c91d7f190b7e3c5cdfb92651dcfd5\",\"dweb:/ipfs/QmXkA7xk83yJtooAqJSRwUfR7V6iwjsiwbvEfATyasuiEM\"]}},\"version\":1}"}},"contracts/interfaces/pool/IAlgebraPoolEvents.sol":{"IAlgebraPoolEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"bottomTick","type":"int24"},{"indexed":true,"internalType":"int24","name":"topTick","type":"int24"},{"indexed":false,"internalType":"uint128","name":"liquidityAmount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint24","name":"pluginFee","type":"uint24"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"int24","name":"bottomTick","type":"int24"},{"indexed":true,"internalType":"int24","name":"topTick","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"Collect","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"communityFeeNew","type":"uint16"}],"name":"CommunityFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newCommunityVault","type":"address"}],"name":"CommunityVault","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"ExcessTokens","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"fee","type":"uint16"}],"name":"Fee","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid1","type":"uint256"}],"name":"Flash","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint160","name":"price","type":"uint160"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"bottomTick","type":"int24"},{"indexed":true,"internalType":"int24","name":"topTick","type":"int24"},{"indexed":false,"internalType":"uint128","name":"liquidityAmount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newPluginAddress","type":"address"}],"name":"Plugin","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"newPluginConfig","type":"uint8"}],"name":"PluginConfig","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Skim","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"int256","name":"amount0","type":"int256"},{"indexed":false,"internalType":"int256","name":"amount1","type":"int256"},{"indexed":false,"internalType":"uint160","name":"price","type":"uint160"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"},{"indexed":false,"internalType":"uint24","name":"overrideFee","type":"uint24"},{"indexed":false,"internalType":"uint24","name":"pluginFee","type":"uint24"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int24","name":"newTickSpacing","type":"int24"}],"name":"TickSpacing","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"bottomTick\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"topTick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidityAmount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"pluginFee\",\"type\":\"uint24\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"bottomTick\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"topTick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"communityFeeNew\",\"type\":\"uint16\"}],\"name\":\"CommunityFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCommunityVault\",\"type\":\"address\"}],\"name\":\"CommunityVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"ExcessTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"fee\",\"type\":\"uint16\"}],\"name\":\"Fee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"price\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"bottomTick\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"topTick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidityAmount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPluginAddress\",\"type\":\"address\"}],\"name\":\"Plugin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"newPluginConfig\",\"type\":\"uint8\"}],\"name\":\"PluginConfig\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Skim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"price\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"overrideFee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"pluginFee\",\"type\":\"uint24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"newTickSpacing\",\"type\":\"int24\"}],\"name\":\"TickSpacing\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Credit to Uniswap Labs under GPL-2.0-or-later license: https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\",\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256,uint24)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"bottomTick\":\"The lower tick of the position\",\"liquidityAmount\":\"The amount of liquidity to remove\",\"owner\":\"The owner of the position for which liquidity is removed\",\"pluginFee\":\"The fee to be sent to the plugin\",\"topTick\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"bottomTick\":\"The lower tick of the position\",\"owner\":\"The owner of the position for which fees are collected\",\"recipient\":\"The address that received fees\",\"topTick\":\"The upper tick of the position\"}},\"CommunityFee(uint16)\":{\"params\":{\"communityFeeNew\":\"The updated value of the community fee in thousandths (1e-3)\"}},\"CommunityVault(address)\":{\"params\":{\"newCommunityVault\":\"New community vault\"}},\"ExcessTokens(uint256,uint256)\":{\"details\":\"Fees after flash also will trigger this event due to mechanics of flash.\",\"params\":{\"amount0\":\"The excess of token0\",\"amount1\":\"The excess of token1\"}},\"Fee(uint16)\":{\"params\":{\"fee\":\"The current fee in hundredths of a bip, i.e. 1e-6\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swaps cannot be emitted by the pool before Initialize\",\"params\":{\"price\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"bottomTick\":\"The lower tick of the position\",\"liquidityAmount\":\"The amount of liquidity minted to the position range\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"topTick\":\"The upper tick of the position\"}},\"Plugin(address)\":{\"params\":{\"newPluginAddress\":\"New plugin address\"}},\"PluginConfig(uint8)\":{\"params\":{\"newPluginConfig\":\"New plugin config\"}},\"Skim(address,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"to\":\"THe receiver of tokens (plugin)\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24,uint24,uint24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"overrideFee\":\"The fee to be applied to the trade\",\"pluginFee\":\"The fee to be sent to the plugin\",\"price\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}},\"TickSpacing(int24)\":{\"params\":{\"newTickSpacing\":\"The updated value of the new tick spacing\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256,uint24)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CommunityFee(uint16)\":{\"notice\":\"Emitted when the community fee is changed by the pool\"},\"CommunityVault(address)\":{\"notice\":\"Emitted when the community vault address changes\"},\"ExcessTokens(uint256,uint256)\":{\"notice\":\"Emitted when the pool has higher balances than expected. Any excess of tokens will be distributed between liquidity providers as fee.\"},\"Fee(uint16)\":{\"notice\":\"Emitted when the fee changes inside the pool\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"Plugin(address)\":{\"notice\":\"Emitted when the plugin address changes\"},\"PluginConfig(uint8)\":{\"notice\":\"Emitted when the plugin config changes\"},\"Skim(address,uint256,uint256)\":{\"notice\":\"Emitted when the plugin does skim the excess of tokens\"},\"Swap(address,address,int256,int256,uint160,uint128,int24,uint24,uint24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"},\"TickSpacing(int24)\":{\"notice\":\"Emitted when the tick spacing changes\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/pool/IAlgebraPoolEvents.sol\":\"IAlgebraPoolEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/pool/IAlgebraPoolEvents.sol\":{\"keccak256\":\"0x7cb9c22922bd9b9fadde18d3f4bb799792c9c54db9c6f55940f44460bdb8b283\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a97a65a2ad9c39ef9534f733d9a5d14675ba7d14d437cbef1e51ca8344f493da\",\"dweb:/ipfs/QmSFMgSpbF9TyYwGyQyJQRfBAVGsq55z1LoRCmrcj3HszD\"]}},\"version\":1}"}},"contracts/interfaces/pool/IAlgebraPoolImmutables.sol":{"IAlgebraPoolImmutables":{"abi":[{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxLiquidityPerTick","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"factory()":"c45a0155","maxLiquidityPerTick()":"70cf754a","token0()":"0dfe1681","token1()":"d21220a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Credit to Uniswap Labs under GPL-2.0-or-later license: https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\",\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The Algebra factory contract, which must adhere to the IAlgebraFactory interface\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/pool/IAlgebraPoolImmutables.sol\":\"IAlgebraPoolImmutables\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/pool/IAlgebraPoolImmutables.sol\":{\"keccak256\":\"0x02d0fb9c64fba4c4dd0509bb9333825c801a0587d5b957c46f5cb1c610acc447\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8480784b2654829c0958b00aa3109249ce9088dbe94b6eadeaf8e9138829a764\",\"dweb:/ipfs/QmeFG5AsPUQfhMPtvYC3f9BhGu7sVm71wj2PgXDczaM7XP\"]}},\"version\":1}"}},"contracts/interfaces/pool/IAlgebraPoolPermissionedActions.sol":{"IAlgebraPoolPermissionedActions":{"abi":[{"inputs":[{"internalType":"uint16","name":"newCommunityFee","type":"uint16"}],"name":"setCommunityFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newCommunityVault","type":"address"}],"name":"setCommunityVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"newFee","type":"uint16"}],"name":"setFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPluginAddress","type":"address"}],"name":"setPlugin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"newConfig","type":"uint8"}],"name":"setPluginConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int24","name":"newTickSpacing","type":"int24"}],"name":"setTickSpacing","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"skim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sync","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"setCommunityFee(uint16)":"240a875a","setCommunityVault(address)":"d8544cf3","setFee(uint16)":"8e005553","setPlugin(address)":"cc1f97cf","setPluginConfig(uint8)":"bca57f81","setTickSpacing(int24)":"f085a610","skim()":"1dd19cb4","sync()":"fff6cae9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newCommunityFee\",\"type\":\"uint16\"}],\"name\":\"setCommunityFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCommunityVault\",\"type\":\"address\"}],\"name\":\"setCommunityVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newFee\",\"type\":\"uint16\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPluginAddress\",\"type\":\"address\"}],\"name\":\"setPlugin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"newConfig\",\"type\":\"uint8\"}],\"name\":\"setPluginConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"newTickSpacing\",\"type\":\"int24\"}],\"name\":\"setTickSpacing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Credit to Uniswap Labs under GPL-2.0-or-later license: https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\",\"kind\":\"dev\",\"methods\":{\"setCommunityFee(uint16)\":{\"params\":{\"newCommunityFee\":\"The new community fee percent in thousandths (1e-3)\"}},\"setCommunityVault(address)\":{\"details\":\"Community fee vault receives collected community fees. **accumulated but not yet sent to the vault community fees once will be sent to the `newCommunityVault` address**\",\"params\":{\"newCommunityVault\":\"The address of new community fee vault\"}},\"setFee(uint16)\":{\"params\":{\"newFee\":\"The new fee value\"}},\"setPlugin(address)\":{\"params\":{\"newPluginAddress\":\"The new plugin address\"}},\"setPluginConfig(uint8)\":{\"params\":{\"newConfig\":\"In the new configuration of the plugin, each bit of which is responsible for a particular hook.\"}},\"setTickSpacing(int24)\":{\"params\":{\"newTickSpacing\":\"The new tick spacing value\"}},\"skim()\":{\"details\":\"Only plugin can call this function\"},\"sync()\":{\"details\":\"Only plugin can call this function\"}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setCommunityFee(uint16)\":{\"notice\":\"Set the community's % share of the fees. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\"},\"setCommunityVault(address)\":{\"notice\":\"Set new community fee vault address. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\"},\"setFee(uint16)\":{\"notice\":\"Set new pool fee. Can be called by owner if dynamic fee is disabled. Called by the plugin if dynamic fee is enabled\"},\"setPlugin(address)\":{\"notice\":\"Set the new plugin address. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\"},\"setPluginConfig(uint8)\":{\"notice\":\"Set new plugin config. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\"},\"setTickSpacing(int24)\":{\"notice\":\"Set the new tick spacing values. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\"},\"skim()\":{\"notice\":\"Forces balances to match reserves. Excessive tokens will be sent to msg.sender\"},\"sync()\":{\"notice\":\"Forces balances to match reserves. Excessive tokens will be distributed between active LPs\"}},\"notice\":\"Contains pool methods that may only be called by permissioned addresses\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/pool/IAlgebraPoolPermissionedActions.sol\":\"IAlgebraPoolPermissionedActions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/pool/IAlgebraPoolPermissionedActions.sol\":{\"keccak256\":\"0xbd9faad7e7599c61c3141cfe2dd2e423ad4746a6119f047b0ae6d2eccb77bc9c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0df4bed6cf34a8c0f6b971fb71411373b4d204afda35eabe8555d8cbe67e291\",\"dweb:/ipfs/QmY6z3BseKy3tEvmLVjhL7VFrNJRuQgDXJXNAFBkBQ218A\"]}},\"version\":1}"}},"contracts/interfaces/pool/IAlgebraPoolState.sol":{"IAlgebraPoolState":{"abi":[{"inputs":[],"name":"communityVault","outputs":[{"internalType":"address","name":"communityVaultAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint16","name":"currentFee","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCommunityFeePending","outputs":[{"internalType":"uint128","name":"communityFeePending0","type":"uint128"},{"internalType":"uint128","name":"communityFeePending1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPluginFeePending","outputs":[{"internalType":"uint128","name":"pluginFeePending0","type":"uint128"},{"internalType":"uint128","name":"pluginFeePending1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint128","name":"reserve0","type":"uint128"},{"internalType":"uint128","name":"reserve1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"globalState","outputs":[{"internalType":"uint160","name":"price","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint16","name":"lastFee","type":"uint16"},{"internalType":"uint8","name":"pluginConfig","type":"uint8"},{"internalType":"uint16","name":"communityFee","type":"uint16"},{"internalType":"bool","name":"unlocked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isUnlocked","outputs":[{"internalType":"bool","name":"unlocked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastFeeTransferTimestamp","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextTickGlobal","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"plugin","outputs":[{"internalType":"address","name":"pluginAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"name":"positions","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"innerFeeGrowth0Token","type":"uint256"},{"internalType":"uint256","name":"innerFeeGrowth1Token","type":"uint256"},{"internalType":"uint128","name":"fees0","type":"uint128"},{"internalType":"uint128","name":"fees1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"prevTickGlobal","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"safelyGetStateOfAMM","outputs":[{"internalType":"uint160","name":"sqrtPrice","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint16","name":"lastFee","type":"uint16"},{"internalType":"uint8","name":"pluginConfig","type":"uint8"},{"internalType":"uint128","name":"activeLiquidity","type":"uint128"},{"internalType":"int24","name":"nextTick","type":"int24"},{"internalType":"int24","name":"previousTick","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int16","name":"wordPosition","type":"int16"}],"name":"tickTable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tickTreeRoot","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int16","name":"","type":"int16"}],"name":"tickTreeSecondLayer","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tick","type":"int24"}],"name":"ticks","outputs":[{"internalType":"uint256","name":"liquidityTotal","type":"uint256"},{"internalType":"int128","name":"liquidityDelta","type":"int128"},{"internalType":"int24","name":"prevTick","type":"int24"},{"internalType":"int24","name":"nextTick","type":"int24"},{"internalType":"uint256","name":"outerFeeGrowth0Token","type":"uint256"},{"internalType":"uint256","name":"outerFeeGrowth1Token","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalFeeGrowth0Token","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalFeeGrowth1Token","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"communityVault()":"53e97868","fee()":"ddca3f43","getCommunityFeePending()":"7bd78025","getPluginFeePending()":"a1eded87","getReserves()":"0902f1ac","globalState()":"e76c01e4","isUnlocked()":"8380edb7","lastFeeTransferTimestamp()":"77f8c3a9","liquidity()":"1a686502","nextTickGlobal()":"d5c35a7e","plugin()":"ef01df4f","positions(bytes32)":"514ea4bf","prevTickGlobal()":"050a4d21","safelyGetStateOfAMM()":"97ce1c51","tickSpacing()":"d0c93a7c","tickTable(int16)":"c677e3e0","tickTreeRoot()":"578b9a36","tickTreeSecondLayer(int16)":"d8619037","ticks(int24)":"f30dba93","totalFeeGrowth0Token()":"6378ae44","totalFeeGrowth1Token()":"ecdecf42"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"communityVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"communityVaultAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"currentFee\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCommunityFeePending\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"communityFeePending0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"communityFeePending1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPluginFeePending\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"pluginFeePending0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"pluginFeePending1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"reserve0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reserve1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalState\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"price\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"lastFee\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"pluginConfig\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"communityFee\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isUnlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastFeeTransferTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTickGlobal\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"plugin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pluginAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"innerFeeGrowth0Token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"innerFeeGrowth1Token\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"fees0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"fees1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prevTickGlobal\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"safelyGetStateOfAMM\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPrice\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"lastFee\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"pluginConfig\",\"type\":\"uint8\"},{\"internalType\":\"uint128\",\"name\":\"activeLiquidity\",\"type\":\"uint128\"},{\"internalType\":\"int24\",\"name\":\"nextTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"previousTick\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickTable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickTreeRoot\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"\",\"type\":\"int16\"}],\"name\":\"tickTreeSecondLayer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityTotal\",\"type\":\"uint256\"},{\"internalType\":\"int128\",\"name\":\"liquidityDelta\",\"type\":\"int128\"},{\"internalType\":\"int24\",\"name\":\"prevTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"nextTick\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"outerFeeGrowth0Token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outerFeeGrowth1Token\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFeeGrowth0Token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFeeGrowth1Token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Important security note: when using this data by external contracts, it is necessary to take into account the possibility of manipulation (including read-only reentrancy). This interface is based on the UniswapV3 interface, credit to Uniswap Labs under GPL-2.0-or-later license: https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\",\"kind\":\"dev\",\"methods\":{\"communityVault()\":{\"returns\":{\"communityVaultAddress\":\"The communityVault address\"}},\"fee()\":{\"details\":\"In case dynamic fee is enabled in the pool, this method will call the plugin to get the current fee. If the plugin implements complex fee logic, this method may return an incorrect value or revert. In this case, see the plugin implementation and related documentation.**important security note: caller should check reentrancy lock to prevent read-only reentrancy**\",\"returns\":{\"currentFee\":\"The current pool fee value in hundredths of a bip, i.e. 1e-6\"}},\"getCommunityFeePending()\":{\"details\":\"Will be sent FEE_TRANSFER_FREQUENCY after communityFeeLastTimestamp\",\"returns\":{\"communityFeePending0\":\"The amount of token0 that will be sent to the vault\",\"communityFeePending1\":\"The amount of token1 that will be sent to the vault\"}},\"getPluginFeePending()\":{\"details\":\"Will be sent FEE_TRANSFER_FREQUENCY after feeLastTransferTimestamp\",\"returns\":{\"pluginFeePending0\":\"The amount of token0 that will be sent to the plugin\",\"pluginFeePending1\":\"The amount of token1 that will be sent to the plugin\"}},\"getReserves()\":{\"details\":\"If at any time the real balance is larger, the excess will be transferred to liquidity providers as additional fee. If the balance exceeds uint128, the excess will be sent to the communityVault.\",\"returns\":{\"reserve0\":\"The last known reserve of token0\",\"reserve1\":\"The last known reserve of token1\"}},\"globalState()\":{\"details\":\"**important security note: caller should check `unlocked` flag to prevent read-only reentrancy**\",\"returns\":{\"communityFee\":\"The community fee represented as a percent of all collected fee in thousandths, i.e. 1e-3 (so 100 is 10%)\",\"lastFee\":\"The current (last known) pool fee value in hundredths of a bip, i.e. 1e-6 (so '100' is '0.01%'). May be obsolete if using dynamic fee plugin\",\"pluginConfig\":\"The current plugin config as bitmap. Each bit is responsible for enabling/disabling the hooks, the last bit turns on/off dynamic fees logic\",\"price\":\"The current price of the pool as a sqrt(dToken1/dToken0) Q64.96 value\",\"tick\":\"The current tick of the pool, i.e. according to the last tick transition that was run This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(price) if the price is on a tick boundary\",\"unlocked\":\"Reentrancy lock flag, true if the pool currently is unlocked, otherwise - false\"}},\"isUnlocked()\":{\"details\":\"can be used to prevent read-only reentrancy. This method just returns `globalState.unlocked` value\",\"returns\":{\"unlocked\":\"Reentrancy lock flag, true if the pool currently is unlocked, otherwise - false\"}},\"lastFeeTransferTimestamp()\":{\"returns\":{\"_0\":\"The timestamp truncated to 32 bits\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks. Returned value cannot exceed type(uint128).max**important security note: caller should check reentrancy lock to prevent read-only reentrancy**\",\"returns\":{\"_0\":\"The current in range liquidity\"}},\"nextTickGlobal()\":{\"details\":\"**important security note: caller should check reentrancy lock to prevent read-only reentrancy**\",\"returns\":{\"_0\":\"The next initialized tick\"}},\"plugin()\":{\"details\":\"The plugin is subject to change\",\"returns\":{\"pluginAddress\":\"The address of currently used plugin\"}},\"positions(bytes32)\":{\"details\":\"**important security note: caller should check reentrancy lock to prevent read-only reentrancy**\",\"params\":{\"key\":\"The position's key is a packed concatenation of the owner address, bottomTick and topTick indexes\"},\"returns\":{\"fees0\":\"The computed amount of token0 owed to the position as of the last mint/burn/poke\",\"fees1\":\"The computed amount of token1 owed to the position as of the last mint/burn/poke\",\"innerFeeGrowth0Token\":\"Fee growth of token0 inside the tick range as of the last mint/burn/poke\",\"innerFeeGrowth1Token\":\"Fee growth of token1 inside the tick range as of the last mint/burn/poke\",\"liquidity\":\"The amount of liquidity in the position\"}},\"prevTickGlobal()\":{\"details\":\"**important security note: caller should check reentrancy lock to prevent read-only reentrancy**\",\"returns\":{\"_0\":\"The previous initialized tick\"}},\"safelyGetStateOfAMM()\":{\"details\":\"Several values exposed as a single method to save gas when accessed externally. **Important security note: this method checks reentrancy lock and should be preferred in most cases**.\",\"returns\":{\"activeLiquidity\":\" The currently in-range liquidity available to the pool\",\"lastFee\":\"The current (last known) pool fee value in hundredths of a bip, i.e. 1e-6 (so '100' is '0.01%'). May be obsolete if using dynamic fee plugin\",\"nextTick\":\"The next initialized tick after current global tick\",\"pluginConfig\":\"The current plugin config as bitmap. Each bit is responsible for enabling/disabling the hooks, the last bit turns on/off dynamic fees logic\",\"previousTick\":\"The previous initialized tick before (or at) current global tick\",\"sqrtPrice\":\"The current price of the pool as a sqrt(dToken1/dToken0) Q64.96 value\",\"tick\":\"The current global tick of the pool. May not always be equal to SqrtTickMath.getTickAtSqrtRatio(price) if the price is on a tick boundary\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be initialized by new mints at multiples of this value e.g.: a tickSpacing of 60 means ticks can be initialized every 60th tick, i.e., ..., -120, -60, 0, 60, 120, ... However, tickspacing can be changed after the ticks have been initialized. This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The current tick spacing\"}},\"tickTable(int16)\":{\"params\":{\"wordPosition\":\"Index of 256-bits word with ticks\"},\"returns\":{\"_0\":\"The 256-bits word with packed ticks info\"}},\"tickTreeRoot()\":{\"details\":\"Each bit corresponds to one node in the second layer of tick tree: '1' if node has at least one active bit. **important security note: caller should check reentrancy lock to prevent read-only reentrancy**\",\"returns\":{\"_0\":\"The root of tick search tree as bitmap\"}},\"tickTreeSecondLayer(int16)\":{\"details\":\"Each bit in node corresponds to one node in the leafs layer (`tickTable`) of tick tree: '1' if leaf has at least one active bit. **important security note: caller should check reentrancy lock to prevent read-only reentrancy**\",\"returns\":{\"_0\":\"The node of tick search tree second layer\"}},\"ticks(int24)\":{\"details\":\"**important security note: caller should check reentrancy lock to prevent read-only reentrancy**\",\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityDelta\":\"How much liquidity changes when the pool price crosses the tick\",\"liquidityTotal\":\"The total amount of position liquidity that uses the pool either as tick lower or tick upper\",\"nextTick\":\"The next tick in tick list\",\"outerFeeGrowth0Token\":\"The fee growth on the other side of the tick from the current tick in token0\",\"outerFeeGrowth1Token\":\"The fee growth on the other side of the tick from the current tick in token1 In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\",\"prevTick\":\"The previous tick in tick list\"}},\"totalFeeGrowth0Token()\":{\"details\":\"This value can overflow the uint256\",\"returns\":{\"_0\":\"The fee growth accumulator for token0\"}},\"totalFeeGrowth1Token()\":{\"details\":\"This value can overflow the uint256\",\"returns\":{\"_0\":\"The fee growth accumulator for token1\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"communityVault()\":{\"notice\":\"The contract to which community fees are transferred\"},\"fee()\":{\"notice\":\"The current pool fee value\"},\"getCommunityFeePending()\":{\"notice\":\"The amounts of token0 and token1 that will be sent to the vault\"},\"getPluginFeePending()\":{\"notice\":\"The amounts of token0 and token1 that will be sent to the plugin\"},\"getReserves()\":{\"notice\":\"The tracked token0 and token1 reserves of pool\"},\"globalState()\":{\"notice\":\"The globalState structure in the pool stores many values but requires only one slot and is exposed as a single method to save gas when accessed externally.\"},\"isUnlocked()\":{\"notice\":\"Allows to easily get current reentrancy lock status\"},\"lastFeeTransferTimestamp()\":{\"notice\":\"The timestamp of the last sending of tokens to vault/plugin\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"nextTickGlobal()\":{\"notice\":\"The next initialized tick after current global tick\"},\"plugin()\":{\"notice\":\"Returns the address of currently used plugin\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"prevTickGlobal()\":{\"notice\":\"The previous initialized tick before (or at) current global tick\"},\"safelyGetStateOfAMM()\":{\"notice\":\"Safely get most important state values of Algebra Integral AMM\"},\"tickSpacing()\":{\"notice\":\"The current tick spacing\"},\"tickTable(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickTree for more information\"},\"tickTreeRoot()\":{\"notice\":\"The root of tick search tree\"},\"tickTreeSecondLayer(int16)\":{\"notice\":\"The second layer of tick search tree\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"totalFeeGrowth0Token()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"totalFeeGrowth1Token()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/pool/IAlgebraPoolState.sol\":\"IAlgebraPoolState\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/pool/IAlgebraPoolState.sol\":{\"keccak256\":\"0xe061f0f9b5b16934173b1127efe13ccfe80465db17156d91c04e018b31e993fa\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c607033ec09828f4a8667e7fd2e562814ec689d5806d95b4a248f57e0eff9d38\",\"dweb:/ipfs/QmbGBxBMSzPKitHmRjYJwGGEZVsXDQB6emSsZ19hjy6LUz\"]}},\"version\":1}"}},"contracts/interfaces/vault/IAlgebraCommunityVault.sol":{"IAlgebraCommunityVault":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"newAlgebraFee","type":"uint16"}],"name":"AlgebraFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newAlgebraFeeManager","type":"address"}],"name":"AlgebraFeeManager","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"proposedNewAlgebraFee","type":"uint16"}],"name":"AlgebraFeeProposal","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newAlgebraFeeReceiver","type":"address"}],"name":"AlgebraFeeReceiver","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"AlgebraTokensWithdrawal","type":"event"},{"anonymous":false,"inputs":[],"name":"CancelAlgebraFeeProposal","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newCommunityFeeReceiver","type":"address"}],"name":"CommunityFeeReceiver","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"pendingAlgebraFeeManager","type":"address"}],"name":"PendingAlgebraFeeManager","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensWithdrawal","type":"event"},{"inputs":[{"internalType":"uint16","name":"newAlgebraFee","type":"uint16"}],"name":"acceptAlgebraFeeChangeProposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"acceptAlgebraFeeManagerRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cancelAlgebraFeeChangeProposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAlgebraFeeReceiver","type":"address"}],"name":"changeAlgebraFeeReceiver","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newCommunityFeeReceiver","type":"address"}],"name":"changeCommunityFeeReceiver","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"newAlgebraFee","type":"uint16"}],"name":"proposeAlgebraFeeChange","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newAlgebraFeeManager","type":"address"}],"name":"transferAlgebraFeeManagerRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IAlgebraCommunityVault.WithdrawTokensParams[]","name":"params","type":"tuple[]"}],"name":"withdrawTokens","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptAlgebraFeeChangeProposal(uint16)":"ff3c43e1","acceptAlgebraFeeManagerRole()":"ad6129ac","cancelAlgebraFeeChangeProposal()":"d17bc783","changeAlgebraFeeReceiver(address)":"48a50fcf","changeCommunityFeeReceiver(address)":"b5f680ae","proposeAlgebraFeeChange(uint16)":"d9fb4353","transferAlgebraFeeManagerRole(address)":"50eea0c8","withdraw(address,uint256)":"f3fef3a3","withdrawTokens((address,uint256)[])":"dfadc794"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newAlgebraFee\",\"type\":\"uint16\"}],\"name\":\"AlgebraFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAlgebraFeeManager\",\"type\":\"address\"}],\"name\":\"AlgebraFeeManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"proposedNewAlgebraFee\",\"type\":\"uint16\"}],\"name\":\"AlgebraFeeProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAlgebraFeeReceiver\",\"type\":\"address\"}],\"name\":\"AlgebraFeeReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AlgebraTokensWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CancelAlgebraFeeProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCommunityFeeReceiver\",\"type\":\"address\"}],\"name\":\"CommunityFeeReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pendingAlgebraFeeManager\",\"type\":\"address\"}],\"name\":\"PendingAlgebraFeeManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newAlgebraFee\",\"type\":\"uint16\"}],\"name\":\"acceptAlgebraFeeChangeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptAlgebraFeeManagerRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelAlgebraFeeChangeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAlgebraFeeReceiver\",\"type\":\"address\"}],\"name\":\"changeAlgebraFeeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCommunityFeeReceiver\",\"type\":\"address\"}],\"name\":\"changeCommunityFeeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newAlgebraFee\",\"type\":\"uint16\"}],\"name\":\"proposeAlgebraFeeChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAlgebraFeeManager\",\"type\":\"address\"}],\"name\":\"transferAlgebraFeeManagerRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IAlgebraCommunityVault.WithdrawTokensParams[]\",\"name\":\"params\",\"type\":\"tuple[]\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Version: Algebra Integral\",\"events\":{\"AlgebraFee(uint16)\":{\"params\":{\"newAlgebraFee\":\"The new Algebra fee value\"}},\"AlgebraFeeManager(address)\":{\"params\":{\"newAlgebraFeeManager\":\"New Algebra fee manager address\"}},\"AlgebraFeeProposal(uint16)\":{\"params\":{\"proposedNewAlgebraFee\":\"The new proposed Algebra fee value\"}},\"AlgebraFeeReceiver(address)\":{\"params\":{\"newAlgebraFeeReceiver\":\"New Algebra fee receiver address\"}},\"AlgebraTokensWithdrawal(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of fees tokens claimed by Algebra\",\"to\":\"The address where claimed rewards were sent to\",\"token\":\"The address of token fee\"}},\"CommunityFeeReceiver(address)\":{\"params\":{\"newCommunityFeeReceiver\":\"New fee receiver address\"}},\"PendingAlgebraFeeManager(address)\":{\"params\":{\"pendingAlgebraFeeManager\":\"New pending Algebra fee manager address\"}},\"TokensWithdrawal(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of fees tokens claimed by communityFeeReceiver\",\"to\":\"The address where claimed rewards were sent to\",\"token\":\"The address of token fee\"}}},\"kind\":\"dev\",\"methods\":{\"acceptAlgebraFeeChangeProposal(uint16)\":{\"details\":\"Can only be called by the factory owner. The new value will also be used for previously accumulated tokens that have not yet been withdrawn\",\"params\":{\"newAlgebraFee\":\"New Algebra fee value\"}},\"changeAlgebraFeeReceiver(address)\":{\"params\":{\"newAlgebraFeeReceiver\":\"The address of new Algebra fee receiver\"}},\"changeCommunityFeeReceiver(address)\":{\"details\":\"Can only be called by the factory owner\",\"params\":{\"newCommunityFeeReceiver\":\"New community fee receiver address\"}},\"proposeAlgebraFeeChange(uint16)\":{\"details\":\"the new value will also be used for previously accumulated tokens that have not yet been withdrawn\",\"params\":{\"newAlgebraFee\":\"new Algebra fee value\"}},\"transferAlgebraFeeManagerRole(address)\":{\"params\":{\"_newAlgebraFeeManager\":\"new Algebra fee manager address\"}},\"withdraw(address,uint256)\":{\"details\":\"Can only be called by algebraFeeManager or communityFeeReceiver\",\"params\":{\"amount\":\"The amount of token\",\"token\":\"The token address\"}},\"withdrawTokens((address,uint256)[])\":{\"details\":\"Can be called by algebraFeeManager or communityFeeReceiver\",\"params\":{\"params\":\"Array of WithdrawTokensParams objects containing token addresses and amounts to withdraw\"}}},\"title\":\"The interface for the Algebra community fee vault\",\"version\":1},\"userdoc\":{\"events\":{\"AlgebraFee(uint16)\":{\"notice\":\"Emitted when the Algebra fee is changed\"},\"AlgebraFeeManager(address)\":{\"notice\":\"Emitted when a AlgebraFeeManager address changed\"},\"AlgebraFeeProposal(uint16)\":{\"notice\":\"Emitted when a new Algebra fee value proposed\"},\"AlgebraFeeReceiver(address)\":{\"notice\":\"Emitted when a AlgebraFeeReceiver address changed\"},\"AlgebraTokensWithdrawal(address,address,uint256)\":{\"notice\":\"Event emitted when a fees has been claimed\"},\"CancelAlgebraFeeProposal()\":{\"notice\":\"Emitted when a Algebra fee proposal canceled\"},\"CommunityFeeReceiver(address)\":{\"notice\":\"Emitted when a CommunityFeeReceiver address changed\"},\"PendingAlgebraFeeManager(address)\":{\"notice\":\"Emitted when a AlgebraFeeManager address change proposed\"},\"TokensWithdrawal(address,address,uint256)\":{\"notice\":\"Event emitted when a fees has been claimed\"}},\"kind\":\"user\",\"methods\":{\"acceptAlgebraFeeChangeProposal(uint16)\":{\"notice\":\"Accepts the proposed new Algebra fee\"},\"acceptAlgebraFeeManagerRole()\":{\"notice\":\"accept Algebra FeeManager role\"},\"cancelAlgebraFeeChangeProposal()\":{\"notice\":\"Cancels Algebra fee change proposal\"},\"changeAlgebraFeeReceiver(address)\":{\"notice\":\"Change Algebra community fee part receiver\"},\"changeCommunityFeeReceiver(address)\":{\"notice\":\"Change community fee receiver address\"},\"proposeAlgebraFeeChange(uint16)\":{\"notice\":\"Proposes new Algebra fee value for protocol\"},\"transferAlgebraFeeManagerRole(address)\":{\"notice\":\"Transfers Algebra fee manager role\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdraw protocol fees from vault\"},\"withdrawTokens((address,uint256)[])\":{\"notice\":\"Withdraw protocol fees from vault. Used to claim fees for multiple tokens\"}},\"notice\":\"Community fee from pools is sent here, if it is enabled\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/vault/IAlgebraCommunityVault.sol\":\"IAlgebraCommunityVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/vault/IAlgebraCommunityVault.sol\":{\"keccak256\":\"0x24fad3648346700d372d65ca449494553db47dcb03d2cd0acaf7677a5f7b1391\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c15473dd606ee905423bf27fba68ce7d9964b43f728611db22468dd36581caf4\",\"dweb:/ipfs/QmSa7ratHBjLQ3xrAoNXvM3pBhtLYBqRuMx8rnYy5S2se4\"]}},\"version\":1}"}},"contracts/interfaces/vault/IAlgebraVaultFactory.sol":{"IAlgebraVaultFactory":{"abi":[{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"creator","type":"address"},{"internalType":"address","name":"deployer","type":"address"},{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"}],"name":"createVaultForPool","outputs":[{"internalType":"address","name":"communityFeeVault","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getVaultForPool","outputs":[{"internalType":"address","name":"communityFeeVault","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"createVaultForPool(address,address,address,address,address)":"b8a1d3c6","getVaultForPool(address)":"7570e389"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"createVaultForPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"communityFeeVault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getVaultForPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"communityFeeVault\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Version: Algebra Integral\",\"kind\":\"dev\",\"methods\":{\"createVaultForPool(address,address,address,address,address)\":{\"params\":{\"pool\":\"the address of Algebra Integral pool\"},\"returns\":{\"communityFeeVault\":\"the address of community fee vault\"}},\"getVaultForPool(address)\":{\"params\":{\"pool\":\"the address of Algebra Integral pool\"},\"returns\":{\"communityFeeVault\":\"the address of community fee vault\"}}},\"title\":\"The interface for the Algebra Vault Factory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createVaultForPool(address,address,address,address,address)\":{\"notice\":\"creates the community fee vault for the pool if needed\"},\"getVaultForPool(address)\":{\"notice\":\"returns address of the community fee vault for the pool\"}},\"notice\":\"This contract can be used for automatic vaults creation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/vault/IAlgebraVaultFactory.sol\":\"IAlgebraVaultFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/vault/IAlgebraVaultFactory.sol\":{\"keccak256\":\"0xcdaae6cd6af79c4f344e673fe886a980ef5203b15b49f7a466c336c0152ce6ae\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fa2d3073bd4ca013e2769cf0fa5b68f32cec4fa53a6cc66adb59d86e6293cf15\",\"dweb:/ipfs/QmcwveJdf3JLAPfFZShijKTTxMTP4joDDuSuFboXBe711S\"]}},\"version\":1}"}},"contracts/libraries/Constants.sol":{"Constants":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x2D PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"244:1205:28:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;244:1205:28;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000814000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"244:1205:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Constants moved to the library, not the base contract, to further emphasize their constant nature\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Contains common constants for Algebra contracts\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Constants.sol\":\"Constants\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/libraries/Constants.sol\":{\"keccak256\":\"0x43f5e9ef4088f1301bc80f6446114ab1f3bdd58063fc6b107f8b1598b80e4915\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://496cb38eedc163919d59a6a196d2e566771e711b6e5e4a80a11efaa7b903c03a\",\"dweb:/ipfs/QmVf5trKkBGeXeuDsiuzXDGPVEpJRvaQsdL5Dr2HZ8ZePq\"]}},\"version\":1}"}},"contracts/libraries/FullMath.sol":{"FullMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x2D PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"354:5026:29:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;354:5026:29;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000814000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"354:5026:29:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Handles \\\"phantom overflow\\\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Contains 512-bit math functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/FullMath.sol\":\"FullMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x6e562130eac2d18d5527fc12115e83a3aa0955f6be89531b6d0d5977f0784cf7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5226566361b64a277a523430449d398434aa9956ec53ab96120bdb5eed0d36c\",\"dweb:/ipfs/QmdmE85FDGgaZBFb9WDamJQpvSx6BrpYUutudSzoRVmxMv\"]}},\"version\":1}"}},"contracts/libraries/SafeTransfer.sol":{"SafeTransfer":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000814000a","opcodes":"PUSH1 0x2D PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"521:1313:30:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:1313:30;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000814000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP EXP ","sourceMap":"521:1313:30:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Credit to Solmate under MIT license: https://github.com/transmissions11/solmate/blob/ed67feda67b24fdeff8ad1032360f0ee6047ba0a/src/utils/SafeTransferLib.solPlease note that this library does not check if the token has a code! That responsibility is delegated to the caller.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeTransfer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Safe ERC20 transfer library that gracefully handles missing return values.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeTransfer.sol\":\"SafeTransfer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/pool/IAlgebraPoolErrors.sol\":{\"keccak256\":\"0x5ee2c56b4acc88f0c4649e39ebb0f8452381e13305bd297b53358cbe32c16069\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d25e93950215a98988cf189d2eb1cd0bc41c91d7f190b7e3c5cdfb92651dcfd5\",\"dweb:/ipfs/QmXkA7xk83yJtooAqJSRwUfR7V6iwjsiwbvEfATyasuiEM\"]},\"contracts/libraries/SafeTransfer.sol\":{\"keccak256\":\"0x14e91c94e35c50efcd97e13609f686499c1dfa726ee0b3f6078fa4b99bde9a0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d9a7efa21d03180ded0e99d7ba05abd5c8ebedf2439a5a78091b679eadc4064\",\"dweb:/ipfs/QmVUZPhYPTb2yY9381AL242tfVsb3iWxmE2XwqcN9HG6eW\"]}},\"version\":1}"}}}}}